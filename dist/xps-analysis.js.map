{"version":3,"file":"xps-analysis.js","sources":["../node_modules/.pnpm/is-any-array@1.0.0/node_modules/is-any-array/src/index.js","../node_modules/.pnpm/median-quickselect@1.0.1/node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/.pnpm/ml-array-median@1.1.5/node_modules/ml-array-median/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/.pnpm/ml-array-sequential-fill@1.1.6/node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xIsMonotone.js","../node_modules/.pnpm/ml-array-sum@1.1.5/node_modules/ml-array-sum/lib-es6/index.js","../node_modules/.pnpm/ml-array-mean@1.1.5/node_modules/ml-array-mean/lib-es6/index.js","../node_modules/.pnpm/ml-array-min@1.2.2/node_modules/ml-array-min/lib-es6/index.js","../node_modules/.pnpm/ml-array-max@1.2.3/node_modules/ml-array-max/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyEnsureGrowingX.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyFilterXPositive.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/constants.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/erfinv.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Lorentzian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/PseudoVoigt.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian2D.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/getShapeGenerator.js","../node_modules/.pnpm/ml-savitzky-golay-generalized@2.0.3/node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/.pnpm/ml-gsd@6.6.3/node_modules/ml-gsd/src/gsd.js","../node_modules/.pnpm/ml-array-rescale@1.3.5/node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/inspect.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/mathOperations.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/stat.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/matrix.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/base.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/transpose.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/lu.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/qr.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/svd.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/decompositions.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/jsgraph/addStyle.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/jsgraph/colors.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/jsgraph/getJSGraph.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/jsgraph/getNormalizationAnnotations.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/appendDistinctParameter.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/appendDistinctValue.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/AnalysesManager.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/choleskySolver.js","../node_modules/.pnpm/cuthill-mckee@1.0.0/node_modules/cuthill-mckee/cuthill-mckee.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/utils.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/index.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/airPLS.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/index.js","../node_modules/.pnpm/ml-regression-polynomial@2.2.0/node_modules/ml-regression-polynomial/src/index.js","../node_modules/.pnpm/ml-baseline-correction-regression@1.0.0/node_modules/ml-baseline-correction-regression/src/index.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/iterativePolynomial.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xCheck.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xPadding.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRolling.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingAverage.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingMedian.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingAverage.js","../node_modules/.pnpm/ml-rolling-ball-baseline@1.0.0/node_modules/ml-rolling-ball-baseline/src/rollingBall.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingBall.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingMedian.js","../node_modules/.pnpm/ml-array-normed@1.3.6/node_modules/ml-array-normed/lib-es6/index.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/normalize.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/invert.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/.pnpm/ml-pad-array@2.0.0/node_modules/ml-pad-array/src/index.js","../node_modules/.pnpm/ml-savitzky-golay@5.0.0/node_modules/ml-savitzky-golay/lib-esm/index.js","../node_modules/.pnpm/ml-stat@1.3.3/node_modules/ml-stat/array.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/getNormalizedSpectrum.js","../node_modules/.pnpm/js-quantities@1.7.6/node_modules/js-quantities/build/quantities.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/convertUnit.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/ensureRegexp.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/getConvertedVariable.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/util/getXYSpectrum.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/Analysis.js","../node_modules/.pnpm/ensure-string@0.1.1/node_modules/ensure-string/src/index.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/add2D.js","../node_modules/.pnpm/nmr-processing@1.5.1/node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/profiling.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessing.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convert.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/from/fromJcamp.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/to/toJcamps.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/to/toJcamp.js","../node_modules/.pnpm/common-spectrum@0.40.0/node_modules/common-spectrum/lib-esm/index.js","../src/jsgraph/getAnnotations.js","../node_modules/.pnpm/vamas@0.1.2/node_modules/vamas/src/parser/parse.js","../node_modules/.pnpm/vamas@0.1.2/node_modules/vamas/src/parser/casa/appendCalibration.js","../node_modules/.pnpm/vamas@0.1.2/node_modules/vamas/src/parser/casa/appendComponent.js","../node_modules/.pnpm/vamas@0.1.2/node_modules/vamas/src/parser/casa/appendRegion.js","../node_modules/.pnpm/vamas@0.1.2/node_modules/vamas/src/parser/parseCASA.js","../src/from/mapComponents.js","../src/from/parseRegion.js","../src/from/getNormalizedMeta.js","../src/from/fromVamas.js","../src/peakPicking.js","../src/references.js","../src/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\r\n * Fill an array with sequential numbers\r\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from=0] - first value in the array\r\n * @param {number} [options.to=10] - last value in the array\r\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\r\n * @param {number} [options.step] - if not provided calculated from size\r\n * @return {Array<number>}\r\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size !== 0 && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    // only works with normal array\n    input.length = 0;\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Returns true if x is monotone\n * @param {Array} array\n * @return {boolean}\n */\nexport function xIsMonotone(array) {\n  if (array.length <= 2) {\n    return true;\n  }\n  if (array[0] === array[1]) {\n    // maybe a constant series\n    for (let i = 1; i < array.length - 1; i++) {\n      if (array[i] !== array[i + 1]) return false;\n    }\n    return true;\n  }\n\n  if (array[0] < array[array.length - 1]) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] >= array[i + 1]) return false;\n    }\n  } else {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] <= array[i + 1]) return false;\n    }\n  }\n  return true;\n}\n","import isArray from 'is-any-array';\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isAnyArray from 'is-any-array';\n/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Data must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xyCheck } from './xyCheck';\n\n/**\n * Filters x,y values to allow strictly growing values in x axis.\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @return {DataXY}\n */\nexport function xyEnsureGrowingX(data = {}) {\n  xyCheck(data);\n  const x = Array.from(data.x);\n  const y = Array.from(data.y);\n  let prevX = -Infinity;\n  let ansX = [];\n  let ansY = [];\n\n  for (let index = 0; index < x.length; index++) {\n    if (prevX < x[index]) {\n      ansX.push(x[index]);\n      ansY.push(y[index]);\n      prevX = x[index];\n    }\n  }\n  return { x: ansX, y: ansY };\n}\n","import { xyCheck } from './xyCheck';\n/**\n * Filter out all the points for which x <= 0. Useful to display log scale data\n * @param {DataXY} [data={}]\n * @return {{x:[],y:[]}} An object with the filtered data\n */\n\nexport function xyFilterXPositive(data = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  const newX = [];\n  const newY = [];\n  for (let i = 0; i < x.length; i++) {\n    if (x[i] > 0) {\n      newX.push(x[i]);\n      newY.push(y[i]);\n    }\n  }\n\n  return { x: newX, y: newY };\n}\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n\nexport default function erfinv(x) {\n  let a = 0.147;\n  if (x === 0) return 0;\n  let ln1MinusXSqrd = Math.log(1 - x * x);\n  let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n  let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n  let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n  return secondSqrt * (x > 0 ? 1 : -1);\n}\n","import {\n  ROOT_2LN2,\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nexport class Gaussian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.sd\n      ? Gaussian.widthToFWHM(2 * options.sd)\n      : options.fwhm\n      ? options.fwhm\n      : 500;\n    this.height =\n      options.height === undefined\n        ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a gaussian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = 6] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of gaussian with the current parameters.\n   */\n  fct(x) {\n    return Gaussian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Gaussian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Gaussian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/GaussianFunction.html\n    return Gaussian.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Gaussian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nGaussian.fct = function fct(x, fwhm = 500) {\n  return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n  return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nGaussian.getFactor = function getFactor(area = 0.9999) {\n  return Math.sqrt(2) * erfinv(area);\n};\n","import { ROOT_THREE } from '../util/constants';\n\nexport class Lorentzian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined ? 2 / Math.PI / this.fwhm : options.height;\n  }\n  /**\n   * Calculate a lorentzian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a lorentzian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of lorentzian with the current parameters.\n   */\n  fct(x) {\n    return Lorentzian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Lorentzian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Lorentzian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [fwhm] - Full Width at Half Maximum.\n   * @returns {number} width between the inflection points\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Lorentzian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [width] Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    return Lorentzian.widthToFWHM(width);\n  }\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nLorentzian.fct = function fct(x, fwhm) {\n  const squareFWHM = fwhm * fwhm;\n  return squareFWHM / (4 * Math.pow(x, 2) + squareFWHM);\n};\n\n/**\n * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [fwhm] - Full Width at Half Maximum.\n * @returns {number} width between the inflection points\n */\nLorentzian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_THREE;\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [width] Width between the inflection points\n * @returns {number} fwhm\n */\nLorentzian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_THREE;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nLorentzian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n\n  return (height * Math.PI * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nLorentzian.getFactor = function getFactor(area = 0.9999) {\n  return 2 * Math.tan(Math.PI * (area - 0.5));\n};\n","import {\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_2LN2_MINUS_ONE,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\n\nimport { Gaussian } from './Gaussian';\nimport { Lorentzian } from './Lorentzian';\n\nexport class PseudoVoigt {\n  /**\n   * @param {object} [options={}]\n   * @param {number} [options.height=1/(mu*FWHM/sqrt(4*LN2/PI)+(1-mu)*fwhm*PI*0.5)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm=500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.mu=0.5] - ratio of gaussian contribution.\n   */\n\n  constructor(options = {}) {\n    this.mu = options.mu === undefined ? 0.5 : options.mu;\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined\n        ? 1 /\n          ((this.mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * this.fwhm +\n            ((1 - this.mu) * this.fwhm * Math.PI) / 2)\n        : options.height;\n  }\n\n  /**\n   * Calculate a linear combination of gaussian and lorentzian function width an same full width at half maximum\n   * @param { object } [options = {}]\n   * @param { number } [options.factor = 2 * Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm in the calculation of the length.Default covers 99.99 % of area.\n   * @param { number } [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return { object } - { fwhm, data<Float64Array>} - An with the number of points at half maximum and the array of y values covering the 99.99 % of the area.\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n    if (!length) {\n      length = Math.ceil(this.fwhm * factor);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n\n    let data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a linear combination of Gaussian and Lorentzian shapes where the full width at half maximum are the same for both kind of shapes (see README for equation).\n   * @param {number} [x] x value to calculate.\n   * @returns {number} - the y value of a pseudo voigt with the current parameters.\n   */\n\n  fct(x) {\n    return PseudoVoigt.fct(x, this.fwhm, this.mu);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999] - required area to be coverage\n   * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n   * @returns {number}\n   */\n  getFactor(area = 0.9999, mu = this.mu) {\n    return PseudoVoigt.getFactor(area, mu);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n  getArea() {\n    return PseudoVoigt.getArea(this.fwhm, { height: this.height, mu: this.mu });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n   * @param {number} width - width between the inflection points\n   * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n   * @returns {number} Full Width at Half Maximum (FMHM).\n   */\n  widthToFWHM(width, mu) {\n    return PseudoVoigt.widthToFWHM(width, mu);\n  }\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @param {number} [mu] - ratio of gaussian contribution.\n   * @returns {number} width between the inflection points.\n   */\n  fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n    return PseudoVoigt.fwhmToWidth(fwhm, mu);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n\n  /**\n   * set a new mu\n   * @param {number} mu - ratio of gaussian contribution.\n   */\n  setMu(mu) {\n    this.mu = mu;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @param {number} [mu=0.5] - ratio of gaussian contribution.\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nPseudoVoigt.fct = function fct(x, fwhm, mu = 0.5) {\n  return (1 - mu) * Lorentzian.fct(x, fwhm) + mu * Gaussian.fct(x, fwhm);\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n * @param {number} width - width between the inflection points\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} Full Width at Half Maximum (FMHM).\n */\nPseudoVoigt.widthToFWHM = function widthToFWHM(width, mu = 0.5) {\n  return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param {number} fwhm - Full Width at Half Maximum.\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} width between the inflection points.\n */\nPseudoVoigt.fwhmToWidth = function fwhmToWidth(fwhm, mu = 0.5) {\n  return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @param {number} [options.mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nPseudoVoigt.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1, mu = 0.5 } = options;\n  return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999] - required area to be coverage\n * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n * @returns {number}\n */\nPseudoVoigt.getFactor = function getFactor(area = 0.9999, mu = 0.5) {\n  return mu < 1 ? Lorentzian.getFactor(area) : Gaussian.getFactor(area);\n};\n","import { ROOT_2LN2, GAUSSIAN_EXP_FACTOR } from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nlet axis = ['x', 'y'];\n\nexport class Gaussian2D {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*xFWHM*yFWHM)] Define the height of the peak, by default area=1 (normalized).\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM used if x or y has not the fwhm property.\n   * @param {object} [options.x] - Options for x axis.\n   * @param {number} [options.x.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for x axis.\n   * @param {number} [options.x.sd] - Standard deviation for x axis, if it's defined options.x.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   * @param {object} [options.y] - Options for y axis.\n   * @param {number} [options.y.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for y axis.\n   * @param {number} [options.y.sd] - Standard deviation for y axis, if it's defined options.y.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    let { fwhm: globalFWHM = 500 } = options;\n\n    for (let i of axis) {\n      let fwhm;\n      if (!options[i]) {\n        fwhm = globalFWHM;\n      } else {\n        fwhm = options[i].sd\n          ? Gaussian2D.widthToFWHM(2 * options[i].sd)\n          : options[i].fwhm || globalFWHM;\n      }\n      this[i] = { fwhm };\n    }\n\n    this.height =\n      options.height === undefined\n        ? -GAUSSIAN_EXP_FACTOR / Math.PI / this.x.fwhm / this.y.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a Gaussian2D shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.x] - parameter for x axis.\n   * @param {number} [options.x.length=fwhm*factor+1] - length on x axis.\n   * @param {number} [options.x.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.y] - parameter for y axis.\n   * @param {number} [options.y.length=fwhm*factor+1] - length on y axis.\n   * @param {number} [options.y.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @return {Array<Float64Array>} - z values.\n   */\n\n  getData(options = {}) {\n    let { x = {}, y = {}, factor = this.getFactor(), length } = options;\n\n    let xLength = x.length || length;\n    if (!xLength) {\n      let { factor: xFactor = factor } = x;\n      xLength = Math.min(Math.ceil(this.x.fwhm * xFactor), Math.pow(2, 25) - 1);\n      if (xLength % 2 === 0) xLength++;\n    }\n\n    let yLength = y.length || length;\n    if (!yLength) {\n      let { factor: yFactor = factor } = y;\n      yLength = Math.min(Math.ceil(this.y.fwhm * yFactor), Math.pow(2, 25) - 1);\n      if (yLength % 2 === 0) yLength++;\n    }\n\n    const xCenter = (xLength - 1) / 2;\n    const yCenter = (yLength - 1) / 2;\n    const data = new Array(xLength);\n    for (let i = 0; i < xLength; i++) {\n      data[i] = new Array(yLength);\n    }\n\n    for (let i = 0; i < xLength; i++) {\n      for (let j = 0; j < yLength; j++) {\n        data[i][j] = this.fct(i - xCenter, j - yCenter) * this.height;\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Return the intensity value of a 2D gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @param {number} y - y value to calculate.\n   * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n   */\n  fct(x, y) {\n    return Gaussian2D.fct(x, y, this.x.fwhm, this.y.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific volume coverage.\n   * @param {number} [volume=0.9999]\n   * @returns {number}\n   */\n  getFactor(volume = 0.9999) {\n    return Gaussian2D.getFactor(volume);\n  }\n\n  /**\n   * Calculate the volume of the shape.\n   * @returns {number} - returns the volume.\n   */\n\n  getVolume() {\n    return Gaussian2D.getVolume(this.x.fwhm, this.y.fwhm, {\n      height: this.height,\n    });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/Gaussian2DFunction.html\n    return Gaussian2D.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.x.fwhm) {\n    return Gaussian2D.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   * @param {string|Array<string>} axisLabel - label of axis, if it is undefined fwhm is set to both axis.\n   */\n  setFWHM(fwhm, axisLabel) {\n    if (!axisLabel) axisLabel = axis;\n    if (!Array.isArray(axisLabel)) axisLabel = [axisLabel];\n    for (let i of axisLabel) {\n      let axisName = i.toLowerCase();\n      if (axisName !== 'y' && axisName !== 'x') {\n        throw new Error('axis label should be x or y');\n      }\n      this[axisName].fwhm = fwhm;\n    }\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a Gaussian2D shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} y - y value to calculate.\n * @param {number} fwhmX - full width half maximum in the x axis.\n * @param {number} fwhmY - full width half maximum in the y axis.\n * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n */\nGaussian2D.fct = function fct(x, y, xFWHM = 500, yFWHM = 500) {\n  return Math.exp(\n    GAUSSIAN_EXP_FACTOR * (Math.pow(x / xFWHM, 2) + Math.pow(y / yFWHM, 2)),\n  );\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian2D.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian2D.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the volume of a specific shape.\n * @param {number} xFWHM - Full width at half maximum for x axis.\n * @param {number} yFWHM - Full width at half maximum for y axis.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum z value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian2D.getVolume = function getVolume(xFWHM, yFWHM, options = {}) {\n  let { height = 1 } = options;\n  return (height * Math.PI * xFWHM * yFWHM) / Math.LN2 / 4;\n};\n\n/**@TODO look for a better factor\n * Calculate the number of times FWHM allows to reach a specific volume coverage.\n * @param {number} [volume=0.9999]\n * @returns {number}\n */\nGaussian2D.getFactor = function getFactor(volume = 0.9999) {\n  return Math.sqrt(2) * erfinv(volume);\n};\n","import { Gaussian } from '../classes/Gaussian';\nimport { Gaussian2D } from '../classes/Gaussian2D';\nimport { Lorentzian } from '../classes/Lorentzian';\nimport { PseudoVoigt } from '../classes/PseudoVoigt';\n\nexport function getShapeGenerator(options) {\n  let { kind = 'Gaussian', options: shapeOptions } = options;\n  switch (kind.toLowerCase().replace(/[^a-z^0-9]/g, '')) {\n    case 'gaussian':\n      return new Gaussian(shapeOptions);\n    case 'lorentzian':\n      return new Lorentzian(shapeOptions);\n    case 'pseudovoigt':\n      return new PseudoVoigt(shapeOptions);\n    case 'gaussian2d':\n      return new Gaussian2D(shapeOptions);\n    default:\n      throw new Error(`Unknown kind: ${kind}`);\n  }\n}\n","/**\n * Apply Savitzky Golay algorithm\n * @param {array} [ys] Array of y values\n * @param {array|number} [xs] Array of X or deltaX\n * @param {object} [options={}]\n * @param {number} [options.windowSize=9]\n * @param {number} [options.derivative=0]\n * @param {number} [options.polynomial=3]\n * @return {array} Array containing the new ys (same length)\n */\n\nexport default function SavitzkyGolay(ys, xs, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > ys.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${ys.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = ys.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(xs)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(xs, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * ys[l];\n      d2 += wg2[l] * ys[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(xs, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(xs, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * ys[l + i - windowSize];\n    if (!constantH) hs = getHs(xs, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import { getShapeGenerator } from 'ml-peak-shape-generator';\nimport SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {object} data - Object data with x and y arrays\n * @param {Array<number>} [data.x] - Independent variable\n * @param {Array<number>} [data.y] - Dependent variable\n * @param {object} [options={}] - Options object\n * @param {object} [options.shape={}] - Object that specified the kind of shape to calculate the FWHM instead of width between inflection points. see https://mljs.github.io/peak-shape-generator/#inflectionpointswidthtofwhm\n * @param {object} [options.shape.kind='gaussian']\n * @param {object} [options.shape.options={}]\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(data, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    shape = {},\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  let { y: yIn, x } = data;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (maxCriteria === false) {\n    for (let i = 0; i < y.length; i++) {\n      y[i] *= -1;\n    }\n  }\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n  for (let i = 0; i < y.length; i++) {\n    y[i] -= noiseLevel;\n  }\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = [];\n  let intervalL = [];\n  let intervalR = [];\n  let broadMask = [];\n\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    // console.log('pasa', y[i], dY[i], ddY[i]);\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      minddY.push(i);\n      broadMask.push(Math.abs(ddY[i]) <= broadRatio * maxDdy);\n    }\n  }\n\n  let widthProcessor = shape.kind\n    ? getShapeGenerator(shape.kind, shape.options).widthToFWHM\n    : (x) => x;\n\n  let signals = [];\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        let width = Math.abs(intervalR[possible].x - intervalL[possible].x);\n        signals.push({\n          index: minddY[j],\n          x: frequency,\n          y: maxCriteria\n            ? yData[minddY[j]] + noiseLevel\n            : -yData[minddY[j]] - noiseLevel,\n          width: widthProcessor(width),\n          soft: broadMask[j],\n        });\n\n        signals[signals.length - 1].left = intervalL[possible];\n        signals[signals.length - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signals.length - 1].height =\n            heightFactor *\n            (signals[signals.length - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","export function addStyle(serie, spectrum, options = {}) {\n    let { color = '#A9A9A9', opacity = 1, lineWidth = 1 } = options;\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    if (color.match(/#[0-9A-F]{6}$/i)) {\n        color = (color + ((opacity * 255) >> 0).toString(16)).toUpperCase();\n    }\n    else {\n        color = color.replace(/rgb ?\\((.*)\\)/, `rgba($1,${opacity})`);\n    }\n    serie.style = [\n        {\n            name: 'unselected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth,\n                    dash: 1,\n                },\n            },\n        },\n        {\n            name: 'selected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth + 2,\n                    dash: 1,\n                },\n            },\n        },\n    ];\n    serie.name = spectrum.label || spectrum.id;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkU3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanNncmFwaC9hZGRTdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFVBQVUsUUFBUSxDQUN0QixLQUE4QixFQUM5QixRQUFrQixFQUNsQixVQUF3QixFQUFFO0lBRTFCLElBQUksRUFBRSxLQUFLLEdBQUcsU0FBUyxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUNoRSxpRUFBaUU7SUFDakUsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7UUFDakMsS0FBSyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDckU7U0FBTTtRQUNMLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxXQUFXLE9BQU8sR0FBRyxDQUFDLENBQUM7S0FDL0Q7SUFDRCxLQUFLLENBQUMsS0FBSyxHQUFHO1FBQ1o7WUFDRSxJQUFJLEVBQUUsWUFBWTtZQUNsQixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFO29CQUNKLEtBQUs7b0JBQ0wsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCLElBQUksRUFBRSxDQUFDO2lCQUNSO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFVBQVU7WUFDaEIsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixLQUFLO29CQUNMLEtBQUssRUFBRSxTQUFTLEdBQUcsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO0tBQ0YsQ0FBQztJQUNGLEtBQUssQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsRUFBRSxDQUFDO0FBQzdDLENBQUMifQ==","export const COLORS = [\n    '#FFB300',\n    '#803E75',\n    '#FF6800',\n    '#A6BDD7',\n    '#C10020',\n    '#CEA262',\n    '#817066',\n    '#007D34',\n    '#F6768E',\n    '#00538A',\n    '#FF7A5C',\n    '#53377A',\n    '#FF8E00',\n    '#B32851',\n    '#F4C800',\n    '#7F180D',\n    '#93AA00',\n    '#593315',\n    '#F13A13',\n    '#232C16',\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRztJQUNwQixTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztDQUNWLENBQUMifQ==","import { xyFilterXPositive } from 'ml-spectra-processing';\nimport { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n */\nexport function getJSGraph(analyses, options = {}) {\n    const { colors = COLORS, opacities = [1], linesWidth = [1], selector = {}, normalization, xAxis = {}, yAxis = {}, } = options;\n    let series = [];\n    let xLabel = '';\n    let yLabel = '';\n    for (let i = 0; i < analyses.length; i++) {\n        const analysis = analyses[i];\n        let serie = {};\n        let currentData = analysis.getNormalizedSpectrum({\n            selector,\n            normalization,\n        });\n        if (!currentData)\n            continue;\n        if (!xLabel)\n            xLabel = currentData.variables.x.label;\n        if (!yLabel)\n            yLabel = currentData.variables.y.label;\n        addStyle(serie, analysis, {\n            color: colors[i % colors.length],\n            opacity: opacities[i % opacities.length],\n            lineWidth: linesWidth[i % linesWidth.length],\n        });\n        serie.data = {\n            x: currentData.variables.x.data,\n            y: currentData.variables.y.data,\n        };\n        if (xAxis.logScale) {\n            serie.data = xyFilterXPositive(serie.data);\n        }\n        series.push(serie);\n    }\n    return {\n        axes: {\n            x: {\n                label: xLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...xAxis,\n            },\n            y: {\n                label: yLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...yAxis,\n            },\n        },\n        series,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SlNHcmFwaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc2dyYXBoL2dldEpTR3JhcGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFLMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBdUJsQzs7R0FFRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsUUFBb0IsRUFBRSxVQUEwQixFQUFFO0lBQzNFLE1BQU0sRUFDSixNQUFNLEdBQUcsTUFBTSxFQUNmLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNmLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNoQixRQUFRLEdBQUcsRUFBRSxFQUNiLGFBQWEsRUFDYixLQUFLLEdBQUcsRUFBRSxFQUNWLEtBQUssR0FBRyxFQUFFLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFDWixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFFaEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztRQUN4QyxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMscUJBQXFCLENBQUM7WUFDL0MsUUFBUTtZQUNSLGFBQWE7U0FDZCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVztZQUFFLFNBQVM7UUFDM0IsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNO1lBQUUsTUFBTSxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNwRCxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUN4QixLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ2hDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDeEMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztTQUM3QyxDQUFDLENBQUM7UUFDSCxLQUFLLENBQUMsSUFBSSxHQUFHO1lBQ1gsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7WUFDL0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7U0FDaEMsQ0FBQztRQUVGLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUNsQixLQUFLLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDcEI7SUFDRCxPQUFPO1FBQ0wsSUFBSSxFQUFFO1lBQ0osQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1lBQ0QsQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1NBQ0Y7UUFDRCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUMifQ==","export function getNormalizationAnnotations(filter = {}, boundary = { y: { min: '0px', max: '2000px' } }) {\n    let { exclusions = [] } = filter;\n    let annotations = [];\n    exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n    annotations = exclusions.map((exclusion) => {\n        let annotation = {\n            type: 'rect',\n            position: [\n                { x: exclusion.from, y: boundary.y.min },\n                { x: exclusion.to, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        };\n        return annotation;\n    });\n    if (filter.from !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n                { x: filter.from, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    if (filter.to !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: filter.to, y: boundary.y.min },\n                { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    return annotations;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE1BQU0sVUFBVSwyQkFBMkIsQ0FDekMsU0FBNEIsRUFBRSxFQUM5QixRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUUvQyxJQUFJLEVBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQztJQUVqQyxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDckIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDekMsSUFBSSxVQUFVLEdBQUc7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDeEMsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdkM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQztRQUNGLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM3QixXQUFXLENBQUMsSUFBSSxDQUFDO1lBQ2YsSUFBSSxFQUFFLE1BQU07WUFDWixRQUFRLEVBQUU7Z0JBQ1IsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDakQsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdEM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQzNCLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDbkMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTthQUNsRDtZQUNELFdBQVcsRUFBRSxDQUFDO1lBQ2QsU0FBUyxFQUFFLHFCQUFxQjtTQUNqQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUMifQ==","export function appendDistinctParameter(values, key, value) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            values: [],\n            count: 0,\n        };\n    }\n    if (!values[key].values.includes(value)) {\n        values[key].values.push(value);\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RQYXJhbWV0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9hcHBlbmREaXN0aW5jdFBhcmFtZXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQXFDLEVBQ3JDLEdBQVcsRUFDWCxLQUFhO0lBRWIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsTUFBTSxFQUFFLEVBQUU7WUFDVixLQUFLLEVBQUUsQ0FBQztTQUNULENBQUM7S0FDSDtJQUNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN2QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQztJQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN0QixDQUFDIn0=","export function appendDistinctValue(values, key) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            count: 0,\n        };\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RWYWx1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FwcGVuZERpc3RpbmN0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxNQUFtQyxFQUNuQyxHQUFXO0lBRVgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsS0FBSyxFQUFFLENBQUM7U0FDVCxDQUFDO0tBQ0g7SUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDdEIsQ0FBQyJ9","import { appendDistinctParameter } from './util/appendDistinctParameter';\nimport { appendDistinctValue } from './util/appendDistinctValue';\nexport class AnalysesManager {\n    constructor() {\n        this.analyses = [];\n    }\n    addAnalysis(analysis) {\n        let index = this.getAnalysisIndex(analysis.id);\n        if (index === undefined) {\n            this.analyses.push(analysis);\n        }\n        else {\n            this.analyses[index] = analysis;\n        }\n    }\n    getAnalyses(options = {}) {\n        const { ids } = options;\n        let analyses = [];\n        for (const analysis of this.analyses) {\n            if (!ids || ids.includes(analysis.id)) {\n                analyses.push(analysis);\n            }\n        }\n        return analyses;\n    }\n    getSpectra() {\n        const spectra = [];\n        for (const analysis of this.analyses) {\n            spectra.push(...analysis.spectra);\n        }\n        return spectra;\n    }\n    /**\n     * Get an array of objects (key + count) of all the titles\n     */\n    getDistinctTitles() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.title) {\n                appendDistinctValue(values, spectrum.title);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the units\n     */\n    getDistinctUnits() {\n        var _a;\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    const units = (_a = spectrum.variables[key].units) === null || _a === void 0 ? void 0 : _a.replace(/\\s+\\[.*/, '');\n                    if (units) {\n                        appendDistinctValue(values, units);\n                    }\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the labels\n     */\n    getDistinctLabels() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    appendDistinctValue(values, spectrum.variables[key].label.replace(/\\s+\\[.*/, ''));\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the dataTypes\n     */\n    getDistinctDataTypes() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.dataType) {\n                appendDistinctValue(values, spectrum.dataType);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the meta\n     */\n    getDistinctMeta() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.meta) {\n                for (let key in spectrum.meta) {\n                    appendDistinctParameter(values, key, spectrum.meta[key]);\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    removeAllAnalyses() {\n        this.analyses.splice(0);\n    }\n    /**\n     * Remove the analysis from the AnalysesManager for the specified id\n     */\n    removeAnalysis(id) {\n        let index = this.getAnalysisIndex(id);\n        if (index === undefined)\n            return undefined;\n        return this.analyses.splice(index, 1);\n    }\n    /**\n     * Returns the index of the analysis in the analyses array\n     */\n    getAnalysisIndex(id) {\n        if (!id)\n            return undefined;\n        for (let i = 0; i < this.analyses.length; i++) {\n            let analysis = this.analyses[i];\n            if (analysis.id === id)\n                return i;\n        }\n        return undefined;\n    }\n    /**\n     * Checks if the ID of an analysis exists in the AnalysesManager\n     */\n    includes(id) {\n        const index = this.getAnalysisIndex(id);\n        return index === undefined ? false : !isNaN(index);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzZXNNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuYWx5c2VzTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU1qRSxNQUFNLE9BQU8sZUFBZTtJQUcxQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxXQUFXLENBQUMsUUFBa0I7UUFDbkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxVQUE4QixFQUFFO1FBQ2pELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDeEIsSUFBSSxRQUFRLEdBQWUsRUFBRSxDQUFDO1FBQzlCLEtBQUssTUFBTSxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRU0sVUFBVTtRQUNmLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUks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","// Based on https://github.com/scijs/cholesky-solve\r\n\r\n/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Eric Arnebäck\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\n\r\nfunction ldlSymbolic(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n + 1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Lp /* output of size n + 1, not defined on input */,\r\n  Parent /* output of size n, not defined on input */,\r\n  Lnz /* output of size n, not defined on input */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let i, k, p, kk, p2;\r\n\r\n  for (k = 0; k < n; k++) {\r\n    /* L(k,:) pattern: all nodes reachable in etree from nz in A(0:k-1,k) */\r\n    Parent[k] = -1; /* parent of k is not yet known */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      /* A (i,k) is nonzero (original or permuted A) */\r\n      i = Ai[p];\r\n\r\n      if (i < k) {\r\n        /* follow path from i to root of etree, stop at flagged node */\r\n        for (; Flag[i] !== k; i = Parent[i]) {\r\n          /* find parent of i if not yet determined */\r\n          if (Parent[i] === -1) Parent[i] = k;\r\n          Lnz[i]++; /* L (k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* construct Lp index array from Lnz column counts */\r\n  Lp[0] = 0;\r\n  for (k = 0; k < n; k++) {\r\n    Lp[k + 1] = Lp[k] + Lnz[k];\r\n  }\r\n}\r\n\r\nfunction ldlNumeric(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n+1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Ax /* input of size nz=Ap[n], not modified */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Parent /* input of size n, not modified */,\r\n  Lnz /* output of size n, not defn. on input */,\r\n  Li /* output of size lnz=Lp[n], not defined on input */,\r\n  Lx /* output of size lnz=Lp[n], not defined on input */,\r\n  D /* output of size n, not defined on input */,\r\n  Y /* workspace of size n, not defn. on input or output */,\r\n  Pattern /* workspace of size n, not defn. on input or output */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let yi, lKi;\r\n  let i, k, p, kk, p2, len, top;\r\n  for (k = 0; k < n; k++) {\r\n    /* compute nonzero Pattern of kth row of L, in topological order */\r\n    Y[k] = 0.0; /* Y(0:k) is now all zero */\r\n    top = n; /* stack for pattern is empty */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      i = Ai[p]; /* get A(i,k) */\r\n      if (i <= k) {\r\n        Y[i] += Ax[p]; /* scatter A(i,k) into Y (sum duplicates) */\r\n        for (len = 0; Flag[i] !== k; i = Parent[i]) {\r\n          Pattern[len++] = i; /* L(k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n        while (len > 0) Pattern[--top] = Pattern[--len];\r\n      }\r\n    }\r\n    /* compute numerical values kth row of L (a sparse triangular solve) */\r\n    D[k] = Y[k]; /* get D(k,k) and clear Y(k) */\r\n    Y[k] = 0.0;\r\n    for (; top < n; top++) {\r\n      i = Pattern[top]; /* Pattern[top:n-1] is pattern of L(:,k) */\r\n      yi = Y[i]; /* get and clear Y(i) */\r\n      Y[i] = 0.0;\r\n      p2 = Lp[i] + Lnz[i];\r\n      for (p = Lp[i]; p < p2; p++) {\r\n        Y[Li[p]] -= Lx[p] * yi;\r\n      }\r\n      lKi = yi / D[i]; /* the nonzero entry L(k,i) */\r\n      D[k] -= lKi * yi;\r\n      Li[p] = k; /* store L(k,i) in column form of L */\r\n      Lx[p] = lKi;\r\n      Lnz[i]++; /* increment count of nonzeros in col i */\r\n    }\r\n\r\n    if (D[k] === 0.0) return k; /* failure, D(k,k) is zero */\r\n  }\r\n\r\n  return n; /* success, diagonal of D is all nonzero */\r\n}\r\n\r\nfunction ldlLsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = 0; j < n; j++) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[Li[p]] -= Lx[p] * X[j];\r\n    }\r\n  }\r\n}\r\nfunction ldlDsolve(\r\n  n /* D is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  D /* input of size n, not modified */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] /= D[j];\r\n  }\r\n}\r\nfunction ldlLTsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = n - 1; j >= 0; j--) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[j] -= Lx[p] * X[Li[p]];\r\n    }\r\n  }\r\n}\r\n\r\nfunction ldlPerm(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] = B[P[j]];\r\n  }\r\n}\r\n\r\nfunction ldlPermt(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[P[j]] = B[j];\r\n  }\r\n}\r\n\r\nfunction prepare(M, n, P) {\r\n  // if a permutation was specified, apply it.\r\n  if (P) {\r\n    let Pinv = new Array(n);\r\n\r\n    for (let k = 0; k < n; k++) {\r\n      Pinv[P[k]] = k;\r\n    }\r\n\r\n    let Mt = []; // scratch memory\r\n    // Apply permutation. We make M into P*M*P^T\r\n    for (let a = 0; a < M.length; ++a) {\r\n      let ar = Pinv[M[a][0]];\r\n      let ac = Pinv[M[a][1]];\r\n\r\n      // we only store the upper-diagonal elements(since we assume matrix is symmetric, we only need to store these)\r\n      // if permuted element is below diagonal, we simply transpose it.\r\n      if (ac < ar) {\r\n        let t = ac;\r\n        ac = ar;\r\n        ar = t;\r\n      }\r\n\r\n      Mt[a] = [];\r\n      Mt[a][0] = ar;\r\n      Mt[a][1] = ac;\r\n      Mt[a][2] = M[a][2];\r\n    }\r\n\r\n    M = Mt; // copy scratch memory.\r\n  } else {\r\n    // if P argument is null, we just use an identity permutation.\r\n    P = [];\r\n    for (let i = 0; i < n; ++i) {\r\n      P[i] = i;\r\n    }\r\n  }\r\n\r\n  // The sparse matrix we are decomposing is A.\r\n  // Now we shall create A from M.\r\n  let Ap = new Array(n + 1);\r\n  let Ai = new Array(M.length);\r\n  let Ax = new Array(M.length);\r\n\r\n  // count number of non-zero elements in columns.\r\n  let LNZ = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    LNZ[i] = 0;\r\n  }\r\n  for (let a = 0; a < M.length; ++a) {\r\n    LNZ[M[a][1]]++;\r\n  }\r\n\r\n  Ap[0] = 0;\r\n  for (let i = 0; i < n; ++i) {\r\n    Ap[i + 1] = Ap[i] + LNZ[i];\r\n  }\r\n\r\n  let coloffset = [];\r\n  for (let a = 0; a < n; ++a) {\r\n    coloffset[a] = 0;\r\n  }\r\n\r\n  // go through all elements in M, and add them to sparse matrix A.\r\n  for (let i = 0; i < M.length; ++i) {\r\n    let e = M[i];\r\n    let col = e[1];\r\n\r\n    let adr = Ap[col] + coloffset[col];\r\n    Ai[adr] = e[0];\r\n    Ax[adr] = e[2];\r\n\r\n    coloffset[col]++;\r\n  }\r\n\r\n  let D = new Array(n);\r\n  let Y = new Array(n);\r\n  let Lp = new Array(n + 1);\r\n  let Parent = new Array(n);\r\n  let Lnz = new Array(n);\r\n  let Flag = new Array(n);\r\n  let Pattern = new Array(n);\r\n  let bp1 = new Array(n);\r\n  let x = new Array(n);\r\n  let d;\r\n\r\n  ldlSymbolic(n, Ap, Ai, Lp, Parent, Lnz, Flag);\r\n\r\n  let Lx = new Array(Lp[n]);\r\n  let Li = new Array(Lp[n]);\r\n\r\n  d = ldlNumeric(n, Ap, Ai, Ax, Lp, Parent, Lnz, Li, Lx, D, Y, Pattern, Flag);\r\n\r\n  if (d === n) {\r\n    return function (b) {\r\n      ldlPerm(n, bp1, b, P);\r\n      ldlLsolve(n, bp1, Lp, Li, Lx);\r\n      ldlDsolve(n, bp1, D);\r\n      ldlLTsolve(n, bp1, Lp, Li, Lx);\r\n      ldlPermt(n, x, bp1, P);\r\n\r\n      return x;\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { prepare as default };\r\n","'use strict'\n\nmodule.exports = cuthillMckee\n\nfunction compareNum(a, b) { return a - b }\n\nfunction cuthillMckee(list, n) {\n  var adj = new Array(n)\n  var visited = new Array(n)\n  for(var i=0; i<n; ++i) {\n    adj[i]     = []\n    visited[i] = false\n  }\n\n  for(var i=0; i<list.length; ++i) {\n    var l = list[i]\n    adj[l[0]].push(l[1])\n  }\n\n  var toVisit = new Array(n)\n  var eol = 0\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    if(visited[i]) {\n      continue\n    }\n    toVisit[eol++] = i\n    visited[i] = true\n    while(ptr < eol) {\n      var v = toVisit[ptr++]\n      var nbhd = adj[v]\n      nbhd.sort(compareNum)\n      for(var j=0; j<nbhd.length; ++j) {\n        var u = nbhd[j]\n        if(visited[u]) {\n          continue\n        }\n        visited[u] = true\n        toVisit[eol++] = u\n      }\n    }\n  }\n\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[toVisit[i]] = i\n  }\n\n  return result\n}\n","import cuthillMckee from 'cuthill-mckee';\r\n\r\nconst getClosestNumber = (array = [], goal = 0) => {\r\n  const closest = array.reduce((prev, curr) => {\r\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\r\n  });\r\n  return closest;\r\n};\r\n\r\nconst getCloseIndex = (array = [], goal = 0) => {\r\n  const closest = getClosestNumber(array, goal);\r\n  return array.indexOf(closest);\r\n};\r\n\r\nconst updateSystem = (matrix, y, weights) => {\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let newMatrix = new Array(matrix.length);\r\n  let newVector = new Float64Array(nbPoints);\r\n  for (let i = 0; i < l; i++) {\r\n    let w = weights[i];\r\n    let diag = i * 2;\r\n    let next = diag + 1;\r\n    newMatrix[diag] = matrix[diag].slice();\r\n    newMatrix[next] = matrix[next].slice();\r\n    if (w === 0) {\r\n      newVector[i] = 0;\r\n    } else {\r\n      newVector[i] = y[i] * w;\r\n      newMatrix[diag][2] += w;\r\n    }\r\n  }\r\n  newVector[l] = y[l] * weights[l];\r\n  newMatrix[l * 2] = matrix[l * 2].slice();\r\n  newMatrix[l * 2][2] += weights[l];\r\n\r\n  return [newMatrix, newVector];\r\n};\r\n\r\nconst getDeltaMatrix = (nbPoints, lambda) => {\r\n  let matrix = [];\r\n  let last = nbPoints - 1;\r\n  for (let i = 0; i < last; i++) {\r\n    matrix.push([i, i, lambda * 2]);\r\n    matrix.push([i + 1, i, -1 * lambda]);\r\n  }\r\n  matrix[0][2] = lambda;\r\n  matrix.push([last, last, lambda]);\r\n  return {\r\n    lowerTriangularNonZeros: matrix,\r\n    permutationEncodedArray: cuthillMckee(matrix, nbPoints),\r\n  };\r\n};\r\n\r\nexport { updateSystem, getDeltaMatrix, getCloseIndex, getClosestNumber };\r\n","import Cholesky from './choleskySolver';\r\nimport { updateSystem, getDeltaMatrix, getCloseIndex } from './utils';\r\n\r\n/**\r\n * Fit the baseline drift by iteratively changing weights of sum square error between the fitted baseline and original signals,\r\n * for further information about the parameters you can get the [paper of airPLS](https://github.com/zmzhang/airPLS/blob/master/airPLS_manuscript.pdf)\r\n * @param {Array<number>} x - x axis data useful when control points or zones are submitted\r\n * @param {Array<number>} y - Original data\r\n * @param {object} [options={}] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximal number of iterations if the method does not reach the stop criterion\r\n * @param {number} [options.factorCriterion = 0.001] - Factor of the sum of absolute value of original data, to compute stop criterion\r\n * @param {Array<number>} [options.weights = [1,1,...]] - Initial weights vector, default each point has the same weight\r\n * @param {number} [options.lambda = 100] - Factor of weights matrix in -> [I + lambda D'D]z = x\r\n * @param {Array<number>} [options.controlPoints = []] - Array of x axis values to force that baseline cross those points.\r\n * @param {Array<number>} [options.baseLineZones = []] - Array of x axis values (as from - to), to force that baseline cross those zones.\r\n * @returns {{corrected: Array<number>, error: number, iteration: number, baseline: Array<number>}}\r\n */\r\nfunction airPLS(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    lambda = 100,\r\n    factorCriterion = 0.001,\r\n    weights = new Array(y.length).fill(1),\r\n    controlPoints = [],\r\n    baseLineZones = [],\r\n  } = options;\r\n\r\n  if (controlPoints.length > 0) {\r\n    controlPoints.forEach((e, i, arr) => (arr[i] = getCloseIndex(x, e)));\r\n  }\r\n  if (baseLineZones.length > 0) {\r\n    baseLineZones.forEach((range) => {\r\n      let indexFrom = getCloseIndex(x, range.from);\r\n      let indexTo = getCloseIndex(x, range.to);\r\n      if (indexFrom > indexTo) [indexFrom, indexTo] = [indexTo, indexFrom];\r\n      for (let i = indexFrom; i < indexTo; i++) {\r\n        controlPoints.push(i);\r\n      }\r\n    });\r\n  }\r\n\r\n  let baseline, iteration;\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let sumNegDifferences = Number.MAX_SAFE_INTEGER;\r\n  let stopCriterion =\r\n    factorCriterion * y.reduce((sum, e) => Math.abs(e) + sum, 0);\r\n\r\n  let { lowerTriangularNonZeros, permutationEncodedArray } = getDeltaMatrix(\r\n    nbPoints,\r\n    lambda,\r\n  );\r\n\r\n  for (\r\n    iteration = 0;\r\n    iteration < maxIterations && Math.abs(sumNegDifferences) > stopCriterion;\r\n    iteration++\r\n  ) {\r\n    let [leftHandSide, rightHandSide] = updateSystem(\r\n      lowerTriangularNonZeros,\r\n      y,\r\n      weights,\r\n    );\r\n\r\n    let cho = Cholesky(leftHandSide, nbPoints, permutationEncodedArray);\r\n\r\n    baseline = cho(rightHandSide);\r\n\r\n    sumNegDifferences = 0;\r\n\r\n    let difference = y.map(calculateError);\r\n\r\n    let maxNegativeDiff = -1 * Number.MAX_SAFE_INTEGER;\r\n    for (let i = 1; i < l; i++) {\r\n      let diff = difference[i];\r\n      if (diff >= 0) {\r\n        weights[i] = 0;\r\n      } else {\r\n        weights[i] = Math.exp((iteration * diff) / sumNegDifferences);\r\n        if (maxNegativeDiff < diff) maxNegativeDiff = diff;\r\n      }\r\n    }\r\n\r\n    let value = Math.exp((iteration * maxNegativeDiff) / sumNegDifferences);\r\n    weights[0] = value;\r\n    weights[l] = value;\r\n    controlPoints.forEach((i) => (weights[i] = value));\r\n  }\r\n\r\n  return {\r\n    corrected: y.map((e, i) => e - baseline[i]),\r\n    baseline,\r\n    iteration,\r\n    error: sumNegDifferences,\r\n  };\r\n\r\n  function calculateError(e, i) {\r\n    let diff = e - baseline[i];\r\n    if (diff < 0) sumNegDifferences += diff;\r\n    return diff;\r\n  }\r\n}\r\n\r\nexport { airPLS as default };\r\n","import airpls from 'ml-airpls';\nimport sequentialFill from 'ml-array-sequential-fill';\n/**\n * Adaptive iteratively reweighted penalized least squares [1]\n *\n * This function calls ml-airpls\n *\n * References:\n * [1] Zhang, Z.-M.; Chen, S.; Liang, Y.-Z.\n * Baseline Correction Using Adaptive Iteratively Reweighted Penalized Least Squares.\n * Analyst 2010, 135 (5), 1138–1146. https://doi.org/10.1039/B922045C.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {object} [options.regression] - Options for the regression\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {function} [options.regression.§Regression = PolynomialRegression] - Regression class with a predict method\n * @param {*} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function airPLSBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n  let output = airpls(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport default function checkArraySize(x, y) {\n  if (!isAnyArray(x) || !isAnyArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n","import { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\nimport BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients,\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import PolynomialRegression from 'ml-regression-polynomial';\r\n\r\n/**\r\n * Iterative regression-based baseline correction\r\n * @param {Array<number>} x - Independent axis variable\r\n * @param {Array<number>} y - Dependent axis variable\r\n * @param {object} [options] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximum number of allowed iterations\r\n * @param {function} [options.Regression = PolynomialRegression] - Regression class with a predict method\r\n * @param {*} [options.regressionOptions] - Options for regressionFunction\r\n * @param {number} [options.tolerance = 0.001] - Convergence error tolerance\r\n * @return {{corrected: Array<number>, delta: number, iteration: number, baseline: Array<number>}}\r\n */\r\nexport default function baselineCorrectionRegression(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    Regression = PolynomialRegression,\r\n    regressionOptions,\r\n    tolerance = 0.001,\r\n  } = options;\r\n\r\n  if (!regressionOptions && Regression === PolynomialRegression) {\r\n    regressionOptions = 3;\r\n  }\r\n\r\n  let baseline = y.slice();\r\n  let fitting = y.slice();\r\n  let oldFitting = y;\r\n  let iteration = 0;\r\n  let delta;\r\n  let regression;\r\n  while (iteration < maxIterations) {\r\n    // Calculate the fitting result\r\n    regression = new Regression(x, baseline, regressionOptions);\r\n\r\n    delta = 0;\r\n    for (let i = 0; i < baseline.length; i++) {\r\n      fitting[i] = regression.predict(x[i]);\r\n      if (baseline[i] > fitting[i]) {\r\n        baseline[i] = fitting[i];\r\n      }\r\n\r\n      delta += Math.abs((fitting[i] - oldFitting[i]) / oldFitting[i]);\r\n    }\r\n\r\n    // Stop criterion\r\n    if (delta < tolerance) {\r\n      break;\r\n    } else {\r\n      oldFitting = fitting.slice();\r\n      iteration++;\r\n    }\r\n  }\r\n\r\n  // removes baseline\r\n  let corrected = new Array(baseline.length);\r\n  for (let j = 0; j < baseline.length; j++) {\r\n    corrected[j] = y[j] - baseline[j];\r\n  }\r\n\r\n  return {\r\n    corrected,\r\n    delta,\r\n    iteration,\r\n    baseline,\r\n    regression: regression,\r\n  };\r\n}\r\n","import sequentialFill from 'ml-array-sequential-fill';\nimport baselineCorrection from 'ml-baseline-correction-regression';\n\n/**\n * Iterative polynomial fitting [1]\n *\n * Implementation based on ml-baseline-correction-regression\n *\n * References:\n * [1] Gan, F.; Ruan, G.; Mo, J.\n * Baseline Correction by Improved Iterative Polynomial Fitting with Automatic Threshold.\n *  Chemometrics and Intelligent Laboratory Systems 2006, 82 (1), 59–65.\n * https://doi.org/10.1016/j.chemolab.2005.08.009.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {Object} [options.regression]\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {Object} [options.regression]\n * @param {function} [options.regression.Regression = PolynomialRegression] - Regression class with a predict method\n * @param {Object} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function iterativePolynomialBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n\n  let output = baselineCorrection(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","import isArray from 'is-any-array';\n\n/**\n * Checks if input is valdi\n * @param {Array<number>} input\n\n */\nexport function xCheck(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n}\n\nexport function xCheckLengths(array1, array2) {\n  if (array1.length !== array2.length) {\n    throw new TypeError('Length of array1 and array2 must be identical');\n  }\n}\n","import { xCheck } from './xCheck';\n\n/**\n * This function pads an array\n * @param {Array} array - the array that will be padded\n * @param {object} [options={}]\n * @param {string} [options.algorithm=''] '', value, circular, duplicate\n * @param {number} [options.size=0] padding size before first element and after last element\n * @param {number} [options.value=0] value to use for padding (if algorithm='value')\n * @return {Array}\n */\nexport function xPadding(array, options = {}) {\n  const { size = 0, value = 0, algorithm = '' } = options;\n  xCheck(array);\n\n  if (!algorithm) {\n    if (array instanceof Float64Array) {\n      return array.slice();\n    } else {\n      return Float64Array.from(array);\n    }\n  }\n\n  let result = new Float64Array(array.length + size * 2);\n\n  for (let i = 0; i < array.length; i++) {\n    result[i + size] = array[i];\n  }\n\n  let fromEnd = size + array.length;\n  let toEnd = 2 * size + array.length;\n\n  switch (algorithm.toLowerCase()) {\n    case 'value':\n      for (let i = 0; i < size; i++) {\n        result[i] = value;\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = value;\n      }\n      break;\n    case 'duplicate':\n      for (let i = 0; i < size; i++) {\n        result[i] = array[0];\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = array[array.length - 1];\n      }\n      break;\n    case 'circular':\n      for (let i = 0; i < size; i++) {\n        result[i] =\n          array[(array.length - (size % array.length) + i) % array.length];\n      }\n      for (let i = 0; i < size; i++) {\n        result[i + fromEnd] = array[i % array.length];\n      }\n      break;\n    default:\n      throw Error('xPadding: unknown algorithm');\n  }\n\n  return result;\n}\n","import { xCheck } from './xCheck';\nimport { xPadding } from './xPadding';\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {function} fct callback function that from an array returns a value.\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=0] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='value'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRolling(array, fct, options = {}) {\n  xCheck(array);\n  if (typeof fct !== 'function') throw Error('fct has to be a function');\n\n  const { window = 5, padding = {} } = options;\n  const { size = window - 1, algorithm, value } = padding;\n\n  array = xPadding(array, { size, algorithm, value }); // ensure we get a copy and it is float64\n\n  const newArray = [];\n  for (let i = 0; i < array.length - window + 1; i++) {\n    let subArray = new Float64Array(array.buffer, i * 8, window);\n    // we will send a view to the original buffer\n    newArray.push(fct(subArray));\n  }\n\n  return newArray;\n}\n","import mean from 'ml-array-mean';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingAverage(array, options = {}) {\n  return xRolling(array, mean, options);\n}\n","import median from 'ml-array-median';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingMedian(array, options = {}) {\n  return xRolling(array, median, options);\n}\n","import { xRollingAverage } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingAverageBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingAverage(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport mean from 'ml-array-mean';\nimport min from 'ml-array-min';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n * @export\n * @param {Array} spectrum\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n */\nexport function rollingBall(spectrum, options = {}) {\n  if (!isAnyArray(spectrum)) {\n    throw new Error('Spectrum must be an array');\n  }\n\n  if (spectrum.length === 0) {\n    throw new TypeError('Spectrum must not be empty');\n  }\n\n  const numberPoints = spectrum.length;\n  const maxima = new Float64Array(numberPoints);\n  const minima = new Float64Array(numberPoints);\n  const baseline = new Float64Array(numberPoints);\n\n  // windowM 4 percent of spectrum length\n  // windowS 8 percent of spectrum length\n  const {\n    windowM = Math.round(numberPoints * 0.04),\n    windowS = Math.round(numberPoints * 0.08),\n  } = options;\n\n  // fi(1) in original paper\n  for (let i = 0; i < spectrum.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, spectrum.length]);\n    minima[i] = min(spectrum.slice(windowLeft, windowRight));\n  }\n\n  // fi in original paper\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, minima.length]);\n    maxima[i] = max(minima.slice(windowLeft, windowRight));\n  }\n\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowS]);\n    let windowRight = min([i + windowS + 1, maxima.length]);\n    baseline[i] = mean(maxima.slice(windowLeft, windowRight));\n  }\n\n  return baseline;\n}\n","import { rollingBall } from 'ml-rolling-ball-baseline';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Algorithm described in (1), but in the implementation here the window width does not change.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n * @returns {BaselineOutput}\n */\nexport function rollingBallBaseline(ys, options = {}) {\n  const baseline = rollingBall(ys, options);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import { xRollingMedian } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingMedianBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingMedian(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSlot from './equallySpacedSlot';\nimport equallySpacedSmooth from './equallySpacedSmooth';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined,\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY,\n  };\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\nfunction factorial(n) {\n    let r = 1;\n    while (n > 0)\n        r *= n--;\n    return r;\n}\nexport default function savitzkyGolay(data, h, options = {}) {\n    const { windowSize = 5, derivative = 1, polynomial = 2, pad = 'none', padValue = 'replicate', } = options;\n    if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n        throw new RangeError('Invalid window size (should be odd and at least 5 integer number)');\n    }\n    if (derivative < 0 || !Number.isInteger(derivative)) {\n        throw new RangeError('Derivative should be a positive integer');\n    }\n    if (polynomial < 1 || !Number.isInteger(polynomial)) {\n        throw new RangeError('Polynomial should be a positive integer');\n    }\n    let C, norm;\n    let step = Math.floor(windowSize / 2);\n    if (pad === 'pre') {\n        data = padArray(data, { size: step, value: padValue });\n    }\n    let ans = new Array(data.length - 2 * step);\n    if (windowSize === 5 &&\n        polynomial === 2 &&\n        (derivative === 1 || derivative === 2)) {\n        if (derivative === 1) {\n            C = [-2, -1, 0, 1, 2];\n            norm = 10;\n        }\n        else {\n            C = [2, -1, -2, -1, 2];\n            norm = 7;\n        }\n    }\n    else {\n        let J = Matrix.ones(windowSize, polynomial + 1);\n        let inic = -(windowSize - 1) / 2;\n        for (let i = 0; i < J.rows; i++) {\n            for (let j = 0; j < J.columns; j++) {\n                if (inic + 1 !== 0 || j !== 0)\n                    J.set(i, j, Math.pow(inic + i, j));\n            }\n        }\n        let Jtranspose = new MatrixTransposeView(J);\n        let Jinv = inverse(Jtranspose.mmul(J));\n        C = Jinv.mmul(Jtranspose);\n        C = C.getRow(derivative);\n        norm = 1 / factorial(derivative);\n    }\n    let det = norm * Math.pow(h, derivative);\n    for (let k = 0; k < data.length - 2 * step; k++) {\n        let d = 0;\n        for (let l = 0; l < C.length; l++)\n            d += (C[l] * data[l + k]) / det;\n        ans[k] = d;\n    }\n    if (pad === 'post') {\n        ans = padArray(ans, { size: step, value: padValue });\n    }\n    return ans;\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import { airPLSBaseline, rollingAverageBaseline, iterativePolynomialBaseline, rollingBallBaseline, rollingMedianBaseline, } from 'baselines';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract, xMultiply, xAdd, xIsMonotone, xyEnsureGrowingX, } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\nexport function getNormalizedSpectrum(spectrum, options = {}) {\n    var _a;\n    let data = {\n        x: spectrum.variables.x.data,\n        y: spectrum.variables.y.data,\n    };\n    let newSpectrum = {\n        variables: {\n            x: {\n                data: spectrum.variables.x.data,\n                units: spectrum.variables.x.units,\n                label: spectrum.variables.x.label,\n            },\n            y: {\n                data: spectrum.variables.y.data,\n                units: spectrum.variables.y.units,\n                label: spectrum.variables.y.label,\n            },\n        },\n    };\n    if (spectrum.title)\n        newSpectrum.title = spectrum.title;\n    if (spectrum.dataType)\n        newSpectrum.dataType = spectrum.dataType;\n    if (spectrum.meta)\n        newSpectrum.meta = spectrum.meta;\n    let { from = spectrum.variables.x.min, to = spectrum.variables.x.max, numberOfPoints, filters = [], exclusions = [], processing = '', keepYUnits = false, } = options;\n    let { x, y } = filterX(data, { from, to });\n    switch (processing) {\n        case 'firstDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `1st derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 1,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'secondDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `2nd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 2,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'thirdDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `3rd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 3,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        default:\n    }\n    if (!keepYUnits && filters.length) {\n        // filters change the y axis, we get rid of the units\n        newSpectrum.variables.y.units = '';\n        newSpectrum.variables.y.label = (_a = newSpectrum.variables.y.label) === null || _a === void 0 ? void 0 : _a.replace(/\\s*\\[.*\\]/, '');\n    }\n    for (let filter of filters) {\n        let filterOptions = filter.options || {};\n        switch (filter.name.toLowerCase()) {\n            case 'centermean': {\n                let mean = Stat.mean(y);\n                y = xSubtract(y, mean);\n                break;\n            }\n            case 'dividebysd': {\n                let std = Stat.standardDeviation(y);\n                y = xDivide(y, std);\n                break;\n            }\n            case 'normalize': {\n                y = normed(y, {\n                    sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n                    algorithm: 'absolute',\n                });\n                break;\n            }\n            case 'rescale': {\n                y = rescale(y, {\n                    min: filterOptions.min ? Number(filterOptions.min) : 0,\n                    max: filterOptions.max ? Number(filterOptions.max) : 1,\n                });\n                break;\n            }\n            case 'dividebymax': {\n                let maxValue = max(y);\n                y = xDivide(y, maxValue);\n                break;\n            }\n            case 'multiply': {\n                y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\n                break;\n            }\n            case 'add': {\n                y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\n                break;\n            }\n            case 'airplsbaseline': {\n                y = airPLSBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingaveragebaseline': {\n                y = rollingAverageBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'iterativepolynomialbaseline': {\n                y = iterativePolynomialBaseline(y, undefined, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingballbaseline': {\n                y = rollingBallBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingmedianbaseline': {\n                y = rollingMedianBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'ensuregrowing': {\n                const ans = xyEnsureGrowingX({ x, y });\n                x = ans.x;\n                y = ans.y;\n                break;\n            }\n            case '':\n            case undefined:\n                break;\n            default:\n                throw new Error(`Unknown process kind: ${filter.name}`);\n        }\n    }\n    if (!numberOfPoints) {\n        data = filterX({ x, y }, { from, to, exclusions });\n    }\n    else {\n        data = equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n    }\n    newSpectrum.variables.x.data = x;\n    newSpectrum.variables.x.min = min(x);\n    newSpectrum.variables.x.max = max(x);\n    newSpectrum.variables.x.isMonotone = xIsMonotone(x);\n    newSpectrum.variables.y.data = y;\n    newSpectrum.variables.y.min = min(y);\n    newSpectrum.variables.y.max = max(y);\n    newSpectrum.variables.y.isMonotone = xIsMonotone(y);\n    return newSpectrum;\n}\n//# sourceMappingURL=data:application/json;base64,","/*\nThe MIT License (MIT)\nCopyright © 2006-2007 Kevin C. Olbrich\nCopyright © 2010-2016 LIM SAS (http://lim.eu) - Julien Sanchez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Qty = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Tests if a value is a string\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a string, false otherwise\n   */\n  function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n\n  /*\n   * Prefer stricter Number.isFinite if currently supported.\n   * To be dropped when ES6 is finalized. Obsolete browsers will\n   * have to use ES6 polyfills.\n   */\n  var isFiniteImpl = Number.isFinite || window.isFinite;\n  /**\n   * Tests if a value is a number\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a number, false otherwise\n   */\n  function isNumber(value) {\n    // Number.isFinite allows not to consider NaN or '1' as numbers\n    return isFiniteImpl(value);\n  }\n\n  /*\n   * Identity function\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Returns unique strings from list\n   *\n   * @param {string[]} strings - array of strings\n   *\n   *\n   * @returns {string[]} a new array of strings without duplicates\n   */\n  function uniq(strings) {\n    var seen = {};\n    return strings.filter(function(item) {\n      return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n  }\n\n  function compareArray(array1, array2) {\n    if (array2.length !== array1.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array2[i].compareArray) {\n        if (!array2[i].compareArray(array1[i])) {\n          return false;\n        }\n      }\n      if (array2[i] !== array1[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function assign(target, properties) {\n    Object.keys(properties).forEach(function(key) {\n      target[key] = properties[key];\n    });\n  }\n\n  /**\n   * Safely multiplies numbers while avoiding floating errors\n   * like 0.1 * 0.1 => 0.010000000000000002\n   *\n   * @param {...number} numbers - numbers to multiply\n   *\n   * @returns {number} result\n   */\n  function mulSafe() {\n    var result = 1, decimals = 0;\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      decimals = decimals + getFractional(arg);\n      result *= arg;\n    }\n\n    return decimals !== 0 ? round(result, decimals) : result;\n  }\n\n  /**\n   * Safely divides two numbers while avoiding floating errors\n   * like 0.3 / 0.05 => 5.999999999999999\n   *\n   * @returns {number} result\n   * @param {number} num Numerator\n   * @param {number} den Denominator\n   */\n  function divSafe(num, den) {\n    if (den === 0) {\n      throw new Error(\"Divide by zero\");\n    }\n\n    var factor = Math.pow(10, getFractional(den));\n    var invDen = factor / (factor * den);\n\n    return mulSafe(num, invDen);\n  }\n\n  /**\n   * Rounds value at the specified number of decimals\n   *\n   * @param {number} val - value to round\n   * @param {number} decimals - number of decimals\n   *\n   * @returns {number} rounded number\n   */\n  function round(val, decimals) {\n    return Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  function getFractional(num) {\n    // Check for NaNs or Infinities\n    if (!isFinite(num)) {\n      return 0;\n    }\n\n    // Faster than parsing strings\n    // http://jsperf.com/count-decimals/2\n    var count = 0;\n    while (num % 1 !== 0) {\n      num *= 10;\n      count++;\n    }\n    return count;\n  }\n\n  /**\n   * Custom error type definition\n   * @constructor\n   */\n  function QtyError() {\n    var err;\n    if (!this) { // Allows to instantiate QtyError without new()\n      err = Object.create(QtyError.prototype);\n      QtyError.apply(err, arguments);\n      return err;\n    }\n    err = Error.apply(this, arguments);\n    this.name = \"QtyError\";\n    this.message = err.message;\n    this.stack = err.stack;\n  }\n  QtyError.prototype = Object.create(Error.prototype, {constructor: { value: QtyError }});\n\n  /*\n   * Throws incompatible units error\n   * @param {string} left - units\n   * @param {string} right - units incompatible with first argument\n   * @throws \"Incompatible units\" error\n   */\n  function throwIncompatibleUnits(left, right) {\n    throw new QtyError(\"Incompatible units: \" + left + \" and \" + right);\n  }\n\n  var UNITS = {\n    /* prefixes */\n    \"<googol>\" : [[\"googol\"], 1e100, \"prefix\"],\n    \"<kibi>\"  :  [[\"Ki\",\"Kibi\",\"kibi\"], Math.pow(2,10), \"prefix\"],\n    \"<mebi>\"  :  [[\"Mi\",\"Mebi\",\"mebi\"], Math.pow(2,20), \"prefix\"],\n    \"<gibi>\"  :  [[\"Gi\",\"Gibi\",\"gibi\"], Math.pow(2,30), \"prefix\"],\n    \"<tebi>\"  :  [[\"Ti\",\"Tebi\",\"tebi\"], Math.pow(2,40), \"prefix\"],\n    \"<pebi>\"  :  [[\"Pi\",\"Pebi\",\"pebi\"], Math.pow(2,50), \"prefix\"],\n    \"<exi>\"   :  [[\"Ei\",\"Exi\",\"exi\"], Math.pow(2,60), \"prefix\"],\n    \"<zebi>\"  :  [[\"Zi\",\"Zebi\",\"zebi\"], Math.pow(2,70), \"prefix\"],\n    \"<yebi>\"  :  [[\"Yi\",\"Yebi\",\"yebi\"], Math.pow(2,80), \"prefix\"],\n    \"<yotta>\" :  [[\"Y\",\"Yotta\",\"yotta\"], 1e24, \"prefix\"],\n    \"<zetta>\" :  [[\"Z\",\"Zetta\",\"zetta\"], 1e21, \"prefix\"],\n    \"<exa>\"   :  [[\"E\",\"Exa\",\"exa\"], 1e18, \"prefix\"],\n    \"<peta>\"  :  [[\"P\",\"Peta\",\"peta\"], 1e15, \"prefix\"],\n    \"<tera>\"  :  [[\"T\",\"Tera\",\"tera\"], 1e12, \"prefix\"],\n    \"<giga>\"  :  [[\"G\",\"Giga\",\"giga\"], 1e9, \"prefix\"],\n    \"<mega>\"  :  [[\"M\",\"Mega\",\"mega\"], 1e6, \"prefix\"],\n    \"<kilo>\"  :  [[\"k\",\"kilo\"], 1e3, \"prefix\"],\n    \"<hecto>\" :  [[\"h\",\"Hecto\",\"hecto\"], 1e2, \"prefix\"],\n    \"<deca>\"  :  [[\"da\",\"Deca\",\"deca\",\"deka\"], 1e1, \"prefix\"],\n    \"<deci>\"  :  [[\"d\",\"Deci\",\"deci\"], 1e-1, \"prefix\"],\n    \"<centi>\"  : [[\"c\",\"Centi\",\"centi\"], 1e-2, \"prefix\"],\n    \"<milli>\" :  [[\"m\",\"Milli\",\"milli\"], 1e-3, \"prefix\"],\n    \"<micro>\"  : [\n      [\"u\",\"\\u03BC\"/*µ as greek letter*/,\"\\u00B5\"/*µ as micro sign*/,\"Micro\",\"mc\",\"micro\"],\n      1e-6,\n      \"prefix\"\n    ],\n    \"<nano>\"  :  [[\"n\",\"Nano\",\"nano\"], 1e-9, \"prefix\"],\n    \"<pico>\"  :  [[\"p\",\"Pico\",\"pico\"], 1e-12, \"prefix\"],\n    \"<femto>\" :  [[\"f\",\"Femto\",\"femto\"], 1e-15, \"prefix\"],\n    \"<atto>\"  :  [[\"a\",\"Atto\",\"atto\"], 1e-18, \"prefix\"],\n    \"<zepto>\" :  [[\"z\",\"Zepto\",\"zepto\"], 1e-21, \"prefix\"],\n    \"<yocto>\" :  [[\"y\",\"Yocto\",\"yocto\"], 1e-24, \"prefix\"],\n\n    \"<1>\"     :  [[\"1\", \"<1>\"], 1, \"\"],\n    /* length units */\n    \"<meter>\" :  [[\"m\",\"meter\",\"meters\",\"metre\",\"metres\"], 1.0, \"length\", [\"<meter>\"] ],\n    \"<inch>\"  :  [[\"in\",\"inch\",\"inches\",\"\\\"\"], 0.0254, \"length\", [\"<meter>\"]],\n    \"<foot>\"  :  [[\"ft\",\"foot\",\"feet\",\"'\"], 0.3048, \"length\", [\"<meter>\"]],\n    \"<yard>\"  :  [[\"yd\",\"yard\",\"yards\"], 0.9144, \"length\", [\"<meter>\"]],\n    \"<mile>\"  :  [[\"mi\",\"mile\",\"miles\"], 1609.344, \"length\", [\"<meter>\"]],\n    \"<naut-mile>\" : [[\"nmi\",\"naut-mile\"], 1852, \"length\", [\"<meter>\"]],\n    \"<league>\":  [[\"league\",\"leagues\"], 4828, \"length\", [\"<meter>\"]],\n    \"<furlong>\": [[\"furlong\",\"furlongs\"], 201.2, \"length\", [\"<meter>\"]],\n    \"<rod>\"   :  [[\"rd\",\"rod\",\"rods\"], 5.029, \"length\", [\"<meter>\"]],\n    \"<mil>\"   :  [[\"mil\",\"mils\"], 0.0000254, \"length\", [\"<meter>\"]],\n    \"<angstrom>\"  :[[\"ang\",\"angstrom\",\"angstroms\"], 1e-10, \"length\", [\"<meter>\"]],\n    \"<fathom>\" : [[\"fathom\",\"fathoms\"], 1.829, \"length\", [\"<meter>\"]],\n    \"<pica>\"  : [[\"pica\",\"picas\"], 0.00423333333, \"length\", [\"<meter>\"]],\n    \"<point>\" : [[\"pt\",\"point\",\"points\"], 0.000352777778, \"length\", [\"<meter>\"]],\n    \"<redshift>\" : [[\"z\",\"red-shift\", \"redshift\"], 1.302773e26, \"length\", [\"<meter>\"]],\n    \"<AU>\"    : [[\"AU\",\"astronomical-unit\"], 149597900000, \"length\", [\"<meter>\"]],\n    \"<light-second>\":[[\"ls\",\"light-second\"], 299792500, \"length\", [\"<meter>\"]],\n    \"<light-minute>\":[[\"lmin\",\"light-minute\"], 17987550000, \"length\", [\"<meter>\"]],\n    \"<light-year>\" : [[\"ly\",\"light-year\"], 9460528000000000, \"length\", [\"<meter>\"]],\n    \"<parsec>\"  : [[\"pc\",\"parsec\",\"parsecs\"], 30856780000000000, \"length\", [\"<meter>\"]],\n    \"<datamile>\"  :  [[\"DM\",\"datamile\"], 1828.8, \"length\", [\"<meter>\"]],\n\n    /* mass */\n    \"<kilogram>\" : [[\"kg\",\"kilogram\",\"kilograms\"], 1.0, \"mass\", [\"<kilogram>\"]],\n    \"<AMU>\" : [[\"u\",\"AMU\",\"amu\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<dalton>\" : [[\"Da\",\"Dalton\",\"Daltons\",\"dalton\",\"daltons\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<slug>\" : [[\"slug\",\"slugs\"], 14.5939029, \"mass\", [\"<kilogram>\"]],\n    \"<short-ton>\" : [[\"tn\",\"ton\",\"short-ton\"], 907.18474, \"mass\", [\"<kilogram>\"]],\n    \"<metric-ton>\":[[\"tonne\",\"metric-ton\"], 1000, \"mass\", [\"<kilogram>\"]],\n    \"<carat>\" : [[\"ct\",\"carat\",\"carats\"], 0.0002, \"mass\", [\"<kilogram>\"]],\n    \"<pound>\" : [[\"lbs\",\"lb\",\"pound\",\"pounds\",\"#\"], 0.45359237, \"mass\", [\"<kilogram>\"]],\n    \"<ounce>\" : [[\"oz\",\"ounce\",\"ounces\"], 0.0283495231, \"mass\", [\"<kilogram>\"]],\n    \"<gram>\"    :  [[\"g\",\"gram\",\"grams\",\"gramme\",\"grammes\"], 1e-3, \"mass\", [\"<kilogram>\"]],\n    \"<grain>\" : [[\"grain\",\"grains\",\"gr\"], 6.479891e-5, \"mass\", [\"<kilogram>\"]],\n    \"<dram>\"  : [[\"dram\",\"drams\",\"dr\"], 0.0017718452, \"mass\",[\"<kilogram>\"]],\n    \"<stone>\" : [[\"stone\",\"stones\",\"st\"],6.35029318, \"mass\",[\"<kilogram>\"]],\n\n    /* area */\n    \"<hectare>\":[[\"hectare\"], 10000, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<acre>\":[[\"acre\",\"acres\"], 4046.85642, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<sqft>\":[[\"sqft\"], 1, \"area\", [\"<foot>\",\"<foot>\"]],\n\n    /* volume */\n    \"<liter>\" : [[\"l\",\"L\",\"liter\",\"liters\",\"litre\",\"litres\"], 0.001, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon>\":  [[\"gal\",\"gallon\",\"gallons\"], 0.0037854118, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon-imp>\":  [[\"galimp\",\"gallon-imp\",\"gallons-imp\"], 0.0045460900, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<quart>\":  [[\"qt\",\"quart\",\"quarts\"], 0.00094635295, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint>\":  [[\"pt\",\"pint\",\"pints\"], 0.000473176475, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint-imp>\":  [[\"ptimp\",\"pint-imp\",\"pints-imp\"], 5.6826125e-4, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<cup>\":  [[\"cu\",\"cup\",\"cups\"], 0.000236588238, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce>\":  [[\"floz\",\"fluid-ounce\",\"fluid-ounces\"], 2.95735297e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce-imp>\":  [[\"flozimp\", \"floz-imp\",\"fluid-ounce-imp\",\"fluid-ounces-imp\"], 2.84130625e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<tablespoon>\":  [[\"tb\",\"tbsp\",\"tbs\",\"tablespoon\",\"tablespoons\"], 1.47867648e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<teaspoon>\":  [[\"tsp\",\"teaspoon\",\"teaspoons\"], 4.92892161e-6, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<bushel>\":  [[\"bu\",\"bsh\",\"bushel\",\"bushels\"], 0.035239072, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<oilbarrel>\":  [[\"bbl\",\"oilbarrel\", \"oilbarrels\", \"oil-barrel\",\"oil-barrels\"], 0.158987294928, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel>\":  [[\"bl\",\"bl-us\",\"beerbarrel\", \"beerbarrels\", \"beer-barrel\",\"beer-barrels\"], 0.1173477658, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel-imp>\":  [[\"blimp\",\"bl-imp\",\"beerbarrel-imp\", \"beerbarrels-imp\", \"beer-barrel-imp\",\"beer-barrels-imp\"], 0.16365924, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* speed */\n    \"<kph>\" : [[\"kph\"], 0.277777778, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<mph>\" : [[\"mph\"], 0.44704, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<knot>\" : [[\"kt\",\"kn\",\"kts\",\"knot\",\"knots\"], 0.514444444, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<fps>\"  : [[\"fps\"], 0.3048, \"speed\", [\"<meter>\"], [\"<second>\"]],\n\n    /* acceleration */\n    \"<gee>\" : [[\"gee\"], 9.80665, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<Gal>\" : [[\"Gal\"], 1e-2, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* temperature_difference */\n    \"<kelvin>\" : [[\"degK\",\"kelvin\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<celsius>\" : [[\"degC\",\"celsius\",\"celsius\",\"centigrade\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<fahrenheit>\" : [[\"degF\",\"fahrenheit\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<rankine>\" : [[\"degR\",\"rankine\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<temp-K>\"  : [[\"tempK\",\"temp-K\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-C>\"  : [[\"tempC\",\"temp-C\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-F>\"  : [[\"tempF\",\"temp-F\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-R>\"  : [[\"tempR\",\"temp-R\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n\n    /* time */\n    \"<second>\":  [[\"s\",\"sec\",\"secs\",\"second\",\"seconds\"], 1.0, \"time\", [\"<second>\"]],\n    \"<minute>\":  [[\"min\",\"mins\",\"minute\",\"minutes\"], 60.0, \"time\", [\"<second>\"]],\n    \"<hour>\":  [[\"h\",\"hr\",\"hrs\",\"hour\",\"hours\"], 3600.0, \"time\", [\"<second>\"]],\n    \"<day>\":  [[\"d\",\"day\",\"days\"], 3600 * 24, \"time\", [\"<second>\"]],\n    \"<week>\":  [[\"wk\",\"week\",\"weeks\"], 7 * 3600 * 24, \"time\", [\"<second>\"]],\n    \"<fortnight>\": [[\"fortnight\",\"fortnights\"], 1209600, \"time\", [\"<second>\"]],\n    \"<year>\":  [[\"y\",\"yr\",\"year\",\"years\",\"annum\"], 31556926, \"time\", [\"<second>\"]],\n    \"<decade>\":[[\"decade\",\"decades\"], 315569260, \"time\", [\"<second>\"]],\n    \"<century>\":[[\"century\",\"centuries\"], 3155692600, \"time\", [\"<second>\"]],\n\n    /* pressure */\n    \"<pascal>\" : [[\"Pa\",\"pascal\",\"Pascal\"], 1.0, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<bar>\" : [[\"bar\",\"bars\"], 100000, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<mmHg>\" : [[\"mmHg\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inHg>\" : [[\"inHg\"], 3386.3881472, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<torr>\" : [[\"torr\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<atm>\" : [[\"atm\",\"ATM\",\"atmosphere\",\"atmospheres\"], 101325, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<psi>\" : [[\"psi\"], 6894.76, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<cmh2o>\" : [[\"cmH2O\",\"cmh2o\"], 98.0638, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inh2o>\" : [[\"inH2O\",\"inh2o\"], 249.082052, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n\n    /* viscosity */\n    \"<poise>\"  : [[\"P\",\"poise\"], 0.1, \"viscosity\", [\"<kilogram>\"],[\"<meter>\",\"<second>\"] ],\n    \"<stokes>\" : [[\"St\",\"stokes\"], 1e-4, \"viscosity\", [\"<meter>\",\"<meter>\"], [\"<second>\"]],\n\n    /* substance */\n    \"<mole>\"  :  [[\"mol\",\"mole\"], 1.0, \"substance\", [\"<mole>\"]],\n\n    /* concentration */\n    \"<molar>\" : [[\"M\",\"molar\"], 1000, \"concentration\", [\"<mole>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<wtpercent>\"  : [[\"wt%\",\"wtpercent\"], 10, \"concentration\", [\"<kilogram>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* activity */\n    \"<katal>\" :  [[\"kat\",\"katal\",\"Katal\"], 1.0, \"activity\", [\"<mole>\"], [\"<second>\"]],\n    \"<unit>\"  :  [[\"U\",\"enzUnit\",\"unit\"], 16.667e-16, \"activity\", [\"<mole>\"], [\"<second>\"]],\n\n    /* capacitance */\n    \"<farad>\" :  [[\"F\",\"farad\",\"Farad\"], 1.0, \"capacitance\", [\"<second>\",\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<meter>\", \"<meter>\", \"<kilogram>\"]],\n\n    /* charge */\n    \"<coulomb>\" :  [[\"C\",\"coulomb\",\"Coulomb\"], 1.0, \"charge\", [\"<ampere>\",\"<second>\"]],\n    \"<Ah>\" :  [[\"Ah\"], 3600, \"charge\", [\"<ampere>\",\"<second>\"]],\n\n    /* current */\n    \"<ampere>\"  :  [[\"A\",\"Ampere\",\"ampere\",\"amp\",\"amps\"], 1.0, \"current\", [\"<ampere>\"]],\n\n    /* conductance */\n    \"<siemens>\" : [[\"S\",\"Siemens\",\"siemens\"], 1.0, \"conductance\", [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<kilogram>\",\"<meter>\",\"<meter>\"]],\n\n    /* inductance */\n    \"<henry>\" :  [[\"H\",\"Henry\",\"henry\"], 1.0, \"inductance\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]],\n\n    /* potential */\n    \"<volt>\"  :  [[\"V\",\"Volt\",\"volt\",\"volts\"], 1.0, \"potential\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\"]],\n\n    /* resistance */\n    \"<ohm>\" :  [\n      [\"Ohm\",\"ohm\",\"\\u03A9\"/*Ω as greek letter*/,\"\\u2126\"/*Ω as ohm sign*/],\n      1.0,\n      \"resistance\",\n      [\"<meter>\",\"<meter>\",\"<kilogram>\"],[\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]\n    ],\n    /* magnetism */\n    \"<weber>\" : [[\"Wb\",\"weber\",\"webers\"], 1.0, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<tesla>\"  : [[\"T\",\"tesla\",\"teslas\"], 1.0, \"magnetism\", [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<gauss>\" : [[\"G\",\"gauss\"], 1e-4, \"magnetism\",  [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<maxwell>\" : [[\"Mx\",\"maxwell\",\"maxwells\"], 1e-8, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<oersted>\"  : [[\"Oe\",\"oersted\",\"oersteds\"], 250.0 / Math.PI, \"magnetism\", [\"<ampere>\"], [\"<meter>\"]],\n\n    /* energy */\n    \"<joule>\" :  [[\"J\",\"joule\",\"Joule\",\"joules\"], 1.0, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<erg>\"   :  [[\"erg\",\"ergs\"], 1e-7, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<btu>\"   :  [[\"BTU\",\"btu\",\"BTUs\"], 1055.056, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<calorie>\" :  [[\"cal\",\"calorie\",\"calories\"], 4.18400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Calorie>\" :  [[\"Cal\",\"Calorie\",\"Calories\"], 4184.00, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<therm-US>\" : [[\"th\",\"therm\",\"therms\",\"Therm\",\"therm-US\"], 105480400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Wh>\" : [[\"Wh\"], 3600, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n\n    /* force */\n    \"<newton>\"  : [[\"N\",\"Newton\",\"newton\"], 1.0, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<dyne>\"  : [[\"dyn\",\"dyne\"], 1e-5, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<pound-force>\"  : [[\"lbf\",\"pound-force\"], 4.448222, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* frequency */\n    \"<hertz>\" : [[\"Hz\",\"hertz\",\"Hertz\"], 1.0, \"frequency\", [\"<1>\"], [\"<second>\"]],\n\n    /* angle */\n    \"<radian>\" :[[\"rad\",\"radian\",\"radians\"], 1.0, \"angle\", [\"<radian>\"]],\n    \"<degree>\" :[[\"deg\",\"degree\",\"degrees\"], Math.PI / 180.0, \"angle\", [\"<radian>\"]],\n    \"<gradian>\"   :[[\"gon\",\"grad\",\"gradian\",\"grads\"], Math.PI / 200.0, \"angle\", [\"<radian>\"]],\n    \"<steradian>\"  : [[\"sr\",\"steradian\",\"steradians\"], 1.0, \"solid_angle\", [\"<steradian>\"]],\n\n    /* rotation */\n    \"<rotation>\" : [[\"rotation\"], 2.0 * Math.PI, \"angle\", [\"<radian>\"]],\n    \"<rpm>\"   :[[\"rpm\"], 2.0 * Math.PI / 60.0, \"angular_velocity\", [\"<radian>\"], [\"<second>\"]],\n\n    /* information */\n    \"<byte>\"  :[[\"B\",\"byte\",\"bytes\"], 1.0, \"information\", [\"<byte>\"]],\n    \"<bit>\"  :[[\"b\",\"bit\",\"bits\"], 0.125, \"information\", [\"<byte>\"]],\n\n    /* information rate */\n    \"<Bps>\" : [[\"Bps\"], 1.0, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n    \"<bps>\" : [[\"bps\"], 0.125, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n\n    /* currency */\n    \"<dollar>\":[[\"USD\",\"dollar\"], 1.0, \"currency\", [\"<dollar>\"]],\n    \"<cents>\" :[[\"cents\"], 0.01, \"currency\", [\"<dollar>\"]],\n\n    /* luminosity */\n    \"<candela>\" : [[\"cd\",\"candela\"], 1.0, \"luminosity\", [\"<candela>\"]],\n    \"<lumen>\" : [[\"lm\",\"lumen\"], 1.0, \"luminous_power\", [\"<candela>\",\"<steradian>\"]],\n    \"<lux>\" :[[\"lux\"], 1.0, \"illuminance\", [\"<candela>\",\"<steradian>\"], [\"<meter>\",\"<meter>\"]],\n\n    /* power */\n    \"<watt>\"  : [[\"W\",\"watt\",\"watts\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere>\"  : [[\"VA\",\"volt-ampere\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere-reactive>\"  : [[\"var\",\"Var\",\"VAr\",\"VAR\",\"volt-ampere-reactive\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<horsepower>\"  :  [[\"hp\",\"horsepower\"], 745.699872, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n\n    /* radiation */\n    \"<gray>\" : [[\"Gy\",\"gray\",\"grays\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<roentgen>\" : [[\"R\",\"roentgen\"], 0.009330, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<sievert>\" : [[\"Sv\",\"sievert\",\"sieverts\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<becquerel>\" : [[\"Bq\",\"becquerel\",\"becquerels\"], 1.0, \"radiation\", [\"<1>\"],[\"<second>\"]],\n    \"<curie>\" : [[\"Ci\",\"curie\",\"curies\"], 3.7e10, \"radiation\", [\"<1>\"],[\"<second>\"]],\n\n    /* rate */\n    \"<cpm>\" : [[\"cpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<dpm>\" : [[\"dpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<bpm>\" : [[\"bpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n\n    /* resolution / typography */\n    \"<dot>\" : [[\"dot\",\"dots\"], 1, \"resolution\", [\"<each>\"]],\n    \"<pixel>\" : [[\"pixel\",\"px\"], 1, \"resolution\", [\"<each>\"]],\n    \"<ppi>\" : [[\"ppi\"], 1, \"resolution\", [\"<pixel>\"], [\"<inch>\"]],\n    \"<dpi>\" : [[\"dpi\"], 1, \"typography\", [\"<dot>\"], [\"<inch>\"]],\n\n    /* other */\n    \"<cell>\" : [[\"cells\",\"cell\"], 1, \"counting\", [\"<each>\"]],\n    \"<each>\" : [[\"each\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<count>\" : [[\"count\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<base-pair>\"  : [[\"bp\",\"base-pair\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<nucleotide>\" : [[\"nt\",\"nucleotide\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<molecule>\" : [[\"molecule\",\"molecules\"], 1.0, \"counting\", [\"<1>\"]],\n    \"<dozen>\" :  [[\"doz\",\"dz\",\"dozen\"],12.0,\"prefix_only\", [\"<each>\"]],\n    \"<percent>\": [[\"%\",\"percent\"], 0.01, \"prefix_only\", [\"<1>\"]],\n    \"<ppm>\" :  [[\"ppm\"],1e-6, \"prefix_only\", [\"<1>\"]],\n    \"<ppt>\" :  [[\"ppt\"],1e-9, \"prefix_only\", [\"<1>\"]],\n    \"<gross>\" :  [[\"gr\",\"gross\"],144.0, \"prefix_only\", [\"<dozen>\",\"<dozen>\"]],\n    \"<decibel>\"  : [[\"dB\",\"decibel\",\"decibels\"], 1.0, \"logarithmic\", [\"<decibel>\"]]\n  };\n\n  var BASE_UNITS = [\"<meter>\",\"<kilogram>\",\"<second>\",\"<mole>\", \"<ampere>\",\"<radian>\",\"<kelvin>\",\"<temp-K>\",\"<byte>\",\"<dollar>\",\"<candela>\",\"<each>\",\"<steradian>\",\"<decibel>\"];\n\n  var UNITY = \"<1>\";\n  var UNITY_ARRAY = [UNITY];\n\n  // Setup\n\n  /**\n   * Asserts unit definition is valid\n   *\n   * @param {string} unitDef - Name of unit to test\n   * @param {Object} definition - Definition of unit to test\n   *\n   * @returns {void}\n   * @throws {QtyError} if unit definition is not valid\n   */\n  function validateUnitDefinition(unitDef, definition) {\n    var scalar = definition[1];\n    var numerator = definition[3] || [];\n    var denominator = definition[4] || [];\n    if (!isNumber(scalar)) {\n      throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                         \"'scalar' must be a number\");\n    }\n\n    numerator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'numerator' is not recognized\");\n      }\n    });\n\n    denominator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'denominator' is not recognized\");\n      }\n    });\n  }\n\n  var PREFIX_VALUES = {};\n  var PREFIX_MAP = {};\n  var UNIT_VALUES = {};\n  var UNIT_MAP = {};\n  var OUTPUT_MAP = {};\n  for (var unitDef in UNITS) {\n    if (UNITS.hasOwnProperty(unitDef)) {\n      var definition = UNITS[unitDef];\n      if (definition[2] === \"prefix\") {\n        PREFIX_VALUES[unitDef] = definition[1];\n        for (var i = 0; i < definition[0].length; i++) {\n          PREFIX_MAP[definition[0][i]] = unitDef;\n        }\n      }\n      else {\n        validateUnitDefinition(unitDef, definition);\n        UNIT_VALUES[unitDef] = {\n          scalar: definition[1],\n          numerator: definition[3],\n          denominator: definition[4]\n        };\n        for (var j = 0; j < definition[0].length; j++) {\n          UNIT_MAP[definition[0][j]] = unitDef;\n        }\n      }\n      OUTPUT_MAP[unitDef] = definition[0][0];\n    }\n  }\n\n  /**\n   * Returns a list of available units of kind\n   *\n   * @param {string} [kind] - kind of units\n   * @returns {array} names of units\n   * @throws {QtyError} if kind is unknown\n   */\n  function getUnits(kind) {\n    var i;\n    var units = [];\n    var unitKeys = Object.keys(UNITS);\n    if (typeof kind === \"undefined\") {\n      for (i = 0; i < unitKeys.length; i++) {\n        if ([\"\", \"prefix\"].indexOf(UNITS[unitKeys[i]][2]) === -1) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n    else if (this.getKinds().indexOf(kind) === -1) {\n      throw new QtyError(\"Kind not recognized\");\n    }\n    else {\n      for (i = 0; i < unitKeys.length; i++) {\n        if (UNITS[unitKeys[i]][2] === kind) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n\n    return units.sort(function(a, b) {\n      if (a.toLowerCase() < b.toLowerCase()) {\n        return -1;\n      }\n      if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Returns a list of alternative names for a unit\n   *\n   * @param {string} unitName - name of unit\n   * @returns {string[]} aliases for unit\n   * @throws {QtyError} if unit is unknown\n   */\n  function getAliases(unitName) {\n    if (!UNIT_MAP[unitName]) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n    return UNITS[UNIT_MAP[unitName]][0];\n  }\n\n  var SIGNATURE_VECTOR = [\"length\", \"time\", \"temperature\", \"mass\", \"current\", \"substance\", \"luminosity\", \"currency\", \"information\", \"angle\"];\n\n  /*\n  calculates the unit signature id for use in comparing compatible units and simplification\n  the signature is based on a simple classification of units and is based on the following publication\n\n  Novak, G.S., Jr. \"Conversion of units of measurement\", IEEE Transactions on Software Engineering,\n  21(8), Aug 1995, pp.651-661\n  doi://10.1109/32.403789\n  http://ieeexplore.ieee.org/Xplore/login.jsp?url=/iel1/32/9079/00403789.pdf?isnumber=9079&prod=JNL&arnumber=403789&arSt=651&ared=661&arAuthor=Novak%2C+G.S.%2C+Jr.\n  */\n  function unitSignature() {\n    if (this.signature) {\n      return this.signature;\n    }\n    var vector = unitSignatureVector.call(this);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] *= Math.pow(20, i);\n    }\n\n    return vector.reduce(\n      function(previous, current) {\n        return previous + current;\n      },\n      0\n    );\n  }\n\n  // calculates the unit signature vector used by unit_signature\n  function unitSignatureVector() {\n    if (!this.isBase()) {\n      return unitSignatureVector.call(this.toBase());\n    }\n\n    var vector = new Array(SIGNATURE_VECTOR.length);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] = 0;\n    }\n    var r, n;\n    for (var j = 0; j < this.numerator.length; j++) {\n      if ((r = UNITS[this.numerator[j]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] + 1;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.denominator.length; k++) {\n      if ((r = UNITS[this.denominator[k]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] - 1;\n        }\n      }\n    }\n    return vector;\n  }\n\n  var SIGN = \"[+-]\";\n  var INTEGER = \"\\\\d+\";\n  var SIGNED_INTEGER = SIGN + \"?\" + INTEGER;\n  var FRACTION = \"\\\\.\" + INTEGER;\n  var FLOAT = \"(?:\" + INTEGER + \"(?:\" + FRACTION + \")?\" + \")\" +\n              \"|\" +\n              \"(?:\" + FRACTION + \")\";\n  var EXPONENT = \"[Ee]\" + SIGNED_INTEGER;\n  var SCI_NUMBER = \"(?:\" + FLOAT + \")(?:\" + EXPONENT + \")?\";\n  var SIGNED_NUMBER = SIGN + \"?\\\\s*\" + SCI_NUMBER;\n  var QTY_STRING = \"(\" + SIGNED_NUMBER + \")?\" + \"\\\\s*([^/]*)(?:\\/(.+))?\";\n  var QTY_STRING_REGEX = new RegExp(\"^\" + QTY_STRING + \"$\");\n\n  var POWER_OP = \"\\\\^|\\\\*{2}\";\n  // Allow unit powers representing scalar, length, area, volume; 4 is for some\n  // special case representations in SI base units.\n  var SAFE_POWER = \"[01234]\";\n  var TOP_REGEX = new RegExp (\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(-?\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n  var BOTTOM_REGEX = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n\n  /* parse a string into a unit object.\n   * Typical formats like :\n   * \"5.6 kg*m/s^2\"\n   * \"5.6 kg*m*s^-2\"\n   * \"5.6 kilogram*meter*second^-2\"\n   * \"2.2 kPa\"\n   * \"37 degC\"\n   * \"1\"  -- creates a unitless constant with value 1\n   * \"GPa\"  -- creates a unit with scalar 1 with units 'GPa'\n   * 6'4\"  -- recognized as 6 feet + 4 inches\n   * 8 lbs 8 oz -- recognized as 8 lbs + 8 ounces\n   */\n  function parse(val) {\n    if (!isString(val)) {\n      val = val.toString();\n    }\n    val = val.trim();\n\n    var result = QTY_STRING_REGEX.exec(val);\n    if (!result) {\n      throw new QtyError(val + \": Quantity not recognized\");\n    }\n\n    var scalarMatch = result[1];\n    if (scalarMatch) {\n      // Allow whitespaces between sign and scalar for loose parsing\n      scalarMatch = scalarMatch.replace(/\\s/g, \"\");\n      this.scalar = parseFloat(scalarMatch);\n    }\n    else {\n      this.scalar = 1;\n    }\n    var top = result[2];\n    var bottom = result[3];\n\n    var n, x, nx;\n    // TODO DRY me\n    while ((result = TOP_REGEX.exec(top))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var i = 0; i < Math.abs(n) ; i++) {\n        nx += x;\n      }\n      if (n >= 0) {\n        top = top.replace(result[0], nx);\n      }\n      else {\n        bottom = bottom ? bottom + nx : nx;\n        top = top.replace(result[0], \"\");\n      }\n    }\n\n    while ((result = BOTTOM_REGEX.exec(bottom))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var j = 0; j < n ; j++) {\n        nx += x;\n      }\n\n      bottom = bottom.replace(result[0], nx);\n    }\n\n    if (top) {\n      this.numerator = parseUnits(top.trim());\n    }\n    if (bottom) {\n      this.denominator = parseUnits(bottom.trim());\n    }\n  }\n\n  var PREFIX_REGEX = Object.keys(PREFIX_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  var UNIT_REGEX = Object.keys(UNIT_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  /*\n   * Minimal boundary regex to support units with Unicode characters\n   * \\b only works for ASCII\n   */\n  var BOUNDARY_REGEX = \"\\\\b|$\";\n  var UNIT_MATCH = \"(\" + PREFIX_REGEX + \")??(\" +\n                   UNIT_REGEX +\n                   \")(?:\" + BOUNDARY_REGEX + \")\";\n  var UNIT_TEST_REGEX = new RegExp(\"^\\\\s*(\" + UNIT_MATCH + \"[\\\\s\\\\*]*)+$\");\n  var UNIT_MATCH_REGEX = new RegExp(UNIT_MATCH, \"g\"); // g flag for multiple occurences\n  var parsedUnitsCache = {};\n  /**\n   * Parses and converts units string to normalized unit array.\n   * Result is cached to speed up next calls.\n   *\n   * @param {string} units Units string\n   * @returns {string[]} Array of normalized units\n   *\n   * @example\n   * // Returns [\"<second>\", \"<meter>\", \"<second>\"]\n   * parseUnits(\"s m s\");\n   *\n   */\n  function parseUnits(units) {\n    var cached = parsedUnitsCache[units];\n    if (cached) {\n      return cached;\n    }\n\n    var unitMatch, normalizedUnits = [];\n\n    // Scan\n    if (!UNIT_TEST_REGEX.test(units)) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n\n    while ((unitMatch = UNIT_MATCH_REGEX.exec(units))) {\n      normalizedUnits.push(unitMatch.slice(1));\n    }\n\n    normalizedUnits = normalizedUnits.map(function(item) {\n      return PREFIX_MAP[item[0]] ? [PREFIX_MAP[item[0]], UNIT_MAP[item[1]]] : [UNIT_MAP[item[1]]];\n    });\n\n    // Flatten and remove null elements\n    normalizedUnits = normalizedUnits.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    normalizedUnits = normalizedUnits.filter(function(item) {\n      return item;\n    });\n\n    parsedUnitsCache[units] = normalizedUnits;\n\n    return normalizedUnits;\n  }\n\n  /**\n   * Parses a string as a quantity\n   * @param {string} value - quantity as text\n   * @throws if value is not a string\n   * @returns {Qty|null} Parsed quantity or null if unrecognized\n   */\n  function globalParse(value) {\n    if (!isString(value)) {\n      throw new QtyError(\"Argument should be a string\");\n    }\n\n    try {\n      return this(value);\n    }\n    catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty instance\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a Qty instance, false otherwise\n   */\n  function isQty(value) {\n    return value instanceof Qty;\n  }\n\n  function Qty(initValue, initUnits) {\n    assertValidConstructorArgs.apply(null, arguments);\n\n    if (!(isQty(this))) {\n      return new Qty(initValue, initUnits);\n    }\n\n    this.scalar = null;\n    this.baseScalar = null;\n    this.signature = null;\n    this._conversionCache = {};\n    this.numerator = UNITY_ARRAY;\n    this.denominator = UNITY_ARRAY;\n\n    if (isDefinitionObject(initValue)) {\n      this.scalar = initValue.scalar;\n      this.numerator = (initValue.numerator && initValue.numerator.length !== 0) ? initValue.numerator : UNITY_ARRAY;\n      this.denominator = (initValue.denominator && initValue.denominator.length !== 0) ? initValue.denominator : UNITY_ARRAY;\n    }\n    else if (initUnits) {\n      parse.call(this, initUnits);\n      this.scalar = initValue;\n    }\n    else {\n      parse.call(this, initValue);\n    }\n\n    // math with temperatures is very limited\n    if (this.denominator.join(\"*\").indexOf(\"temp\") >= 0) {\n      throw new QtyError(\"Cannot divide with temperatures\");\n    }\n    if (this.numerator.join(\"*\").indexOf(\"temp\") >= 0) {\n      if (this.numerator.length > 1) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n      if (!compareArray(this.denominator, UNITY_ARRAY)) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n    }\n\n    this.initValue = initValue;\n    updateBaseScalar.call(this);\n\n    if (this.isTemperature() && this.baseScalar < 0) {\n      throw new QtyError(\"Temperatures must not be less than absolute zero\");\n    }\n  }\n\n  Qty.prototype = {\n    // Properly set up constructor\n    constructor: Qty,\n  };\n\n  /**\n   * Asserts constructor arguments are valid\n   *\n   * @param {*} value - Value to test\n   * @param {string} [units] - Optional units when value is passed as a number\n   *\n   * @returns {void}\n   * @throws {QtyError} if constructor arguments are invalid\n   */\n  function assertValidConstructorArgs(value, units) {\n    if (units) {\n      if (!(isNumber(value) && isString(units))) {\n        throw new QtyError(\"Only number accepted as initialization value \" +\n                           \"when units are explicitly provided\");\n      }\n    }\n    else {\n      if (!(isString(value) ||\n            isNumber(value) ||\n            isQty(value)    ||\n            isDefinitionObject(value))) {\n        throw new QtyError(\"Only string, number or quantity accepted as \" +\n                           \"single initialization value\");\n      }\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty definition object\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a definition object, false otherwise\n   */\n  function isDefinitionObject(value) {\n    return value && typeof value === \"object\" && value.hasOwnProperty(\"scalar\");\n  }\n\n  function updateBaseScalar() {\n    if (this.baseScalar) {\n      return this.baseScalar;\n    }\n    if (this.isBase()) {\n      this.baseScalar = this.scalar;\n      this.signature = unitSignature.call(this);\n    }\n    else {\n      var base = this.toBase();\n      this.baseScalar = base.scalar;\n      this.signature = base.signature;\n    }\n  }\n\n  var KINDS = {\n    \"-312078\": \"elastance\",\n    \"-312058\": \"resistance\",\n    \"-312038\": \"inductance\",\n    \"-152058\": \"potential\",\n    \"-152040\": \"magnetism\",\n    \"-152038\": \"magnetism\",\n    \"-7997\": \"specific_volume\",\n    \"-79\": \"snap\",\n    \"-59\": \"jolt\",\n    \"-39\": \"acceleration\",\n    \"-38\": \"radiation\",\n    \"-20\": \"frequency\",\n    \"-19\": \"speed\",\n    \"-18\": \"viscosity\",\n    \"-17\": \"volumetric_flow\",\n    \"-1\": \"wavenumber\",\n    \"0\": \"unitless\",\n    \"1\": \"length\",\n    \"2\": \"area\",\n    \"3\": \"volume\",\n    \"20\": \"time\",\n    \"400\": \"temperature\",\n    \"7941\": \"yank\",\n    \"7942\": \"power\",\n    \"7959\": \"pressure\",\n    \"7961\": \"force\",\n    \"7962\": \"energy\",\n    \"7979\": \"viscosity\",\n    \"7981\": \"momentum\",\n    \"7982\": \"angular_momentum\",\n    \"7997\": \"density\",\n    \"7998\": \"area_density\",\n    \"8000\": \"mass\",\n    \"152020\": \"radiation_exposure\",\n    \"159999\": \"magnetism\",\n    \"160000\": \"current\",\n    \"160020\": \"charge\",\n    \"312058\": \"conductance\",\n    \"312078\": \"capacitance\",\n    \"3199980\": \"activity\",\n    \"3199997\": \"molar_concentration\",\n    \"3200000\": \"substance\",\n    \"63999998\": \"illuminance\",\n    \"64000000\": \"luminous_power\",\n    \"1280000000\": \"currency\",\n    \"25599999980\": \"information_rate\",\n    \"25600000000\": \"information\",\n    \"511999999980\": \"angular_velocity\",\n    \"512000000000\": \"angle\"\n  };\n\n  /**\n   * Returns the list of available well-known kinds of units, e.g.\n   * \"radiation\" or \"length\".\n   *\n   * @returns {string[]} names of kinds of units\n   */\n  function getKinds() {\n    return uniq(Object.keys(KINDS).map(function(knownSignature) {\n      return KINDS[knownSignature];\n    }));\n  }\n\n  Qty.prototype.kind = function() {\n    return KINDS[this.signature.toString()];\n  };\n\n  assign(Qty.prototype, {\n    isDegrees: function() {\n      // signature may not have been calculated yet\n      return (this.signature === null || this.signature === 400) &&\n        this.numerator.length === 1 &&\n        compareArray(this.denominator, UNITY_ARRAY) &&\n        (this.numerator[0].match(/<temp-[CFRK]>/) || this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/));\n    },\n\n    isTemperature: function() {\n      return this.isDegrees() && this.numerator[0].match(/<temp-[CFRK]>/);\n    }\n  });\n\n  function subtractTemperatures(lhs,rhs) {\n    var lhsUnits = lhs.units();\n    var rhsConverted = rhs.to(lhsUnits);\n    var dstDegrees = Qty(getDegreeUnits(lhsUnits));\n    return Qty({\"scalar\": lhs.scalar - rhsConverted.scalar, \"numerator\": dstDegrees.numerator, \"denominator\": dstDegrees.denominator});\n  }\n\n  function subtractTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar - tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function addTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar + tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function getDegreeUnits(units) {\n    if (units === \"tempK\") {\n      return \"degK\";\n    }\n    else if (units === \"tempC\") {\n      return \"degC\";\n    }\n    else if (units === \"tempF\") {\n      return \"degF\";\n    }\n    else if (units === \"tempR\") {\n      return \"degR\";\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n  }\n\n  function toDegrees(src,dst) {\n    var srcDegK = toDegK(src);\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"degK\") {\n      dstScalar = srcDegK.scalar;\n    }\n    else if (dstUnits === \"degC\") {\n      dstScalar = srcDegK.scalar ;\n    }\n    else if (dstUnits === \"degF\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else if (dstUnits === \"degR\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for degree conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toDegK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempF\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<kelvin>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  function toTemp(src,dst) {\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"tempK\") {\n      dstScalar = src.baseScalar;\n    }\n    else if (dstUnits === \"tempC\") {\n      dstScalar = src.baseScalar - 273.15;\n    }\n    else if (dstUnits === \"tempF\") {\n      dstScalar = (src.baseScalar * 9 / 5) - 459.67;\n    }\n    else if (dstUnits === \"tempR\") {\n      dstScalar = src.baseScalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toTempK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar + 273.15;\n    }\n    else if (units === \"tempF\") {\n      q = (qty.scalar + 459.67) * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<temp-K>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  assign(Qty.prototype, {\n    /**\n     * Converts to other compatible units.\n     * Instance's converted quantities are cached for faster subsequent calls.\n     *\n     * @param {(string|Qty)} other - Target units as string or retrieved from\n     *                               other Qty instance (scalar is ignored)\n     *\n     * @returns {Qty} New converted Qty instance with target units\n     *\n     * @throws {QtyError} if target units are incompatible\n     *\n     * @example\n     * var weight = Qty(\"25 kg\");\n     * weight.to(\"lb\"); // => Qty(\"55.11556554621939 lbs\");\n     * weight.to(Qty(\"3 g\")); // => Qty(\"25000 g\"); // scalar of passed Qty is ignored\n     */\n    to: function(other) {\n      var cached, target;\n\n      if (other === undefined || other === null) {\n        return this;\n      }\n\n      if (!isString(other)) {\n        return this.to(other.units());\n      }\n\n      cached = this._conversionCache[other];\n      if (cached) {\n        return cached;\n      }\n\n      // Instantiating target to normalize units\n      target = Qty(other);\n      if (target.units() === this.units()) {\n        return this;\n      }\n\n      if (!this.isCompatible(target)) {\n        if (this.isInverse(target)) {\n          target = this.inverse().to(other);\n        }\n        else {\n          throwIncompatibleUnits(this.units(), target.units());\n        }\n      }\n      else {\n        if (target.isTemperature()) {\n          target = toTemp(this,target);\n        }\n        else if (target.isDegrees()) {\n          target = toDegrees(this,target);\n        }\n        else {\n          var q = divSafe(this.baseScalar, target.baseScalar);\n          target = Qty({\"scalar\": q, \"numerator\": target.numerator, \"denominator\": target.denominator});\n        }\n      }\n\n      this._conversionCache[other] = target;\n      return target;\n    },\n\n    // convert to base SI units\n    // results of the conversion are cached so subsequent calls to this will be fast\n    toBase: function() {\n      if (this.isBase()) {\n        return this;\n      }\n\n      if (this.isTemperature()) {\n        return toTempK(this);\n      }\n\n      var cached = baseUnitCache[this.units()];\n      if (!cached) {\n        cached = toBaseUnits(this.numerator,this.denominator);\n        baseUnitCache[this.units()] = cached;\n      }\n      return cached.mul(this.scalar);\n    },\n\n    // Converts the unit back to a float if it is unitless.  Otherwise raises an exception\n    toFloat: function() {\n      if (this.isUnitless()) {\n        return this.scalar;\n      }\n      throw new QtyError(\"Can't convert to Float unless unitless.  Use Unit#scalar\");\n    },\n\n    /**\n     * Returns the nearest multiple of quantity passed as\n     * precision\n     *\n     * @param {(Qty|string|number)} precQuantity - Quantity, string formated\n     *   quantity or number as expected precision\n     *\n     * @returns {Qty} Nearest multiple of precQuantity\n     *\n     * @example\n     * Qty('5.5 ft').toPrec('2 ft'); // returns 6 ft\n     * Qty('0.8 cu').toPrec('0.25 cu'); // returns 0.75 cu\n     * Qty('6.3782 m').toPrec('cm'); // returns 6.38 m\n     * Qty('1.146 MPa').toPrec('0.1 bar'); // returns 1.15 MPa\n     *\n     */\n    toPrec: function(precQuantity) {\n      if (isString(precQuantity)) {\n        precQuantity = Qty(precQuantity);\n      }\n      if (isNumber(precQuantity)) {\n        precQuantity = Qty(precQuantity + \" \" + this.units());\n      }\n\n      if (!this.isUnitless()) {\n        precQuantity = precQuantity.to(this.units());\n      }\n      else if (!precQuantity.isUnitless()) {\n        throwIncompatibleUnits(this.units(), precQuantity.units());\n      }\n\n      if (precQuantity.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      var precRoundedResult = mulSafe(\n        Math.round(this.scalar / precQuantity.scalar),\n        precQuantity.scalar\n      );\n\n      return Qty(precRoundedResult + this.units());\n    }\n  });\n\n  /**\n   * Configures and returns a fast function to convert\n   * Number values from units to others.\n   * Useful to efficiently convert large array of values\n   * with same units into others with iterative methods.\n   * Does not take care of rounding issues.\n   *\n   * @param {string} srcUnits Units of values to convert\n   * @param {string} dstUnits Units to convert to\n   *\n   * @returns {Function} Converting function accepting Number value\n   *   and returning converted value\n   *\n   * @throws \"Incompatible units\" if units are incompatible\n   *\n   * @example\n   * // Converting large array of numbers with the same units\n   * // into other units\n   * var converter = Qty.swiftConverter(\"m/h\", \"ft/s\");\n   * var convertedSerie = largeSerie.map(converter);\n   *\n   */\n  function swiftConverter(srcUnits, dstUnits) {\n    var srcQty = Qty(srcUnits);\n    var dstQty = Qty(dstUnits);\n\n    if (srcQty.eq(dstQty)) {\n      return identity;\n    }\n\n    var convert;\n    if (!srcQty.isTemperature()) {\n      convert = function(value) {\n        return value * srcQty.baseScalar / dstQty.baseScalar;\n      };\n    }\n    else {\n      convert = function(value) {\n        // TODO Not optimized\n        return srcQty.mul(value).to(dstQty).scalar;\n      };\n    }\n\n    return function converter(value) {\n      var i, length, result;\n      if (!Array.isArray(value)) {\n        return convert(value);\n      }\n      else {\n        length = value.length;\n        result = [];\n        for (i = 0; i < length; i++) {\n          result.push(convert(value[i]));\n        }\n        return result;\n      }\n    };\n  }\n\n  var baseUnitCache = {};\n\n  function toBaseUnits(numerator,denominator) {\n    var num = [];\n    var den = [];\n    var q = 1;\n    var unit;\n    for (var i = 0; i < numerator.length; i++) {\n      unit = numerator[i];\n      if (PREFIX_VALUES[unit]) {\n        // workaround to fix\n        // 0.1 * 0.1 => 0.010000000000000002\n        q = mulSafe(q, PREFIX_VALUES[unit]);\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q *= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            num.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            den.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n    for (var j = 0; j < denominator.length; j++) {\n      unit = denominator[j];\n      if (PREFIX_VALUES[unit]) {\n        q /= PREFIX_VALUES[unit];\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q /= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            den.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            num.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return Qty({\"scalar\": q, \"numerator\": num, \"denominator\": den});\n  }\n\n  Qty.parse = globalParse;\n\n  Qty.getUnits = getUnits;\n  Qty.getAliases = getAliases;\n\n  Qty.mulSafe = mulSafe;\n  Qty.divSafe = divSafe;\n\n  Qty.getKinds = getKinds;\n\n  Qty.swiftConverter = swiftConverter;\n\n  Qty.Error = QtyError;\n\n  assign(Qty.prototype, {\n    // Returns new instance with units of this\n    add: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        throw new QtyError(\"Cannot add two temperatures\");\n      }\n      else if (this.isTemperature()) {\n        return addTempDegrees(this, other);\n      }\n      else if (other.isTemperature()) {\n        return addTempDegrees(other, this);\n      }\n\n      return Qty({\"scalar\": this.scalar + other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    sub: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        return subtractTemperatures(this,other);\n      }\n      else if (this.isTemperature()) {\n        return subtractTempDegrees(this,other);\n      }\n      else if (other.isTemperature()) {\n        throw new QtyError(\"Cannot subtract a temperature from a differential degree unit\");\n      }\n\n      return Qty({\"scalar\": this.scalar - other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    mul: function(other) {\n      if (isNumber(other)) {\n        return Qty({\"scalar\": mulSafe(this.scalar, other), \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if ((this.isTemperature() || other.isTemperature()) && !(this.isUnitless() || other.isUnitless())) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.numerator, op2.denominator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, op2.scalar, numdenscale[2]), \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    div: function(other) {\n      if (isNumber(other)) {\n        if (other === 0) {\n          throw new QtyError(\"Divide by zero\");\n        }\n        return Qty({\"scalar\": this.scalar / other, \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (other.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      if (other.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      else if (this.isTemperature() && !other.isUnitless()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.denominator, op2.numerator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, numdenscale[2]) / op2.scalar, \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    // Returns a Qty that is the inverse of this Qty,\n    inverse: function() {\n      if (this.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      if (this.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n      return Qty({\"scalar\": 1 / this.scalar, \"numerator\": this.denominator, \"denominator\": this.numerator});\n    }\n  });\n\n  function cleanTerms(num1, den1, num2, den2) {\n    function notUnity(val) {\n      return val !== UNITY;\n    }\n\n    num1 = num1.filter(notUnity);\n    num2 = num2.filter(notUnity);\n    den1 = den1.filter(notUnity);\n    den2 = den2.filter(notUnity);\n\n    var combined = {};\n\n    function combineTerms(terms, direction) {\n      var k;\n      var prefix;\n      var prefixValue;\n      for (var i = 0; i < terms.length; i++) {\n        if (PREFIX_VALUES[terms[i]]) {\n          k = terms[i + 1];\n          prefix = terms[i];\n          prefixValue = PREFIX_VALUES[prefix];\n          i++;\n        }\n        else {\n          k = terms[i];\n          prefix = null;\n          prefixValue = 1;\n        }\n        if (k && k !== UNITY) {\n          if (combined[k]) {\n            combined[k][0] += direction;\n            var combinedPrefixValue = combined[k][2] ? PREFIX_VALUES[combined[k][2]] : 1;\n            combined[k][direction === 1 ? 3 : 4] *= divSafe(prefixValue, combinedPrefixValue);\n          }\n          else {\n            combined[k] = [direction, k, prefix, 1, 1];\n          }\n        }\n      }\n    }\n\n    combineTerms(num1, 1);\n    combineTerms(den1, -1);\n    combineTerms(num2, 1);\n    combineTerms(den2, -1);\n\n    var num = [];\n    var den = [];\n    var scale = 1;\n\n    for (var prop in combined) {\n      if (combined.hasOwnProperty(prop)) {\n        var item = combined[prop];\n        var n;\n        if (item[0] > 0) {\n          for (n = 0; n < item[0]; n++) {\n            num.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        else if (item[0] < 0) {\n          for (n = 0; n < -item[0]; n++) {\n            den.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        scale *= divSafe(item[3], item[4]);\n      }\n    }\n\n    if (num.length === 0) {\n      num = UNITY_ARRAY;\n    }\n    if (den.length === 0) {\n      den = UNITY_ARRAY;\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return [num, den, scale];\n  }\n\n  assign(Qty.prototype, {\n    eq: function(other) {\n      return this.compareTo(other) === 0;\n    },\n\n    lt: function(other) {\n      return this.compareTo(other) === -1;\n    },\n\n    lte: function(other) {\n      return this.eq(other) || this.lt(other);\n    },\n\n    gt: function(other) {\n      return this.compareTo(other) === 1;\n    },\n\n    gte: function(other) {\n      return this.eq(other) || this.gt(other);\n    },\n\n    // Compare two Qty objects. Throws an exception if they are not of compatible types.\n    // Comparisons are done based on the value of the quantity in base SI units.\n    //\n    // NOTE: We cannot compare inverses as that breaks the general compareTo contract:\n    //   if a.compareTo(b) < 0 then b.compareTo(a) > 0\n    //   if a.compareTo(b) == 0 then b.compareTo(a) == 0\n    //\n    //   Since \"10S\" == \".1ohm\" (10 > .1) and \"10ohm\" == \".1S\" (10 > .1)\n    //     Qty(\"10S\").inverse().compareTo(\"10ohm\") == -1\n    //     Qty(\"10ohm\").inverse().compareTo(\"10S\") == -1\n    //\n    //   If including inverses in the sort is needed, I suggest writing: Qty.sort(qtyArray,units)\n    compareTo: function(other) {\n      if (isString(other)) {\n        return this.compareTo(Qty(other));\n      }\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n      if (this.baseScalar < other.baseScalar) {\n        return -1;\n      }\n      else if (this.baseScalar === other.baseScalar) {\n        return 0;\n      }\n      else if (this.baseScalar > other.baseScalar) {\n        return 1;\n      }\n    },\n\n    // Return true if quantities and units match\n    // Unit(\"100 cm\").same(Unit(\"100 cm\"))  # => true\n    // Unit(\"100 cm\").same(Unit(\"1 m\"))     # => false\n    same: function(other) {\n      return (this.scalar === other.scalar) && (this.units() === other.units());\n    }\n  });\n\n  assign(Qty.prototype, {\n    // returns true if no associated units\n    // false, even if the units are \"unitless\" like 'radians, each, etc'\n    isUnitless: function() {\n      return [this.numerator, this.denominator].every(function(item) {\n        return compareArray(item, UNITY_ARRAY);\n      });\n    },\n\n    /*\n    check to see if units are compatible, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isCompatible: function(other) {\n      if (isString(other)) {\n        return this.isCompatible(Qty(other));\n      }\n\n      if (!(isQty(other))) {\n        return false;\n      }\n\n      if (other.signature !== undefined) {\n        return this.signature === other.signature;\n      }\n      else {\n        return false;\n      }\n    },\n\n    /*\n    check to see if units are inverse of each other, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isInverse: function(other) {\n      return this.inverse().isCompatible(other);\n    },\n\n    // Returns 'true' if the Unit is represented in base units\n    isBase: function() {\n      if (this._isBase !== undefined) {\n        return this._isBase;\n      }\n      if (this.isDegrees() && this.numerator[0].match(/<(kelvin|temp-K)>/)) {\n        this._isBase = true;\n        return this._isBase;\n      }\n\n      this.numerator.concat(this.denominator).forEach(function(item) {\n        if (item !== UNITY && BASE_UNITS.indexOf(item) === -1 ) {\n          this._isBase = false;\n        }\n      }, this);\n      if (this._isBase === false) {\n        return this._isBase;\n      }\n      this._isBase = true;\n      return this._isBase;\n    }\n  });\n\n  function NestedMap() {}\n\n  NestedMap.prototype.get = function(keys) {\n\n    // Allows to pass key1, key2, ... instead of [key1, key2, ...]\n    if (arguments.length > 1) {\n      // Slower with Firefox but faster with Chrome than\n      // Array.prototype.slice.call(arguments)\n      // See http://jsperf.com/array-apply-versus-array-prototype-slice-call\n      keys = Array.apply(null, arguments);\n    }\n\n    return keys.reduce(function(map, key, index) {\n      if (map) {\n\n        var childMap = map[key];\n\n        if (index === keys.length - 1) {\n          return childMap ? childMap.data : undefined;\n        }\n        else {\n          return childMap;\n        }\n      }\n    },\n    this);\n  };\n\n  NestedMap.prototype.set = function(keys, value) {\n\n    if (arguments.length > 2) {\n      keys = Array.prototype.slice.call(arguments, 0, -1);\n      value = arguments[arguments.length - 1];\n    }\n\n    return keys.reduce(function(map, key, index) {\n\n      var childMap = map[key];\n      if (childMap === undefined) {\n        childMap = map[key] = {};\n      }\n\n      if (index === keys.length - 1) {\n        childMap.data = value;\n        return value;\n      }\n      else {\n        return childMap;\n      }\n    }, this);\n  };\n\n  /**\n   * Default formatter\n   *\n   * @param {number} scalar - scalar value\n   * @param {string} units - units as string\n   *\n   * @returns {string} formatted result\n   */\n  function defaultFormatter(scalar, units) {\n    return (scalar + \" \" + units).trim();\n  }\n\n  /**\n   *\n   * Configurable Qty default formatter\n   *\n   * @type {function}\n   *\n   * @param {number} scalar\n   * @param {string} units\n   *\n   * @returns {string} formatted result\n   */\n  Qty.formatter = defaultFormatter;\n\n  assign(Qty.prototype, {\n\n    // returns the 'unit' part of the Unit object without the scalar\n    units: function() {\n      if (this._units !== undefined) {\n        return this._units;\n      }\n\n      var numIsUnity = compareArray(this.numerator, UNITY_ARRAY);\n      var denIsUnity = compareArray(this.denominator, UNITY_ARRAY);\n      if (numIsUnity && denIsUnity) {\n        this._units = \"\";\n        return this._units;\n      }\n\n      var numUnits = stringifyUnits(this.numerator);\n      var denUnits = stringifyUnits(this.denominator);\n      this._units = numUnits + (denIsUnity ? \"\" : (\"/\" + denUnits));\n      return this._units;\n    },\n\n    /**\n     * Stringifies the quantity\n     * Deprecation notice: only units parameter is supported.\n     *\n     * @param {(number|string|Qty)} targetUnitsOrMaxDecimalsOrPrec -\n     *                              target units if string,\n     *                              max number of decimals if number,\n     *                              passed to #toPrec before converting if Qty\n     *\n     * @param {number=} maxDecimals - Maximum number of decimals of\n     *                                formatted output\n     *\n     * @returns {string} reparseable quantity as string\n     */\n    toString: function(targetUnitsOrMaxDecimalsOrPrec, maxDecimals) {\n      var targetUnits;\n      if (isNumber(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = this.units();\n        maxDecimals = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isString(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isQty(targetUnitsOrMaxDecimalsOrPrec)) {\n        return this.toPrec(targetUnitsOrMaxDecimalsOrPrec).toString(maxDecimals);\n      }\n\n      var out = this.to(targetUnits);\n\n      var outScalar = maxDecimals !== undefined ? round(out.scalar, maxDecimals) : out.scalar;\n      out = (outScalar + \" \" + out.units()).trim();\n      return out;\n    },\n\n    /**\n     * Format the quantity according to optional passed target units\n     * and formatter\n     *\n     * @param {string} [targetUnits=current units] -\n     *                 optional units to convert to before formatting\n     *\n     * @param {function} [formatter=Qty.formatter] -\n     *                   delegates formatting to formatter callback.\n     *                   formatter is called back with two parameters (scalar, units)\n     *                   and should return formatted result.\n     *                   If unspecified, formatting is delegated to default formatter\n     *                   set to Qty.formatter\n     *\n     * @example\n     * var roundingAndLocalizingFormatter = function(scalar, units) {\n     *   // localize or limit scalar to n max decimals for instance\n     *   // return formatted result\n     * };\n     * var qty = Qty('1.1234 m');\n     * qty.format(); // same units, default formatter => \"1.234 m\"\n     * qty.format(\"cm\"); // converted to \"cm\", default formatter => \"123.45 cm\"\n     * qty.format(roundingAndLocalizingFormatter); // same units, custom formatter => \"1,2 m\"\n     * qty.format(\"cm\", roundingAndLocalizingFormatter); // convert to \"cm\", custom formatter => \"123,4 cm\"\n     *\n     * @returns {string} quantity as string\n     */\n    format: function(targetUnits, formatter) {\n      if (arguments.length === 1) {\n        if (typeof targetUnits === \"function\") {\n          formatter = targetUnits;\n          targetUnits = undefined;\n        }\n      }\n\n      formatter = formatter || Qty.formatter;\n      var targetQty = this.to(targetUnits);\n      return formatter.call(this, targetQty.scalar, targetQty.units());\n    }\n  });\n\n  var stringifiedUnitsCache = new NestedMap();\n  /**\n   * Returns a string representing a normalized unit array\n   *\n   * @param {string[]} units Normalized unit array\n   * @returns {string} String representing passed normalized unit array and\n   *   suitable for output\n   *\n   */\n  function stringifyUnits(units) {\n\n    var stringified = stringifiedUnitsCache.get(units);\n    if (stringified) {\n      return stringified;\n    }\n\n    var isUnity = compareArray(units, UNITY_ARRAY);\n    if (isUnity) {\n      stringified = \"1\";\n    }\n    else {\n      stringified = simplify(getOutputNames(units)).join(\"*\");\n    }\n\n    // Cache result\n    stringifiedUnitsCache.set(units, stringified);\n\n    return stringified;\n  }\n\n  function getOutputNames(units) {\n    var unitNames = [], token, tokenNext;\n    for (var i = 0; i < units.length; i++) {\n      token = units[i];\n      tokenNext = units[i + 1];\n      if (PREFIX_VALUES[token]) {\n        unitNames.push(OUTPUT_MAP[token] + OUTPUT_MAP[tokenNext]);\n        i++;\n      }\n      else {\n        unitNames.push(OUTPUT_MAP[token]);\n      }\n    }\n    return unitNames;\n  }\n\n  function simplify(units) {\n    // this turns ['s','m','s'] into ['s2','m']\n\n    var unitCounts = units.reduce(function(acc, unit) {\n      var unitCounter = acc[unit];\n      if (!unitCounter) {\n        acc.push(unitCounter = acc[unit] = [unit, 0]);\n      }\n\n      unitCounter[1]++;\n\n      return acc;\n    }, []);\n\n    return unitCounts.map(function(unitCount) {\n      return unitCount[0] + (unitCount[1] > 1 ? unitCount[1] : \"\");\n    });\n  }\n\n  Qty.version = \"1.7.6\";\n\n  return Qty;\n\n})));\n","import Qty from 'js-quantities';\nexport function convertUnit(array, fromUnit, toUnit) {\n    fromUnit = normalize(fromUnit);\n    toUnit = normalize(toUnit);\n    if (fromUnit === toUnit)\n        return array;\n    try {\n        const convert = Qty.swiftConverter(fromUnit, toUnit); // Configures converter\n        return convert(array);\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nfunction normalize(unit) {\n    unit = unit.replace(/°C/g, 'tempC');\n    unit = unit.replace(/°F/g, 'tempF');\n    unit = unit.replace(/(^|\\W)K(\\W|$)/g, '$1tempK$2');\n    return unit;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydFVuaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9jb252ZXJ0VW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxlQUFlLENBQUM7QUFjaEMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsS0FBVSxFQUNWLFFBQWdCLEVBQ2hCLE1BQWM7SUFFZCxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFM0IsSUFBSSxRQUFRLEtBQUssTUFBTTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRXRDLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLHVCQUF1QjtRQUM3RSxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsSUFBWTtJQUM3QixJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyJ9","const testRegExp = /^\\/((?:\\\\\\/|[^/])+)\\/([migyu]{0,5})?$/;\nexport function ensureRegexp(string) {\n    const parts = testRegExp.exec(string);\n    if (parts) {\n        try {\n            return new RegExp(parts[1], parts[2]);\n        }\n        catch (err) {\n            return stringToRegexp(string);\n        }\n    }\n    else {\n        return stringToRegexp(string);\n    }\n}\nfunction stringToRegexp(string, flags = 'i') {\n    return new RegExp(string.replace(/[[\\]\\\\{}()+*?.$^|]/g, function (match) {\n        return `\\\\${match}`;\n    }), flags);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlUmVnZXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZW5zdXJlUmVnZXhwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxHQUFHLHVDQUF1QyxDQUFDO0FBRTNELE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBVztJQUN0QyxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RDLElBQUksS0FBSyxFQUFFO1FBQ1QsSUFBSTtZQUNGLE9BQU8sSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZDO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjtLQUNGO1NBQU07UUFDTCxPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxNQUFXLEVBQUUsS0FBSyxHQUFHLEdBQUc7SUFDOUMsT0FBTyxJQUFJLE1BQU0sQ0FDZixNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixFQUFFLFVBQVUsS0FBYTtRQUMzRCxPQUFPLEtBQUssS0FBSyxFQUFFLENBQUM7SUFDdEIsQ0FBQyxDQUFDLEVBQ0YsS0FBSyxDQUNOLENBQUM7QUFDSixDQUFDIn0=","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { convertUnit } from './convertUnit';\nexport function getConvertedVariable(variable, newUnits) {\n    const data = variable.units !== undefined && variable.units !== newUnits // would be nice if convertUnit would allow typedArray\n        ? convertUnit(Array.from(variable.data), variable.units, newUnits)\n        : variable.data;\n    return {\n        units: newUnits,\n        label: variable.label.replace(`[${variable.units || ''}]`, `[${newUnits}]`),\n        data: data || [],\n        min: data ? min(data) : undefined,\n        max: data ? max(data) : undefined,\n        isMonotone: xIsMonotone(data),\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q29udmVydGVkVmFyaWFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9nZXRDb252ZXJ0ZWRWYXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxHQUFHLE1BQU0sY0FBYyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUlwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsUUFBc0IsRUFDdEIsUUFBZ0I7SUFFaEIsTUFBTSxJQUFJLEdBQ1IsUUFBUSxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksUUFBUSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsc0RBQXNEO1FBQ2hILENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUM7UUFDbEUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDcEIsT0FBTztRQUNMLEtBQUssRUFBRSxRQUFRO1FBQ2YsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLFFBQVEsR0FBRyxDQUFDO1FBQzNFLElBQUksRUFBRSxJQUFJLElBQUksRUFBRTtRQUNoQixHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2pDLFVBQVUsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQzlCLENBQUM7QUFDSixDQUFDIn0=","import { convertUnit } from './convertUnit';\nimport { ensureRegexp } from './ensureRegexp';\nimport { getConvertedVariable } from './getConvertedVariable';\n/**\n * Retrieve the spectrum with only X/Y data that match all the selectors\n * If more than one variable match the selector the 'x' or 'y' variable will be\n * taken\n */\nexport function getXYSpectrum(spectra = [], selector = {}) {\n    if (spectra.length < 1)\n        return;\n    for (let spectrum of spectra) {\n        let variableNames = Object.keys(spectrum.variables);\n        if (!(variableNames.length > 1))\n            continue;\n        let { dataType, title, xUnits, yUnits, variables, xVariable = 'x', yVariable = 'y', units, labels, xLabel, yLabel, meta, } = selector;\n        // we filter on general spectrum information\n        if (dataType) {\n            dataType = ensureRegexp(dataType);\n            if (!spectrum.dataType || !spectrum.dataType.match(dataType))\n                continue;\n        }\n        if (title) {\n            title = ensureRegexp(title);\n            if (!spectrum.title || !spectrum.title.match(title))\n                continue;\n        }\n        if (meta && typeof meta === 'object') {\n            if (!spectrum.meta)\n                continue;\n            for (let key in spectrum.meta) {\n                if (!spectrum.meta[key])\n                    continue;\n                let value = ensureRegexp(spectrum.meta[key]);\n                if (!spectrum.meta[key].match(value))\n                    continue;\n            }\n        }\n        if (units && !xUnits && !yUnits)\n            [yUnits, xUnits] = units.split(/\\s*vs\\s*/);\n        if (labels && !xLabel && !yLabel) {\n            [yLabel, xLabel] = labels.split(/\\s*vs\\s*/);\n        }\n        if (variables)\n            [yVariable, xVariable] = variables.split(/\\s*vs\\s*/);\n        if (xLabel)\n            xLabel = ensureRegexp(xLabel);\n        if (yLabel)\n            yLabel = ensureRegexp(yLabel);\n        let x = getPossibleVariable(spectrum.variables, {\n            units: xUnits,\n            label: xLabel,\n            variableName: xVariable,\n        });\n        let y = getPossibleVariable(spectrum.variables, {\n            units: yUnits,\n            label: yLabel,\n            variableName: yVariable,\n        });\n        if (x && y) {\n            return {\n                title: spectrum.title,\n                dataType: spectrum.dataType,\n                meta: spectrum.meta,\n                variables: { x, y },\n            };\n        }\n    }\n    return;\n}\nfunction getPossibleVariable(variables, selector = {}) {\n    const { units, label, variableName } = selector;\n    let possible = { ...variables };\n    if (units !== undefined) {\n        for (let key in possible) {\n            let converted = convertUnit(1, variables[key].units || '', units);\n            if (converted) {\n                possible[key] = getConvertedVariable(variables[key], units);\n            }\n            else {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (label !== undefined) {\n        for (let key in possible) {\n            if (!variables[key].label.match(label)) {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (variableName !== undefined) {\n        if (possible[variableName])\n            return possible[variableName];\n        if (possible[variableName.toUpperCase()]) {\n            return possible[variableName.toUpperCase()];\n        }\n        if (possible[variableName.toLowerCase()]) {\n            return possible[variableName.toLowerCase()];\n        }\n    }\n    const possibleFiltered = Object.values(possible).filter((val) => val !== undefined);\n    if (possibleFiltered.length > 0) {\n        return possibleFiltered[0];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0WFlTcGVjdHJ1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2dldFhZU3BlY3RydW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQzNCLFVBQStCLEVBQUUsRUFDakMsV0FBeUIsRUFBRTtJQUUzQixJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztRQUFFLE9BQU87SUFFL0IsS0FBSyxJQUFJLFFBQVEsSUFBSSxPQUFPLEVBQUU7UUFDNUIsSUFBSSxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFBRSxTQUFTO1FBQzFDLElBQUksRUFDRixRQUFRLEVBQ1IsS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsR0FBRyxHQUFHLEVBQ2YsU0FBUyxHQUFHLEdBQUcsRUFDZixLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sSUFBSSxHQUNMLEdBQUcsUUFBUSxDQUFDO1FBRWIsNENBQTRDO1FBQzVDLElBQUksUUFBUSxFQUFFO1lBQ1osUUFBUSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztnQkFBRSxTQUFTO1NBQ3hFO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDVCxLQUFL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","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { getNormalizedSpectrum } from './util/getNormalizedSpectrum';\nimport { getXYSpectrum } from './util/getXYSpectrum';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that can be selected\n * based on their units\n */\nexport class Analysis {\n    constructor(options = {}) {\n        this.id = options.id || Math.random().toString(36).substring(2, 10);\n        this.label = options.label || this.id;\n        this.spectrumCallback = options.spectrumCallback;\n        this.spectra = [];\n        this.cache = {};\n    }\n    /**\n     * Add a spectrum in the internal spectra variable\n     */\n    pushSpectrum(variables, options = {}) {\n        this.spectra.push(standardizeData(variables, options, {\n            spectrumCallback: this.spectrumCallback,\n        }));\n        this.cache = {};\n    }\n    /**\n     * Retrieve a Spectrum based on x/y units\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXYSpectrum(selector = {}) {\n        let id = JSON.stringify(selector);\n        if (!this.cache[id]) {\n            this.cache[id] = getXYSpectrum(this.spectra, selector);\n        }\n        return this.cache[id];\n    }\n    /**\n     * Retrieve a xy object\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXY(selector = {}) {\n        let spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return {\n            x: spectrum.variables.x.data,\n            y: spectrum.variables.y.data,\n        };\n    }\n    /**\n     * Return the data object for specific x/y units with possibly some\n     * normalization options\n     * @param options.selector.xUnits // if undefined takes the first variable\n     * @param options.selector.yUnits // if undefined takes the second variable\n     */\n    getNormalizedSpectrum(options = {}) {\n        const { normalization, selector } = options;\n        const spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return getNormalizedSpectrum(spectrum, normalization);\n    }\n    /**\n     * Returns the first spectrum. This method could be improved in the future\n     * @returns\n     */\n    getSpectrum() {\n        return this.spectra[0];\n    }\n    /**\n     * Returns the xLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getXLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.x.label;\n    }\n    /**\n     * Returns the yLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getYLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.y.label;\n    }\n}\n/**\n * Internal function that ensure the order of x / y array\n */\nfunction standardizeData(variables, options, analysisOptions) {\n    let { meta = {}, tmp = {}, dataType = '', title = '' } = options;\n    const { spectrumCallback } = analysisOptions;\n    if (spectrumCallback) {\n        spectrumCallback(variables);\n    }\n    let xVariable = variables.x;\n    let yVariable = variables.y;\n    if (!xVariable || !yVariable) {\n        throw Error('A spectrum must contain at least x and y variables');\n    }\n    if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n        throw Error('x and y variables must contain an array data');\n    }\n    let x = xVariable.data;\n    let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n    for (let key in variables) {\n        let variable = variables[key];\n        if (reverse)\n            variable.data = variable.data.reverse();\n        variable.label = variable.label || key;\n        if (!variable.units && variable.label.includes('[')) {\n            variable.units = variable.label.replace(/^.*[([](?<units>.*)[)\\]].*$/, '$<units>');\n        }\n        variable.min = min(variable.data);\n        variable.max = max(variable.data);\n        variable.isMonotone = xIsMonotone(variable.data);\n    }\n    return {\n        variables,\n        title,\n        dataType,\n        meta,\n        tmp,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzaXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQW5hbHlzaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxVQUFVLE1BQU0sY0FBYyxDQUFDO0FBQ3RDLE9BQU8sR0FBRyxNQUFNLGNBQWMsQ0FBQztBQUMvQixPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBUXBELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWdCckQ7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxRQUFRO0lBT25CLFlBQW1CLFVBQTJCLEVBQUU7UUFDOUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQ2pELElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7T0FFRztJQUNJLFlBQVksQ0FDakIsU0FBdUMsRUFDdkMsVUFBMkMsRUFBRTtRQUU3QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDZixlQUFlLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRTtZQUNsQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ3hDLENBQUMsQ0FDSCxDQUFDO1FBQ0YsSUFBSSxD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","/**\n * Ensure that the data is string. If it is an ArrayBuffer it will be converted to string using TextDecoder.\n * @param {string|ArrayBuffer} blob\n * @param {object} [options={}]\n * @param {string} [options.encoding='utf8']\n * @returns {string}\n */\n\nexport function ensureString(blob, options = {}) {\n  const { encoding = 'utf8' } = options;\n  if (ArrayBuffer.isView(blob) || blob instanceof ArrayBuffer) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(blob);\n  }\n  return blob;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  const medians = [];\n  for (let i = 0; i < z.length; i++) {\n    const row = Float64Array.from(z[i]);\n    for (let i = 0; i < row.length; i++) {\n      if (row[i] < 0) row[i] = -row[i];\n    }\n    medians.push(getMedian(row));\n  }\n  const median = getMedian(medians);\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: median,\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: #13 can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n\n  for (let entry of entriesFlat) {\n    let observeFrequency = 0;\n    let shiftOffsetVal = 0;\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      // we will check if some nucleus are missing ...\n      if (entry.ntuples && entry.ntuples.nucleus && entry.ntuples.symbol) {\n        for (let i = 0; i < entry.ntuples.nucleus.length; i++) {\n          let symbol = entry.ntuples.symbol[i];\n          let nucleus = entry.ntuples.nucleus[i];\n          if (symbol.startsWith('F') && !nucleus) {\n            if (symbol === 'F1') {\n              // if F1 is defined we will use F2\n              if (entry.tmp.$NUC2) {\n                entry.ntuples.nucleus[i] = entry.tmp.$NUC2;\n              } else {\n                let f2index = entry.ntuples.symbol.indexOf('F2');\n                if (f2index && entry.ntuples.nucleus[f2index]) {\n                  entry.ntuples.nucleus[i] = entry.ntuples.nucleus[f2index];\n                }\n              }\n            }\n            if (symbol === 'F2') entry.ntuples.nucleus[i] = entry.tmp.$NUC1;\n          }\n          if (symbol === 'F2') {\n            entry.yType = entry.ntuples.nucleus[0];\n          }\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let units = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          units = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (units !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n\n    delete entry.tmp;\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { ensureString } from 'ensure-string';\n\nimport { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparatorRegExp = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {string|ArrayBuffer} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  jcamp = ensureString(jcamp);\n  options = { ...defaultOptions, ...options };\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n        tmp: {}, // tmp information we need to keep for postprocessing\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparatorRegExp);\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel.startsWith('$NUC')) {\n      if (!currentEntry.tmp[canonicDataLabel] && !dataValue.includes('off')) {\n        currentEntry.tmp[canonicDataLabel] = dataValue.replace(/[<>]/g, '');\n      }\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        if (value === 'true' || value === 'TRUE') {\n          value = true;\n        } else if (value === 'false' || value === 'FALSE') {\n          value = false;\n        } else if (value !== '' && !isNaN(value)) {\n          value = parseFloat(value);\n        }\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import { convert } from 'jcampconverter';\nimport { Analysis } from '../Analysis';\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @param {string} [options.spectrumCallback] a callback to apply on variables when creating spectrum\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n    let analysis = new Analysis(options);\n    addJcamp(analysis, jcamp);\n    return analysis;\n}\nfunction addJcamp(analysis, jcamp) {\n    let converted = convert(jcamp, {\n        keepRecordsRegExp: /.*/,\n    });\n    for (let entry of converted.flatten) {\n        if (!entry.spectra || !entry.spectra[0])\n            continue;\n        let currentSpectrum = entry.spectra[0];\n        // we ensure variables\n        if (!currentSpectrum.variables) {\n            const variables = {};\n            currentSpectrum.variables = variables;\n            variables.x = {\n                label: currentSpectrum.xUnits,\n                symbol: 'X',\n                data: currentSpectrum.data.x || currentSpectrum.data.X,\n            };\n            variables.y = {\n                label: currentSpectrum.yUnits,\n                symbol: 'Y',\n                data: currentSpectrum.data.y || currentSpectrum.data.Y,\n            };\n        }\n        else {\n            for (let key in currentSpectrum.variables) {\n                const variable = currentSpectrum.variables[key];\n                if (variable.label)\n                    continue;\n                variable.label = variable.name || variable.symbol || key;\n                if (variable.units && !variable.label.includes(variable.units)) {\n                    variable.label += ` [${variable.units}]`;\n                }\n            }\n        }\n        analysis.pushSpectrum(currentSpectrum.variables, {\n            dataType: entry.dataType,\n            title: entry.title,\n            meta: entry.meta,\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUpjYW1wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb20vZnJvbUpjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3ZDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUEyQixFQUFFLE9BQU8sR0FBRyxFQUFFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLFFBQWtCLEVBQUUsS0FBMkI7SUFDL0QsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRTtRQUM3QixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCLENBQUMsQ0FBQztJQUVILEtBQUssSUFBSSxLQUFLLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQUUsU0FBUztRQUNsRCxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZDLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsRUFBRTtZQUM5QixNQUFNLFNBQVMsR0FBaUMsRUFBRSxDQUFDO1lBQ25ELGVBQWUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQ3RDLFNBQVMsQ0FBQyxDQUFDLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLGVBQWUsQ0FBQyxNQUFNO2dCQUM3QixNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3ZELENBQUM7WUFDRixTQUFTLENBQUMsQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTTtnQkFDN0IsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxDQUFDO1NBQ0g7YUFBTTtZQUNMLEtBQUssSUFBSSxHQUFHLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRTtnQkFDekMsTUFBTSxRQUFRLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxRQUFRLENBQUMsS0FBSztvQkFBRSxTQUFTO2dCQUM3QixRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUM7Z0JBQ3pELElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDOUQsUUFBUSxDQUFDLEtBQUssSUFBSSxLQUFLLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQztpQkFDMUM7YUFDRjtTQUNGO1FBRUQsUUFBUSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFO1lBQy9DLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtZQUN4QixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7WUFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1NBQ2pCLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQyJ9","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let units = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n\n    varType.push(\n      variable.type\n        ? variable.type.toUpperCase()\n        : i === 0\n        ? 'INDEPENDENT'\n        : 'DEPENDENT',\n    );\n    units.push(variable.units || units || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key in meta) {\n    header +=\n      typeof meta[key] === 'object'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key in meta) {\n    header +=\n      key.toLowerCase() === 'cheminfo'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","import { fromVariables } from 'convert-to-jcamp';\nexport function toJcamps(analysis, options = {}) {\n    let jcamps = [];\n    for (let spectrum of analysis.spectra) {\n        jcamps.push(getJcamp(spectrum, options));\n    }\n    return jcamps;\n}\nfunction getJcamp(spectrum, options) {\n    const { info = {}, meta = {} } = options;\n    let jcampOptions = {\n        options: {},\n        info: {\n            title: spectrum.title,\n            dataType: spectrum.dataType,\n            ...info,\n        },\n        meta: { ...spectrum.meta, ...meta },\n    };\n    return fromVariables(spectrum.variables, jcampOptions);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdG8vdG9KY2FtcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBU2pELE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBa0IsRUFBRSxVQUEyQixFQUFFO0lBQ3hFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUU7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsUUFBc0IsRUFBRSxPQUF3QjtJQUNoRSxNQUFNLEVBQUUsSUFBSSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBRXpDLElBQUksWUFBWSxHQUFHO1FBQ2pCLE9BQU8sRUFBRSxFQUFFO1FBQ1gsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLO1lBQ3JCLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtZQUMzQixHQUFHLElBQUk7U0FDUjtRQUNELElBQUksRUFBRSxFQUFFLEdBQUcsUUFBUSxDQUFDLElBQUksRUFBRSxHQUFHLElBQUksRUFBRTtLQUNwQyxDQUFDO0lBRUYsT0FBTyxhQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN6RCxDQUFDIn0=","import { toJcamps } from './toJcamps';\nexport function toJcamp(analysis, options = {}) {\n    return toJcamps(analysis, options).join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90by90b0pjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFNdEMsTUFBTSxVQUFVLE9BQU8sQ0FBQyxRQUFrQixFQUFFLFVBQTJCLEVBQUU7SUFDdkUsT0FBTyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxDQUFDIn0=","import { getJSGraph } from './jsgraph/getJSGraph';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nexport * from './AnalysesManager';\nexport * from './Analysis';\nexport * from './from/fromJcamp';\nexport * from './from/fromText';\nexport * from './to/toJcamp';\nexport * from './to/toJcamps';\nexport * from './to/toText';\nexport * from './util/getNormalizedSpectrum';\nexport * from './util/peakPicking';\nexport * from './util/autoPeakPicking';\nexport { getReactPlotJSON } from './reactPlot/getReactPlotJSON';\nexport const JSGraph = {\n    getJSGraph,\n    getNormalizationAnnotations,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRXBGLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxZQUFZLENBQUM7QUFDM0IsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsYUFBYSxDQUFDO0FBQzVCLGNBQWMsOEJBQThCLENBQUM7QUFFN0MsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLHdCQUF3QixDQUFDO0FBRXZDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRztJQUNyQixVQUFVO0lBQ1YsMkJBQTJCO0NBQzVCLENBQUMifQ==","/**\n * @typedef {Object} Component\n * @property {number} kineticEnergy\n * @property {number} bindingEnergy\n * @property {number} intensity\n * @property {number} kind\n * @property {number} assignment\n */\n\n/**\n * Creates annotations for jsgraph that allows to display the result of component picking\n * @param {array<Peak>} components\n * @param {object} [options={}]\n * @param {string} [options.fillColor='green']\n * @param {string} [options.strokeColor='red']\n * @param {string} [options.showAssignment=true] Display the assignment\n * @param {function} [options.createFct] (annotation, component) => {}: callback allowing to add properties\n * @param {string} [options.mode='binding'] 'binding' or 'kinetic'\n * @returns array\n */\n\nexport function getAnnotations(components, options = {}) {\n  const { fillColor = 'green', strokeColor = 'red', creationFct } = options;\n  let annotations = components.map((component) => {\n    let annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor,\n    };\n    if (creationFct) {\n      creationFct(annotation, component);\n    }\n    return getAnnotation(annotation, component, options);\n  });\n  return annotations;\n}\n\nfunction getAnnotation(annotation, component, options = {}) {\n  const { showAssignment = true, mode = 'binding' } = options;\n  let labels = [];\n  let line = 0;\n\n  let energy =\n    mode === 'kinetic'\n      ? component.kineticEnergy.value\n      : component.bindingEnergy.value;\n  let intensity = component.intensity || '20px';\n  if (showAssignment) {\n    labels.push({\n      text: component.assignment,\n      size: '18px',\n      anchor: 'middle',\n      color: 'darkred',\n      position: {\n        x: energy,\n        y: intensity,\n        dy: `${23 + line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  annotation.labels = labels;\n  annotation.position = [\n    {\n      x: energy,\n      y: intensity,\n      dy: '10px',\n      dx: '-1px',\n    },\n    {\n      x: energy,\n      y: intensity,\n      dy: '5px',\n      dx: '1px',\n    },\n  ];\n  return annotation;\n}\n","/* eslint-disable no-unused-vars */\nconst experiments = [\n  'MAP',\n  'MAPDP',\n  'MAPSV',\n  'MAPSVDP',\n  'NORM',\n  'SDP',\n  'SDPSV',\n  'SEM',\n  'NOEXP',\n];\n\nconst technics = [\n  'AES diff',\n  'AES dir',\n  'EDX',\n  'ELS',\n  'FABMS',\n  'FABMS energy spec',\n  'ISS',\n  'SIMS',\n  'SIMS energy spec',\n  'SNMS',\n  'SNMS energy spec',\n  'UPS',\n  'XPS',\n  'XRF',\n];\n\nconst scans = ['REGULAR', 'IRREGULAR', 'MAPPING'];\n\nexport function parse(text) {\n  const lines = text.split(/\\r?\\n/);\n  let pointer = 0;\n  let parsed = { header: {}, blocks: [], info: {} };\n  pointer = parseHeader(lines, parsed, pointer);\n  for (let i = 0; i < parsed.info.nbBlocks; i++) {\n    pointer = parseBlock(lines, parsed, pointer);\n  }\n  return parsed;\n}\n\nfunction parseHeader(lines, parsed, pointer) {\n  const { header, info } = parsed;\n  header['format identifier'] = lines[pointer++];\n  header['institution identifier'] = lines[pointer++];\n  header['instrument model identifier'] = lines[pointer++];\n  header['operator identifier'] = lines[pointer++];\n  header['experiment identifier'] = lines[pointer++];\n  info.nbComments = Number(lines[pointer++]);\n  header['number of lines in comment'] = info.nbComments;\n  const comments = [];\n  for (let i = 0; i < info.nbComments; i++) {\n    comments.push(lines[pointer++]);\n  }\n  header['comment line'] = comments.join('\\n');\n  header['experiment mode'] = lines[pointer++];\n  header['scan mode'] = lines[pointer++];\n  if (['MAP', 'MAPD', 'NORM', 'SDP'].includes(header['experiment mode'])) {\n    header['number of spectral regions'] = Number(lines[pointer++]);\n  }\n  if (['MAP', 'MAPD'].includes(header['experiment mode'])) {\n    header['number of analysis positions'] = Number(lines[pointer++]);\n    header['number of discrete x coordinates available in full map'] = Number(\n      lines[pointer++],\n    );\n    header['number of discrete y coordinates available in full map'] = Number(\n      lines[pointer++],\n    );\n  }\n  info.nbExperimentVariables = Number(lines[pointer++]);\n  const experimentVariables = [];\n  header['number of experimental variables'] = info.nbExperimentVariables;\n  for (let i = 0; i < info.nbExperimentVariables; i++) {\n    experimentVariables.push({\n      label: lines[pointer++],\n      unit: lines[pointer++],\n    });\n  }\n  header.experimentVariables = experimentVariables;\n\n  /*\n    If the values of any of the block parameters are the same in all of the\n    blocks their values may be sent in the first block and then omitted\n    from all subsequent blocks.\n    - n > 0 : the parameters listed are to be included\n    - n < 0 : the parameters listed are to be excluded\n    - n = 0 : all parameters are to be given in all blocks\n    A complete block contains 40 parts.\n    */\n  info.nbEntriesInclusionExclusion = Number(lines[pointer++]);\n  header['number of entries in parameter inclusion or exclusion list'] =\n    info.nbEntriesInclusionExclusion;\n  info.blockParametersincludes = new Array(40).fill(\n    info.nbEntriesInclusionExclusion <= 0,\n  );\n  for (let i = 0; i < Math.abs(info.nbEntriesInclusionExclusion); i++) {\n    info.blockParametersincludes[Number(lines[pointer++]) + 1] =\n      info.nbEntriesInclusionExclusion > 0;\n  }\n\n  header['number of manually entered items in block'] = Number(\n    lines[pointer++],\n  );\n  info.nbFutureUpgradeExperimentEntries = Number(lines[pointer++]);\n  header['number of future upgrade experiment entries'] =\n    info.nbFutureUpgradeExperimentEntries;\n  const futureUpgradeExperimentEntries = [];\n  for (let i = 0; i < info.nbFutureUpgradeExperimentEntries; i++) {\n    futureUpgradeExperimentEntries.push({\n      label: lines[pointer++],\n      unit: lines[pointer++],\n    });\n  }\n  header.futureUpgradeExperimentEntries = futureUpgradeExperimentEntries;\n  if (info.nbFutureUpgradeExperimentEntries !== 0) {\n    throw Error('unsupported future upgrade experiment entries');\n  }\n\n  header['number of future upgrade block entries'] = Number(lines[pointer++]);\n  if (header['number of future upgrade block entries'] !== 0) {\n    throw Error('unsupported future upgrade block entries');\n  }\n  info.nbBlocks = Number(lines[pointer++]);\n  header['number of blocks'] = info.nbBlocks;\n  return pointer;\n}\n\nfunction parseBlock(lines, parsed, pointer) {\n  const { blocks, header, info } = parsed;\n\n  const firstBlock = blocks[0];\n  const includes =\n    blocks.length === 0\n      ? new Array(40).fill(true)\n      : info.blockParametersincludes;\n\n  const block = {};\n  block['block identifier'] = lines[pointer++];\n  block['sample identifier'] = lines[pointer++];\n  block['year in full'] = includes[0]\n    ? Number(lines[pointer++])\n    : firstBlock['year in full'];\n  block.month = includes[1] ? Number(lines[pointer++]) : firstBlock.month;\n  block['day of month'] = includes[2]\n    ? Number(lines[pointer++])\n    : firstBlock['day of month'];\n  block.hours = includes[3] ? Number(lines[pointer++]) : firstBlock.hours;\n  block.minutes = includes[4] ? Number(lines[pointer++]) : firstBlock.minutes;\n  block.seconds = includes[5] ? Number(lines[pointer++]) : firstBlock.seconds;\n  block['number of hours in advance of Greenwich Mean Time'] = includes[6]\n    ? Number(lines[pointer++])\n    : firstBlock['number of hours in advance of Greenwich Mean Time'];\n\n  if (includes[7]) {\n    const nbComments = Number(lines[pointer++]);\n    block['number of lines in block comment'] = nbComments;\n    const comments = [];\n    for (let i = 0; i < nbComments; i++) {\n      comments.push(lines[pointer++]);\n    }\n    block.blockComment = comments.join('\\n');\n  } else {\n    block['number of lines in block comment'] =\n      firstBlock['number of lines in block comment'];\n    block.blockComment = firstBlock.blockComment;\n  }\n\n  block.technique = includes[8] ? lines[pointer++] : firstBlock.technique;\n  if (['MAP', 'MAPDP'].includes(header['experiment mode'])) {\n    block['x coordinate'] = includes[9]\n      ? Number(lines[pointer++])\n      : firstBlock['x coordinate'];\n    block['y coordinate'] = includes[9]\n      ? Number(lines[pointer++])\n      : firstBlock['y coordinate'];\n  }\n\n  if (includes[10]) {\n    let values = [];\n    for (let i = 0; i < header.experimentVariables.length; i++) {\n      values.push(lines[pointer++]);\n    }\n    block['value of experimental variable'] = values;\n  } else {\n    block['value of experimental variable'] =\n      firstBlock['value of experimental variable'];\n  }\n\n  block['analysis source label'] = includes[11]\n    ? lines[pointer++]\n    : firstBlock['analysis source label'];\n\n  if (\n    ['MAPDP', 'MAPSVDP', 'SDP', 'SDPSV'].includes(header['experiment mode']) ||\n    [\n      'SNMS energy spec',\n      'FABMS',\n      'FABMS energy spec',\n      'ISS',\n      'SIMS',\n      'SIMS energy spec',\n      'SNMS',\n    ].includes(block.technique)\n  ) {\n    block['sputtering ion or atom atomic number'] = includes[12]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering ion or atom atomic number'];\n    block['number of atoms in sputtering ion or atom particle'] = includes[12]\n      ? Number(lines[pointer++])\n      : firstBlock['number of atoms in sputtering ion or atom particle'];\n    block['sputtering ion or atom charge sign and number'] = includes[12]\n      ? lines[pointer++]\n      : firstBlock['sputtering ion or atom charge sign and number'];\n  }\n\n  block['analysis source characteristic energy'] = includes[13]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source characteristic energy'];\n\n  block['analysis source strength'] = includes[14]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source strength'];\n\n  block['analysis source beam width x'] = includes[15]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source beam width x'];\n  block['analysis source beam width y'] = includes[15]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source beam width y'];\n\n  if (\n    ['MAP', 'MAPDP', 'MAPSV', 'MAPSVDP', 'SEM'].includes(\n      header['experiment mode'],\n    )\n  ) {\n    block['field of view x'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['field of view x'];\n    block['field of view y'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['field of view y'];\n  }\n\n  if (['SEM', 'MAPSV', 'MAPSVDP'].includes(header['experiment mode'])) {\n    block['first linescan start x coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan start x coordinate'];\n    block['first linescan start y coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan start y coordinate'];\n    block['first linescan finish x coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan finish x coordinate'];\n    block['first linescan finish y coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan finish y coordinate'];\n    block['last linescan start x coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan last x coordinate'];\n    block['last linescan start y coordinate'] = includes[16]\n      ? Number(lines[pointer++])\n      : firstBlock['first linescan last y coordinate'];\n  }\n\n  block['analysis source polar angle of incidence'] = includes[18]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source polar angle of incidence'];\n\n  block['analysis source azimuth'] = includes[19]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis source azimuth'];\n\n  block['analyser mode'] = includes[20]\n    ? lines[pointer++]\n    : firstBlock['analyser mode'];\n\n  block[\n    'analyser pass energy or retard ratio or mass resolution'\n  ] = includes[21]\n    ? Number(lines[pointer++])\n    : firstBlock['analyser pass energy or retard ratio or mass resolution'];\n\n  if (block.technique === 'AES diff') {\n    block['differential width'] = includes[22]\n      ? lines[pointer++]\n      : firstBlock['differential width'];\n  }\n\n  block['magnification of analyser transfer lens'] = includes[23]\n    ? Number(lines[pointer++])\n    : firstBlock['magnification of analyser transfer lens'];\n\n  block[\n    'analyser work function or acceptance energy of atom or ion'\n  ] = includes[24]\n    ? Number(lines[pointer++])\n    : firstBlock['analyser work function or acceptance energy of atom or ion'];\n\n  block['target bias'] = includes[25]\n    ? Number(lines[pointer++])\n    : firstBlock['target bias'];\n\n  block['analysis width x'] = includes[26]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis width x'];\n  block['analysis width y'] = includes[26]\n    ? Number(lines[pointer++])\n    : firstBlock['analysis width y'];\n\n  block['analyser axis take off polar angle'] = includes[27]\n    ? Number(lines[pointer++])\n    : firstBlock['analyser axis take off polar angle'];\n  block['analyser axis take off azimuth'] = includes[27]\n    ? Number(lines[pointer++])\n    : firstBlock['analyser axis take off azimuth'];\n\n  block['species label'] = includes[28]\n    ? lines[pointer++]\n    : firstBlock['species label'];\n\n  block['transition or charge state label'] = includes[29]\n    ? lines[pointer++]\n    : firstBlock['transition or charge state label'];\n  block['charge of detected particle'] = includes[29]\n    ? Number(lines[pointer++])\n    : firstBlock['charge of detected particle'];\n\n  if (header['scan mode'] !== 'REGULAR') {\n    throw Error('Only REGULAR scans are supported');\n  }\n\n  block['abscissa label'] = includes[30]\n    ? lines[pointer++]\n    : firstBlock['abscissa label'];\n  block['abscissa units'] = includes[30]\n    ? lines[pointer++]\n    : firstBlock['abscissa units'];\n\n  block['abscissa start'] = includes[30]\n    ? Number(lines[pointer++])\n    : firstBlock['abscissa start'];\n  block['abscissa increment'] = includes[30]\n    ? Number(lines[pointer++])\n    : firstBlock['abscissa increment'];\n\n  if (includes[31]) {\n    const nbCorrespondingVariables = Number(lines[pointer++]);\n    block['number of corresponding variables'] = nbCorrespondingVariables;\n    const correspondingVariables = [];\n    for (let i = 0; i < nbCorrespondingVariables; i++) {\n      correspondingVariables.push({\n        label: lines[pointer++],\n        unit: lines[pointer++],\n        array: [],\n      });\n    }\n    block.correspondingVariables = correspondingVariables;\n  } else {\n    block['number of corresponding variables'] =\n      firstBlock['number of corresponding variables'];\n    block.correspondingVariables = JSON.parse(\n      JSON.stringify(firstBlock.correspondingVariables),\n    );\n    block.correspondingVariables.array = [];\n  }\n\n  block['signal mode'] = includes[32]\n    ? lines[pointer++]\n    : firstBlock['signal mode'];\n\n  block['signal collection time'] = includes[33]\n    ? Number(lines[pointer++])\n    : firstBlock['signal collection time'];\n\n  block['number of scans to compile this block'] = includes[34]\n    ? Number(lines[pointer++])\n    : firstBlock['number of scans to compile this block'];\n\n  block['signal time correction'] = includes[35]\n    ? Number(lines[pointer++])\n    : firstBlock['signal time correction'];\n\n  if (\n    ['MAPDP', 'MAPSVDP', 'SDP', 'SDPSV'].includes(header['experiment mode']) &&\n    ['AES diff', 'AES dir', 'EDX', 'ELS', 'UPS', 'XPS', 'XRF'].includes(\n      block.technique,\n    )\n  ) {\n    block['sputtering source energy'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source energy'];\n    block['sputtering source beam current'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source beam current'];\n    block['sputtering source width x'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source width x'];\n    block['sputtering source width y'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source width y'];\n    block['sputtering source polar angle of incidence'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source polar angle of incidence'];\n    block['sputtering source azimuth'] = includes[36]\n      ? Number(lines[pointer++])\n      : firstBlock['sputtering source azimuth'];\n    block['sputtering mode'] = includes[36]\n      ? lines[pointer++]\n      : firstBlock['sputtering mode'];\n  }\n\n  block['sample normal polar angle of tilt'] = includes[37]\n    ? Number(lines[pointer++])\n    : firstBlock['sample normal polar angle of tilt'];\n  block['sample normal tilt azimuth'] = includes[37]\n    ? Number(lines[pointer++])\n    : firstBlock['sample normal tilt azimuth'];\n\n  block['sample rotation angle'] = includes[38]\n    ? Number(lines[pointer++])\n    : firstBlock['sample rotation angle'];\n\n  if (includes[39]) {\n    const nbAdditionalNumericalParameters = Number(lines[pointer++]);\n    block[\n      'number of additional numerical parameters'\n    ] = nbAdditionalNumericalParameters;\n    const additionalNumericalParameters = [];\n    for (let i = 0; i < nbAdditionalNumericalParameters; i++) {\n      additionalNumericalParameters.push({\n        label: lines[pointer++],\n        unit: lines[pointer++],\n        value: lines[pointer++],\n      });\n    }\n    block.additionalNumericalParameters = additionalNumericalParameters;\n  } else {\n    block['number of additional numerical parameters'] =\n      firstBlock['number of additional numerical parameters'];\n    block.additionalNumericalParameters =\n      firstBlock.additionalNumericalParameters;\n  }\n\n  block.nbOrdinateValues = Number(lines[pointer++]);\n  for (let correspondingVariable of block.correspondingVariables) {\n    correspondingVariable.minimumOrdinateValue = Number(lines[pointer++]);\n    correspondingVariable.maximumOrdinateValue = Number(lines[pointer++]);\n  }\n  for (\n    let i = 0;\n    i < block.nbOrdinateValues / block.correspondingVariables.length;\n    i++\n  ) {\n    for (let correspondingVariable of block.correspondingVariables) {\n      correspondingVariable.array.push(Number(lines[pointer++]));\n    }\n  }\n\n  parsed.blocks.push(block);\n  return pointer;\n}\n","export function appendCalibration(calibrations, line) {\n  let calibration = {};\n  // Calib M = 281.1700 A = 284.8 BE AD\n  let fields = line.match(/Calib (M = .*) (A = [^ ]*) (.*)/);\n  if (!fields) {\n    throw new Error(`appendCalibration fails on: ${line}`);\n  }\n  calibrations.push(calibration);\n}\n","export function appendComponent(components, line) {\n  // CASA comp (*Mo 3d MoS2 2H*) (*LA(1.53,243)*) Area 230.36971 1e-020 2327991 -1 1 MFWHM 0.88528218 0.2 2 -1 1 Position 1257.22 1257.02 1257.22 -1 1 RSF 10.804667 MASS 95.9219 INDEX -1 (*Mo 3d*) CONST (**) UNCORRECTEDRSF 9.5\n  let component = {};\n  const componentRegex = new RegExp(\n    [\n      /CASA comp /,\n      /\\((?<name>.*)\\) /,\n      /\\((?<shape>[^ ]*)\\) /,\n      /(?<area>Area .*)/,\n      /(?<fwhm>MFWHM .*)/,\n      /(?<position>Position .*) /,\n      /(?<rsf>RSF .*) /,\n      /(?<mass>MASS .*) /,\n      /(?<index>INDEX .*) /,\n      /(?<const>CONST .*) /,\n      /(?<uncorrectedRSF>UNCORRECTEDRSF.*)/,\n    ]\n      .map((r) => r.source)\n      .join(''),\n  );\n\n  let fields = line.match(componentRegex);\n  if (!fields) {\n    throw new Error(`appendComponent fails on: ${line}`);\n  }\n  component = {\n    name: fields.groups.name,\n    shape: parseShape(fields.groups.shape),\n    area: parseArea(fields.groups.area),\n    fwhm: parseFWHM(fields.groups.fwhm),\n    position: parsePosition(fields.groups.position),\n    rsf: parseRSF(fields.groups.rsf),\n    mass: parseMass(fields.groups.mass),\n    index: parseIndex(fields.groups.index),\n    const: parseConst(fields.groups.const),\n    uncorrectedRSF: parseUncorrectedRSF(fields.groups.uncorrectedRSF),\n  };\n  components.push(component);\n}\n\nfunction parseShape(value) {\n  let parts = value\n    .replace(/[*(),]/g, ' ')\n    .trim()\n    .split(/ +/);\n  let options = {};\n  let kind;\n  switch (parts[0]) {\n    case 'LA':\n      kind = `${parts[0]}`;\n      options.asymmetry = Number(parts[1]);\n      options.extension = Number(parts[2]);\n      break;\n    case 'GL':\n      kind = `${parts[0]}`;\n      options.unknown = Number(parts[1]);\n      break;\n    default:\n      throw Error(`appendComponent: unknown shape: ${parts[0]}`);\n  }\n  return {\n    kind,\n    options,\n  };\n}\nfunction parseArea(value) {\n  let parts = value.split(' ');\n  return {\n    value: Number(parts[1]),\n    from: Number(parts[2]),\n    to: Number(parts[3]),\n    unknown1: Number(parts[4]),\n    unknown2: Number(parts[5]),\n  };\n}\nfunction parseFWHM(value) {\n  let parts = value.split(' ');\n  return {\n    value: Number(parts[1]),\n    from: Number(parts[2]),\n    to: Number(parts[3]),\n    unknown1: Number(parts[4]),\n    unknown2: Number(parts[5]),\n  };\n}\nfunction parsePosition(value) {\n  let parts = value.split(' ');\n  return {\n    value: Number(parts[1]),\n    from: Number(parts[2]),\n    to: Number(parts[3]),\n    unknown1: Number(parts[4]),\n    unknown2: Number(parts[5]),\n  };\n}\nfunction parseRSF(value) {\n  let parts = value.split(' ');\n  return Number(parts[1]);\n}\nfunction parseMass(value) {\n  let parts = value.split(' ');\n  return Number(parts[1]);\n}\nfunction parseIndex(value) {\n  let parts = value.split(' ');\n  return Number(parts[1]);\n}\nfunction parseConst(value) {return value} // We do not really know what this value means and hence just parse the string\nfunction parseUncorrectedRSF(value) {\n  let parts = value.split(' ');\n  return Number(parts[1]);\n}\n","export function appendRegion(regions, line) {\n  // CASA region (*Mo 3d*) (*Shirley*) 1249.3343 1262.7065 10.804667 2 0 0 392.54541 -450 0 0 (*Mo 3d*) 95.9219 0 9.5\n  let fields = line.match(\n    /CASA region \\(\\*(?<name>.*)\\*\\) \\(\\*(?<backgroundKind>.*)\\*\\) (?<backgroundOptions>.*) \\((?<comment>.*)\\) (?<surface>.*)/,\n  );\n  if (!fields) {\n    throw new Error(`appendRegion fails on: ${line}`);\n  }\n\n  let region = {\n    name: fields.groups.name,\n    background: {\n      name: fields.groups.backgroundKind,\n      options: fields.groups.backgroundOptions\n    }\n  };\n\n  regions.push(region);\n}\n","import { appendCalibration } from './casa/appendCalibration';\nimport { appendComponent } from './casa/appendComponent';\nimport { appendRegion } from './casa/appendRegion';\n\nexport function parseCASA(text) {\n  const casa = { regions: [], components: [], calibrations: [] };\n  const lines = text.split(/\\r?\\n/);\n  for (const line of lines) {\n    if (line.startsWith('CASA comp ')) {\n      appendComponent(casa.components, line);\n    }\n    if (line.startsWith('CASA region')) {\n      appendRegion(casa.regions, line);\n    }\n    if (line.startsWith('Calib')) {\n      appendCalibration(casa.calibrations, line);\n    }\n  }\n  return casa;\n}\n","export function mapComponents(parsedBlockComment, sourceEnergy=undefined, energyUnits = 'eV') {\n  const components = [];\n  if (parsedBlockComment.components) {\n    for (let component of parsedBlockComment.components) {\n      components.push({\n        kineticEnergy: {\n          value: component.position.value,\n          units: energyUnits,\n        },\n        bindingEnergy: {\n          value: sourceEnergy - component.position.value,\n          units: energyUnits,\n        },\n        name: component.name.replace('*', ''),\n        type: component.shape.kind,\n        shapeParameters: {\n          gamma: component.fwhm.value,\n        },\n        area: component.area.value,\n      });\n    }\n  }\n  return components;\n}\n","const XPS_REGEX =\n  /(?<element>[a-zA-Z]{0,3})\\s(?<shell>[1-6])(?<angularMomentum>[a-z])/;\nconst AUGER_REGEX = /(?<element>[a-zA-Z]{0,3})\\s(?<transition>[a-zA-Z]{0,3})/;\n\nexport function parseRegion(string) {\n  const result = {\n    name: string.trim(),\n    orbital: { element: null, shell: null, angularMomentum: null },\n    auger: { element: null, transition: null },\n  };\n  let xpsMatches = string.match(XPS_REGEX);\n  let augerMatches = string.match(AUGER_REGEX);\n  if (xpsMatches && xpsMatches.groups.shell) {\n    result.orbital.element = xpsMatches.groups.element;\n    result.orbital.shell = parseInt(xpsMatches.groups.shell, 10);\n    result.orbital.angularMomentum = xpsMatches.groups.angularMomentum;\n  }\n  if (augerMatches && augerMatches.groups.transition) {\n    result.auger.element = augerMatches.groups.element;\n    result.auger.transition = augerMatches.groups.transition;\n  }\n\n  return result;\n}\n","import { parseCASA } from 'vamas';\n\nimport { mapComponents } from './mapComponents.js';\nimport { parseRegion } from './parseRegion.js';\n\nexport function getNormalizedMeta(meta = {}) {\n  const normalized = {};\n  normalized.region = parseRegion(meta['block identifier']);\n\n  const energyType = {};\n  energyType.kind = meta['abscissa label']\n    .replace('energy', '')\n    .replace(/\\s/g, '')\n    .toLowerCase();\n  energyType.units = meta['abscissa units'];\n  normalized.energyType = energyType;\n\n  const source = {};\n  source.label = meta['analysis source label'];\n  source.characteristicEnergy = {\n    value: meta['analysis source characteristic energy'],\n    units: 'eV',\n  };\n  source.beamWidthX = {\n    value: meta['analysis source beam width x'],\n    units: 'um',\n  };\n  source.beamWidthY = {\n    value: meta['analysis source beam width y'],\n    units: 'um',\n  };\n  normalized.analysisSource = source;\n  normalized.speciesLabel = meta['species label'];\n  normalized.components = mapComponents(\n    parseCASA(meta.blockComment),\n    source.characteristicEnergy.value,\n  );\n\n  const increment = meta['abscissa increment'];\n  normalized.from = meta['abscissa start'];\n  normalized.to =\n    meta['abscissa start'] + increment * (meta.nbOrdinateValues - 1);\n\n  normalized.analyserMode = meta['analyser mode'];\n\n  return normalized;\n}\n","import { ensureString } from 'ensure-string';\nimport { parse } from 'vamas';\n\nimport { Analysis } from '..';\n\nimport { getNormalizedMeta } from './getNormalizedMeta';\n\n/**\n * Returns an Analysis from a VAMAS text file\n * @param {arrayBuffer|string} [text] the vamas text file\n */\nexport function fromVamas(text) {\n  text = ensureString(text);\n  let parsed = parse(text);\n  let header = parsed.header;\n  let blocks = parsed.blocks;\n  let title = header['experiment identifier'];\n  let analysis = new Analysis();\n  for (let block of blocks) {\n    let sourceEnergy = block['analysis source characteristic energy'];\n\n    let yVariable = block.correspondingVariables[0];\n    let yLabel = yVariable.label;\n    let yValues = yVariable.array;\n\n    let xLabel = block['abscissa label'];\n    let xUnits = block['abscissa units'];\n    let xStart = block['abscissa start'];\n    let xIncrement = block['abscissa increment'];\n    let xValues = new Float64Array(yValues.length);\n    for (let i = 0; i < yValues.length; i++) {\n      xValues[i] = xStart + xIncrement * i;\n    }\n    // currently we take the first corresponding variables\n\n    let meta = {};\n    for (let key in block) {\n      if (typeof block[key] === 'string' || typeof block[key] === 'number') {\n        meta[key] = block[key];\n      }\n    }\n\n    for (let key in header) {\n      if (typeof header[key] === 'string' || typeof header[key] === 'number') {\n        meta[key] = header[key];\n      }\n    }\n\n    meta.cheminfo = { meta: getNormalizedMeta(meta) };\n\n    const variables = {};\n    if (xLabel === 'Kinetic energy' && sourceEnergy) {\n      // we will calculate binding energy\n      variables.x = {\n        data: xValues.map((value) => sourceEnergy - value).reverse(),\n        label: 'Binding energy',\n        units: xUnits,\n        type: 'DEPENDENT',\n      };\n      variables.y = {\n        data: yValues.reverse(),\n        label: yLabel,\n        type: 'DEPENDENT',\n      };\n      variables.k = {\n        data: xValues.reverse(),\n        label: xLabel,\n        units: xUnits,\n        type: 'INDEPENDENT',\n      };\n    } else {\n      variables.x = {\n        data: xValues,\n        label: xLabel,\n        units: xUnits,\n        type: 'INDEPENDENT',\n      };\n      variables.y = {\n        data: yValues,\n        label: yLabel,\n        type: 'DEPENDENT',\n      };\n    }\n\n    analysis.pushSpectrum(variables, {\n      dataType: 'XPS',\n      title,\n      meta,\n    });\n  }\n\n  return analysis;\n}\n","import { gsd } from 'ml-gsd';\n\n/**\n * Allow\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {object} [options.gsd={}] global spectra deconvolution options. Available options: http://mljs.github.io/global-spectral-deconvolution/#gsd\n * @return {array} Array of peaks\n */\n\nexport function peakPicking(spectrum, options = {}) {\n  const { gsd: gsdOptions = { realTopDetection: true } } = options;\n  let data = {\n    x: spectrum.variables.x.data,\n    y: spectrum.variables.y.data,\n  };\n  let peaks = gsd(data, gsdOptions);\n\n  return peaks;\n}\n","/**\n * Array of object containing element, orbital and be\n */\nexport const references = [\n  { element: 'H', orbital: '1s', be: 14 },\n  { element: 'He', orbital: '1s', be: 25 },\n  { element: 'Li', orbital: '1s', be: 55 },\n  { element: 'Be', orbital: '1s', be: 111 },\n  { element: 'B', orbital: '1s', be: 188 },\n  { element: 'C', orbital: '1s', be: 284 },\n  { element: 'N', orbital: '1s', be: 399 },\n  { element: 'O', orbital: '1s', be: 532 },\n  { element: 'F', orbital: '1s', be: 686 },\n  { element: 'Ne', orbital: '1s', be: 867 },\n  { element: 'Na', orbital: '1s', be: 1072 },\n  { element: 'O', orbital: '2s', be: 24 },\n  { element: 'F', orbital: '2s', be: 31 },\n  { element: 'Ne', orbital: '2s', be: 45 },\n  { element: 'Na', orbital: '2s', be: 63 },\n  { element: 'Mg', orbital: '2s', be: 89 },\n  { element: 'Al', orbital: '2s', be: 118 },\n  { element: 'Si', orbital: '2s', be: 149 },\n  { element: 'P', orbital: '2s', be: 189 },\n  { element: 'S', orbital: '2s', be: 229 },\n  { element: 'Cl', orbital: '2s', be: 270 },\n  { element: 'Ar', orbital: '2s', be: 320 },\n  { element: 'K', orbital: '2s', be: 377 },\n  { element: 'Ca', orbital: '2s', be: 438 },\n  { element: 'Sc', orbital: '2s', be: 500 },\n  { element: 'Ti', orbital: '2s', be: 564 },\n  { element: 'V', orbital: '2s', be: 628 },\n  { element: 'Cr', orbital: '2s', be: 695 },\n  { element: 'Mn', orbital: '2s', be: 769 },\n  { element: 'Fe', orbital: '2s', be: 846 },\n  { element: 'Co', orbital: '2s', be: 926 },\n  { element: 'Ni', orbital: '2s', be: 1008 },\n  { element: 'Cu', orbital: '2s', be: 1096 },\n  { element: 'Zn', orbital: '2s', be: 1194 },\n  { element: 'B', orbital: '2p1/2', be: 5 },\n  { element: 'C', orbital: '2p1/2', be: 7 },\n  { element: 'N', orbital: '2p1/2', be: 9 },\n  { element: 'O', orbital: '2p1/2', be: 7 },\n  { element: 'F', orbital: '2p1/2', be: 9 },\n  { element: 'Ne', orbital: '2p1/2', be: 18 },\n  { element: 'Na', orbital: '2p1/2', be: 31 },\n  { element: 'Mg', orbital: '2p1/2', be: 52 },\n  { element: 'Al', orbital: '2p1/2', be: 74 },\n  { element: 'Si', orbital: '2p1/2', be: 100 },\n  { element: 'P', orbital: '2p1/2', be: 136 },\n  { element: 'S', orbital: '2p1/2', be: 165 },\n  { element: 'Cl', orbital: '2p1/2', be: 202 },\n  { element: 'Ar', orbital: '2p1/2', be: 247 },\n  { element: 'K', orbital: '2p1/2', be: 297 },\n  { element: 'Ca', orbital: '2p1/2', be: 350 },\n  { element: 'Sc', orbital: '2p1/2', be: 407 },\n  { element: 'Ti', orbital: '2p1/2', be: 461 },\n  { element: 'V', orbital: '2p1/2', be: 520 },\n  { element: 'Cr', orbital: '2p1/2', be: 584 },\n  { element: 'Mn', orbital: '2p1/2', be: 652 },\n  { element: 'Fe', orbital: '2p1/2', be: 723 },\n  { element: 'Co', orbital: '2p1/2', be: 794 },\n  { element: 'Ni', orbital: '2p1/2', be: 872 },\n  { element: 'Cu', orbital: '2p1/2', be: 951 },\n  { element: 'Zn', orbital: '2p1/2', be: 1044 },\n  { element: 'Ga', orbital: '2p1/2', be: 1143 },\n  { element: 'Ge', orbital: '2p1/2', be: 1249 },\n  { element: 'B', orbital: '2p3/2', be: 5 },\n  { element: 'C', orbital: '2p3/2', be: 7 },\n  { element: 'N', orbital: '2p3/2', be: 9 },\n  { element: 'O', orbital: '2p3/2', be: 7 },\n  { element: 'F', orbital: '2p3/2', be: 9 },\n  { element: 'Ne', orbital: '2p3/2', be: 18 },\n  { element: 'Na', orbital: '2p3/2', be: 31 },\n  { element: 'Mg', orbital: '2p3/2', be: 52 },\n  { element: 'Al', orbital: '2p3/2', be: 73 },\n  { element: 'Si', orbital: '2p3/2', be: 99 },\n  { element: 'P', orbital: '2p3/2', be: 135 },\n  { element: 'S', orbital: '2p3/2', be: 164 },\n  { element: 'Cl', orbital: '2p3/2', be: 200 },\n  { element: 'Ar', orbital: '2p3/2', be: 245 },\n  { element: 'K', orbital: '2p3/2', be: 294 },\n  { element: 'Ca', orbital: '2p3/2', be: 347 },\n  { element: 'Sc', orbital: '2p3/2', be: 402 },\n  { element: 'Ti', orbital: '2p3/2', be: 455 },\n  { element: 'V', orbital: '2p3/2', be: 513 },\n  { element: 'Cr', orbital: '2p3/2', be: 575 },\n  { element: 'Mn', orbital: '2p3/2', be: 641 },\n  { element: 'Fe', orbital: '2p3/2', be: 710 },\n  { element: 'Co', orbital: '2p3/2', be: 779 },\n  { element: 'Ni', orbital: '2p3/2', be: 855 },\n  { element: 'Cu', orbital: '2p3/2', be: 931 },\n  { element: 'Zn', orbital: '2p3/2', be: 1021 },\n  { element: 'Ga', orbital: '2p3/2', be: 1116 },\n  { element: 'Ge', orbital: '2p3/2', be: 1217 },\n  { element: 'B', orbital: '2p', be: 5 },\n  { element: 'C', orbital: '2p', be: 7 },\n  { element: 'N', orbital: '2p', be: 9 },\n  { element: 'O', orbital: '2p', be: 7 },\n  { element: 'F', orbital: '2p', be: 9 },\n  { element: 'Ne', orbital: '2p', be: 18 },\n  { element: 'Na', orbital: '2p', be: 31 },\n  { element: 'Mg', orbital: '2p', be: 52 },\n  { element: 'Al', orbital: '2p', be: 73 },\n  { element: 'Si', orbital: '2p', be: 99 },\n  { element: 'P', orbital: '2p', be: 135 },\n  { element: 'S', orbital: '2p', be: 164 },\n  { element: 'Cl', orbital: '2p', be: 200 },\n  { element: 'Ar', orbital: '2p', be: 245 },\n  { element: 'K', orbital: '2p', be: 294 },\n  { element: 'Ca', orbital: '2p', be: 347 },\n  { element: 'Sc', orbital: '2p', be: 402 },\n  { element: 'Ti', orbital: '2p', be: 455 },\n  { element: 'V', orbital: '2p', be: 513 },\n  { element: 'Cr', orbital: '2p', be: 575 },\n  { element: 'Mn', orbital: '2p', be: 641 },\n  { element: 'Fe', orbital: '2p', be: 710 },\n  { element: 'Co', orbital: '2p', be: 779 },\n  { element: 'Ni', orbital: '2p', be: 855 },\n  { element: 'Cu', orbital: '2p', be: 931 },\n  { element: 'Zn', orbital: '2p', be: 1021 },\n  { element: 'Ga', orbital: '2p', be: 1116 },\n  { element: 'Ge', orbital: '2p', be: 1217 },\n  { element: 'Na', orbital: '3s', be: 1 },\n  { element: 'Mg', orbital: '3s', be: 2 },\n  { element: 'Al', orbital: '3s', be: 1 },\n  { element: 'Si', orbital: '3s', be: 8 },\n  { element: 'P', orbital: '3s', be: 16 },\n  { element: 'S', orbital: '3s', be: 16 },\n  { element: 'Cl', orbital: '3s', be: 18 },\n  { element: 'Ar', orbital: '3s', be: 25 },\n  { element: 'K', orbital: '3s', be: 34 },\n  { element: 'Ca', orbital: '3s', be: 44 },\n  { element: 'Sc', orbital: '3s', be: 54 },\n  { element: 'Ti', orbital: '3s', be: 59 },\n  { element: 'V', orbital: '3s', be: 66 },\n  { element: 'Cr', orbital: '3s', be: 74 },\n  { element: 'Mn', orbital: '3s', be: 84 },\n  { element: 'Fe', orbital: '3s', be: 95 },\n  { element: 'Co', orbital: '3s', be: 101 },\n  { element: 'Ni', orbital: '3s', be: 112 },\n  { element: 'Cu', orbital: '3s', be: 120 },\n  { element: 'Zn', orbital: '3s', be: 137 },\n  { element: 'Ga', orbital: '3s', be: 158 },\n  { element: 'Ge', orbital: '3s', be: 181 },\n  { element: 'As', orbital: '3s', be: 204 },\n  { element: 'Se', orbital: '3s', be: 232 },\n  { element: 'Br', orbital: '3s', be: 257 },\n  { element: 'Kr', orbital: '3s', be: 289 },\n  { element: 'Rb', orbital: '3s', be: 322 },\n  { element: 'Sr', orbital: '3s', be: 358 },\n  { element: 'Y', orbital: '3s', be: 395 },\n  { element: 'Zr', orbital: '3s', be: 431 },\n  { element: 'Nb', orbital: '3s', be: 469 },\n  { element: 'Mo', orbital: '3s', be: 505 },\n  { element: 'Tc', orbital: '3s', be: 544 },\n  { element: 'Ru', orbital: '3s', be: 585 },\n  { element: 'Rh', orbital: '3s', be: 627 },\n  { element: 'Pd', orbital: '3s', be: 670 },\n  { element: 'Ag', orbital: '3s', be: 717 },\n  { element: 'Cd', orbital: '3s', be: 770 },\n  { element: 'In', orbital: '3s', be: 826 },\n  { element: 'Sn', orbital: '3s', be: 884 },\n  { element: 'Sb', orbital: '3s', be: 944 },\n  { element: 'Te', orbital: '3s', be: 1006 },\n  { element: 'I', orbital: '3s', be: 1072 },\n  { element: 'Xe', orbital: '3s', be: 1145 },\n  { element: 'Cs', orbital: '3s', be: 1217 },\n  { element: 'Si', orbital: '3p1/2', be: 3 },\n  { element: 'P', orbital: '3p1/2', be: 10 },\n  { element: 'S', orbital: '3p1/2', be: 8 },\n  { element: 'Cl', orbital: '3p1/2', be: 7 },\n  { element: 'Ar', orbital: '3p1/2', be: 12 },\n  { element: 'K', orbital: '3p1/2', be: 18 },\n  { element: 'Ca', orbital: '3p1/2', be: 26 },\n  { element: 'Sc', orbital: '3p1/2', be: 32 },\n  { element: 'Ti', orbital: '3p1/2', be: 34 },\n  { element: 'V', orbital: '3p1/2', be: 38 },\n  { element: 'Cr', orbital: '3p1/2', be: 43 },\n  { element: 'Mn', orbital: '3p1/2', be: 49 },\n  { element: 'Fe', orbital: '3p1/2', be: 56 },\n  { element: 'Co', orbital: '3p1/2', be: 60 },\n  { element: 'Ni', orbital: '3p1/2', be: 68 },\n  { element: 'Cu', orbital: '3p1/2', be: 74 },\n  { element: 'Zn', orbital: '3p1/2', be: 87 },\n  { element: 'Ga', orbital: '3p1/2', be: 107 },\n  { element: 'Ge', orbital: '3p1/2', be: 129 },\n  { element: 'As', orbital: '3p1/2', be: 147 },\n  { element: 'Se', orbital: '3p1/2', be: 168 },\n  { element: 'Br', orbital: '3p1/2', be: 189 },\n  { element: 'Kr', orbital: '3p1/2', be: 223 },\n  { element: 'Rb', orbital: '3p1/2', be: 248 },\n  { element: 'Sr', orbital: '3p1/2', be: 280 },\n  { element: 'Y', orbital: '3p1/2', be: 313 },\n  { element: 'Zr', orbital: '3p1/2', be: 345 },\n  { element: 'Nb', orbital: '3p1/2', be: 379 },\n  { element: 'Mo', orbital: '3p1/2', be: 410 },\n  { element: 'Tc', orbital: '3p1/2', be: 445 },\n  { element: 'Ru', orbital: '3p1/2', be: 483 },\n  { element: 'Rh', orbital: '3p1/2', be: 521 },\n  { element: 'Pd', orbital: '3p1/2', be: 559 },\n  { element: 'Ag', orbital: '3p1/2', be: 602 },\n  { element: 'Cd', orbital: '3p1/2', be: 651 },\n  { element: 'In', orbital: '3p1/2', be: 702 },\n  { element: 'Sn', orbital: '3p1/2', be: 757 },\n  { element: 'Sb', orbital: '3p1/2', be: 812 },\n  { element: 'Te', orbital: '3p1/2', be: 870 },\n  { element: 'I', orbital: '3p1/2', be: 931 },\n  { element: 'Xe', orbital: '3p1/2', be: 999 },\n  { element: 'Cs', orbital: '3p1/2', be: 1065 },\n  { element: 'Ba', orbital: '3p1/2', be: 1137 },\n  { element: 'La', orbital: '3p1/2', be: 1205 },\n  { element: 'Si', orbital: '3p3/2', be: 3 },\n  { element: 'P', orbital: '3p3/2', be: 10 },\n  { element: 'S', orbital: '3p3/2', be: 8 },\n  { element: 'Cl', orbital: '3p3/2', be: 7 },\n  { element: 'Ar', orbital: '3p3/2', be: 12 },\n  { element: 'K', orbital: '3p3/2', be: 18 },\n  { element: 'Ca', orbital: '3p3/2', be: 26 },\n  { element: 'Sc', orbital: '3p3/2', be: 32 },\n  { element: 'Ti', orbital: '3p3/2', be: 34 },\n  { element: 'V', orbital: '3p3/2', be: 38 },\n  { element: 'Cr', orbital: '3p3/2', be: 43 },\n  { element: 'Mn', orbital: '3p3/2', be: 49 },\n  { element: 'Fe', orbital: '3p3/2', be: 56 },\n  { element: 'Co', orbital: '3p3/2', be: 60 },\n  { element: 'Ni', orbital: '3p3/2', be: 68 },\n  { element: 'Cu', orbital: '3p3/2', be: 74 },\n  { element: 'Zn', orbital: '3p3/2', be: 87 },\n  { element: 'Ga', orbital: '3p3/2', be: 103 },\n  { element: 'Ge', orbital: '3p3/2', be: 122 },\n  { element: 'As', orbital: '3p3/2', be: 141 },\n  { element: 'Se', orbital: '3p3/2', be: 162 },\n  { element: 'Br', orbital: '3p3/2', be: 182 },\n  { element: 'Kr', orbital: '3p3/2', be: 214 },\n  { element: 'Rb', orbital: '3p3/2', be: 239 },\n  { element: 'Sr', orbital: '3p3/2', be: 269 },\n  { element: 'Y', orbital: '3p3/2', be: 301 },\n  { element: 'Zr', orbital: '3p3/2', be: 331 },\n  { element: 'Nb', orbital: '3p3/2', be: 363 },\n  { element: 'Mo', orbital: '3p3/2', be: 393 },\n  { element: 'Tc', orbital: '3p3/2', be: 425 },\n  { element: 'Ru', orbital: '3p3/2', be: 461 },\n  { element: 'Rh', orbital: '3p3/2', be: 496 },\n  { element: 'Pd', orbital: '3p3/2', be: 531 },\n  { element: 'Ag', orbital: '3p3/2', be: 571 },\n  { element: 'Cd', orbital: '3p3/2', be: 617 },\n  { element: 'In', orbital: '3p3/2', be: 664 },\n  { element: 'Sn', orbital: '3p3/2', be: 715 },\n  { element: 'Sb', orbital: '3p3/2', be: 766 },\n  { element: 'Te', orbital: '3p3/2', be: 819 },\n  { element: 'I', orbital: '3p3/2', be: 875 },\n  { element: 'Xe', orbital: '3p3/2', be: 937 },\n  { element: 'Cs', orbital: '3p3/2', be: 998 },\n  { element: 'Ba', orbital: '3p3/2', be: 1063 },\n  { element: 'La', orbital: '3p3/2', be: 1124 },\n  { element: 'Ce', orbital: '3p3/2', be: 1186 },\n  { element: 'Pr', orbital: '3p3/2', be: 1243 },\n  { element: 'Si', orbital: '3p', be: 3 },\n  { element: 'P', orbital: '3p', be: 10 },\n  { element: 'S', orbital: '3p', be: 8 },\n  { element: 'Cl', orbital: '3p', be: 7 },\n  { element: 'Ar', orbital: '3p', be: 12 },\n  { element: 'K', orbital: '3p', be: 18 },\n  { element: 'Ca', orbital: '3p', be: 26 },\n  { element: 'Sc', orbital: '3p', be: 32 },\n  { element: 'Ti', orbital: '3p', be: 34 },\n  { element: 'V', orbital: '3p', be: 38 },\n  { element: 'Cr', orbital: '3p', be: 43 },\n  { element: 'Mn', orbital: '3p', be: 49 },\n  { element: 'Fe', orbital: '3p', be: 56 },\n  { element: 'Co', orbital: '3p', be: 60 },\n  { element: 'Ni', orbital: '3p', be: 68 },\n  { element: 'Cu', orbital: '3p', be: 74 },\n  { element: 'Zn', orbital: '3p', be: 87 },\n  { element: 'Ga', orbital: '3p', be: 103 },\n  { element: 'Ge', orbital: '3p', be: 122 },\n  { element: 'As', orbital: '3p', be: 141 },\n  { element: 'Se', orbital: '3p', be: 162 },\n  { element: 'Br', orbital: '3p', be: 182 },\n  { element: 'Kr', orbital: '3p', be: 214 },\n  { element: 'Rb', orbital: '3p', be: 239 },\n  { element: 'Sr', orbital: '3p', be: 269 },\n  { element: 'Y', orbital: '3p', be: 301 },\n  { element: 'Zr', orbital: '3p', be: 331 },\n  { element: 'Nb', orbital: '3p', be: 363 },\n  { element: 'Mo', orbital: '3p', be: 393 },\n  { element: 'Tc', orbital: '3p', be: 425 },\n  { element: 'Ru', orbital: '3p', be: 461 },\n  { element: 'Rh', orbital: '3p', be: 496 },\n  { element: 'Pd', orbital: '3p', be: 531 },\n  { element: 'Ag', orbital: '3p', be: 571 },\n  { element: 'Cd', orbital: '3p', be: 617 },\n  { element: 'In', orbital: '3p', be: 664 },\n  { element: 'Sn', orbital: '3p', be: 715 },\n  { element: 'Sb', orbital: '3p', be: 766 },\n  { element: 'Te', orbital: '3p', be: 819 },\n  { element: 'I', orbital: '3p', be: 875 },\n  { element: 'Xe', orbital: '3p', be: 937 },\n  { element: 'Cs', orbital: '3p', be: 998 },\n  { element: 'Ba', orbital: '3p', be: 1063 },\n  { element: 'La', orbital: '3p', be: 1124 },\n  { element: 'Ce', orbital: '3p', be: 1186 },\n  { element: 'Pr', orbital: '3p', be: 1243 },\n  { element: 'Sc', orbital: '3d3/2', be: 7 },\n  { element: 'Ti', orbital: '3d3/2', be: 3 },\n  { element: 'V', orbital: '3d3/2', be: 2 },\n  { element: 'Cr', orbital: '3d3/2', be: 2 },\n  { element: 'Mn', orbital: '3d3/2', be: 4 },\n  { element: 'Fe', orbital: '3d3/2', be: 6 },\n  { element: 'Co', orbital: '3d3/2', be: 3 },\n  { element: 'Ni', orbital: '3d3/2', be: 4 },\n  { element: 'Cu', orbital: '3d3/2', be: 2 },\n  { element: 'Zn', orbital: '3d3/2', be: 9 },\n  { element: 'Ga', orbital: '3d3/2', be: 18 },\n  { element: 'Ge', orbital: '3d3/2', be: 29 },\n  { element: 'As', orbital: '3d3/2', be: 41 },\n  { element: 'Se', orbital: '3d3/2', be: 57 },\n  { element: 'Br', orbital: '3d3/2', be: 70 },\n  { element: 'Kr', orbital: '3d3/2', be: 89 },\n  { element: 'Rb', orbital: '3d3/2', be: 112 },\n  { element: 'Sr', orbital: '3d3/2', be: 135 },\n  { element: 'Y', orbital: '3d3/2', be: 160 },\n  { element: 'Zr', orbital: '3d3/2', be: 183 },\n  { element: 'Nb', orbital: '3d3/2', be: 208 },\n  { element: 'Mo', orbital: '3d3/2', be: 230 },\n  { element: 'Tc', orbital: '3d3/2', be: 257 },\n  { element: 'Ru', orbital: '3d3/2', be: 284 },\n  { element: 'Rh', orbital: '3d3/2', be: 312 },\n  { element: 'Pd', orbital: '3d3/2', be: 340 },\n  { element: 'Ag', orbital: '3d3/2', be: 373 },\n  { element: 'Cd', orbital: '3d3/2', be: 411 },\n  { element: 'In', orbital: '3d3/2', be: 451 },\n  { element: 'Sn', orbital: '3d3/2', be: 494 },\n  { element: 'Sb', orbital: '3d3/2', be: 537 },\n  { element: 'Te', orbital: '3d3/2', be: 582 },\n  { element: 'I', orbital: '3d3/2', be: 631 },\n  { element: 'Xe', orbital: '3d3/2', be: 685 },\n  { element: 'Cs', orbital: '3d3/2', be: 740 },\n  { element: 'Ba', orbital: '3d3/2', be: 796 },\n  { element: 'La', orbital: '3d3/2', be: 849 },\n  { element: 'Ce', orbital: '3d3/2', be: 902 },\n  { element: 'Pr', orbital: '3d3/2', be: 951 },\n  { element: 'Nd', orbital: '3d3/2', be: 1000 },\n  { element: 'Pm', orbital: '3d3/2', be: 1052 },\n  { element: 'Sm', orbital: '3d3/2', be: 1107 },\n  { element: 'Eu', orbital: '3d3/2', be: 1161 },\n  { element: 'Gd', orbital: '3d3/2', be: 1218 },\n  { element: 'Sc', orbital: '3d5/2', be: 7 },\n  { element: 'Ti', orbital: '3d5/2', be: 3 },\n  { element: 'V', orbital: '3d5/2', be: 2 },\n  { element: 'Cr', orbital: '3d5/2', be: 2 },\n  { element: 'Mn', orbital: '3d5/2', be: 4 },\n  { element: 'Fe', orbital: '3d5/2', be: 6 },\n  { element: 'Co', orbital: '3d5/2', be: 3 },\n  { element: 'Ni', orbital: '3d5/2', be: 4 },\n  { element: 'Cu', orbital: '3d5/2', be: 2 },\n  { element: 'Zn', orbital: '3d5/2', be: 9 },\n  { element: 'Ga', orbital: '3d5/2', be: 18 },\n  { element: 'Ge', orbital: '3d5/2', be: 29 },\n  { element: 'As', orbital: '3d5/2', be: 41 },\n  { element: 'Se', orbital: '3d5/2', be: 57 },\n  { element: 'Br', orbital: '3d5/2', be: 69 },\n  { element: 'Kr', orbital: '3d5/2', be: 89 },\n  { element: 'Rb', orbital: '3d5/2', be: 111 },\n  { element: 'Sr', orbital: '3d5/2', be: 133 },\n  { element: 'Y', orbital: '3d5/2', be: 158 },\n  { element: 'Zr', orbital: '3d5/2', be: 180 },\n  { element: 'Nb', orbital: '3d5/2', be: 205 },\n  { element: 'Mo', orbital: '3d5/2', be: 227 },\n  { element: 'Tc', orbital: '3d5/2', be: 253 },\n  { element: 'Ru', orbital: '3d5/2', be: 279 },\n  { element: 'Rh', orbital: '3d5/2', be: 307 },\n  { element: 'Pd', orbital: '3d5/2', be: 335 },\n  { element: 'Ag', orbital: '3d5/2', be: 367 },\n  { element: 'Cd', orbital: '3d5/2', be: 404 },\n  { element: 'In', orbital: '3d5/2', be: 443 },\n  { element: 'Sn', orbital: '3d5/2', be: 485 },\n  { element: 'Sb', orbital: '3d5/2', be: 528 },\n  { element: 'Te', orbital: '3d5/2', be: 572 },\n  { element: 'I', orbital: '3d5/2', be: 620 },\n  { element: 'Xe', orbital: '3d5/2', be: 672 },\n  { element: 'Cs', orbital: '3d5/2', be: 726 },\n  { element: 'Ba', orbital: '3d5/2', be: 781 },\n  { element: 'La', orbital: '3d5/2', be: 832 },\n  { element: 'Ce', orbital: '3d5/2', be: 884 },\n  { element: 'Pr', orbital: '3d5/2', be: 931 },\n  { element: 'Nd', orbital: '3d5/2', be: 978 },\n  { element: 'Pm', orbital: '3d5/2', be: 1027 },\n  { element: 'Sm', orbital: '3d5/2', be: 1081 },\n  { element: 'Eu', orbital: '3d5/2', be: 1131 },\n  { element: 'Gd', orbital: '3d5/2', be: 1186 },\n  { element: 'Tb', orbital: '3d5/2', be: 1242 },\n  { element: 'Sc', orbital: '3d', be: 7 },\n  { element: 'Ti', orbital: '3d', be: 3 },\n  { element: 'V', orbital: '3d', be: 2 },\n  { element: 'Cr', orbital: '3d', be: 2 },\n  { element: 'Mn', orbital: '3d', be: 4 },\n  { element: 'Fe', orbital: '3d', be: 6 },\n  { element: 'Co', orbital: '3d', be: 3 },\n  { element: 'Ni', orbital: '3d', be: 4 },\n  { element: 'Cu', orbital: '3d', be: 2 },\n  { element: 'Zn', orbital: '3d', be: 9 },\n  { element: 'Ga', orbital: '3d', be: 18 },\n  { element: 'Ge', orbital: '3d', be: 29 },\n  { element: 'As', orbital: '3d', be: 41 },\n  { element: 'Se', orbital: '3d', be: 57 },\n  { element: 'Br', orbital: '3d', be: 69 },\n  { element: 'Kr', orbital: '3d', be: 89 },\n  { element: 'Rb', orbital: '3d', be: 111 },\n  { element: 'Sr', orbital: '3d', be: 133 },\n  { element: 'Y', orbital: '3d', be: 158 },\n  { element: 'Zr', orbital: '3d', be: 180 },\n  { element: 'Nb', orbital: '3d', be: 205 },\n  { element: 'Mo', orbital: '3d', be: 227 },\n  { element: 'Tc', orbital: '3d', be: 253 },\n  { element: 'Ru', orbital: '3d', be: 279 },\n  { element: 'Rh', orbital: '3d', be: 307 },\n  { element: 'Pd', orbital: '3d', be: 335 },\n  { element: 'Ag', orbital: '3d', be: 367 },\n  { element: 'Cd', orbital: '3d', be: 404 },\n  { element: 'In', orbital: '3d', be: 443 },\n  { element: 'Sn', orbital: '3d', be: 485 },\n  { element: 'Sb', orbital: '3d', be: 528 },\n  { element: 'Te', orbital: '3d', be: 572 },\n  { element: 'I', orbital: '3d', be: 620 },\n  { element: 'Xe', orbital: '3d', be: 672 },\n  { element: 'Cs', orbital: '3d', be: 726 },\n  { element: 'Ba', orbital: '3d', be: 781 },\n  { element: 'La', orbital: '3d', be: 832 },\n  { element: 'Ce', orbital: '3d', be: 884 },\n  { element: 'Pr', orbital: '3d', be: 931 },\n  { element: 'Nd', orbital: '3d', be: 978 },\n  { element: 'Pm', orbital: '3d', be: 1027 },\n  { element: 'Sm', orbital: '3d', be: 1081 },\n  { element: 'Eu', orbital: '3d', be: 1131 },\n  { element: 'Gd', orbital: '3d', be: 1186 },\n  { element: 'Tb', orbital: '3d', be: 1242 },\n  { element: 'Br', orbital: '4s', be: 27 },\n  { element: 'Kr', orbital: '4s', be: 24 },\n  { element: 'Rb', orbital: '4s', be: 30 },\n  { element: 'Sr', orbital: '4s', be: 38 },\n  { element: 'Y', orbital: '4s', be: 46 },\n  { element: 'Zr', orbital: '4s', be: 52 },\n  { element: 'Nb', orbital: '4s', be: 58 },\n  { element: 'Mo', orbital: '4s', be: 62 },\n  { element: 'Tc', orbital: '4s', be: 68 },\n  { element: 'Ru', orbital: '4s', be: 75 },\n  { element: 'Rh', orbital: '4s', be: 81 },\n  { element: 'Pd', orbital: '4s', be: 86 },\n  { element: 'Ag', orbital: '4s', be: 95 },\n  { element: 'Cd', orbital: '4s', be: 108 },\n  { element: 'In', orbital: '4s', be: 122 },\n  { element: 'Sn', orbital: '4s', be: 137 },\n  { element: 'Sb', orbital: '4s', be: 152 },\n  { element: 'Te', orbital: '4s', be: 168 },\n  { element: 'I', orbital: '4s', be: 186 },\n  { element: 'Xe', orbital: '4s', be: 208 },\n  { element: 'Cs', orbital: '4s', be: 231 },\n  { element: 'Ba', orbital: '4s', be: 253 },\n  { element: 'La', orbital: '4s', be: 271 },\n  { element: 'Ce', orbital: '4s', be: 290 },\n  { element: 'Pr', orbital: '4s', be: 305 },\n  { element: 'Nd', orbital: '4s', be: 316 },\n  { element: 'Pm', orbital: '4s', be: 331 },\n  { element: 'Sm', orbital: '4s', be: 347 },\n  { element: 'Eu', orbital: '4s', be: 360 },\n  { element: 'Gd', orbital: '4s', be: 376 },\n  { element: 'Tb', orbital: '4s', be: 398 },\n  { element: 'Dy', orbital: '4s', be: 416 },\n  { element: 'Ho', orbital: '4s', be: 436 },\n  { element: 'Er', orbital: '4s', be: 449 },\n  { element: 'Tm', orbital: '4s', be: 472 },\n  { element: 'Yb', orbital: '4s', be: 487 },\n  { element: 'Lu', orbital: '4s', be: 506 },\n  { element: 'Hf', orbital: '4s', be: 538 },\n  { element: 'Ta', orbital: '4s', be: 566 },\n  { element: 'W', orbital: '4s', be: 595 },\n  { element: 'Re', orbital: '4s', be: 625 },\n  { element: 'Os', orbital: '4s', be: 655 },\n  { element: 'Ir', orbital: '4s', be: 690 },\n  { element: 'Pt', orbital: '4s', be: 724 },\n  { element: 'Au', orbital: '4s', be: 759 },\n  { element: 'Hg', orbital: '4s', be: 800 },\n  { element: 'Tl', orbital: '4s', be: 846 },\n  { element: 'Pb', orbital: '4s', be: 894 },\n  { element: 'Bi', orbital: '4s', be: 939 },\n  { element: 'Po', orbital: '4s', be: 995 },\n  { element: 'At', orbital: '4s', be: 1042 },\n  { element: 'Rn', orbital: '4s', be: 1097 },\n  { element: 'Fr', orbital: '4s', be: 1153 },\n  { element: 'Ra', orbital: '4s', be: 1208 },\n  { element: 'U', orbital: '4s', be: 1043 },\n  { element: 'Ga', orbital: '4p1/2', be: 1 },\n  { element: 'Ge', orbital: '4p1/2', be: 3 },\n  { element: 'As', orbital: '4p1/2', be: 3 },\n  { element: 'Se', orbital: '4p1/2', be: 6 },\n  { element: 'Br', orbital: '4p1/2', be: 5 },\n  { element: 'Kr', orbital: '4p1/2', be: 11 },\n  { element: 'Rb', orbital: '4p1/2', be: 15 },\n  { element: 'Sr', orbital: '4p1/2', be: 20 },\n  { element: 'Y', orbital: '4p1/2', be: 26 },\n  { element: 'Zr', orbital: '4p1/2', be: 29 },\n  { element: 'Nb', orbital: '4p1/2', be: 34 },\n  { element: 'Mo', orbital: '4p1/2', be: 35 },\n  { element: 'Tc', orbital: '4p1/2', be: 39 },\n  { element: 'Ru', orbital: '4p1/2', be: 43 },\n  { element: 'Rh', orbital: '4p1/2', be: 48 },\n  { element: 'Pd', orbital: '4p1/2', be: 51 },\n  { element: 'Ag', orbital: '4p1/2', be: 62 },\n  { element: 'Cd', orbital: '4p1/2', be: 67 },\n  { element: 'In', orbital: '4p1/2', be: 77 },\n  { element: 'Sn', orbital: '4p1/2', be: 89 },\n  { element: 'Sb', orbital: '4p1/2', be: 99 },\n  { element: 'Te', orbital: '4p1/2', be: 110 },\n  { element: 'I', orbital: '4p1/2', be: 123 },\n  { element: 'Xe', orbital: '4p1/2', be: 147 },\n  { element: 'Cs', orbital: '4p1/2', be: 172 },\n  { element: 'Ba', orbital: '4p1/2', be: 192 },\n  { element: 'La', orbital: '4p1/2', be: 206 },\n  { element: 'Ce', orbital: '4p1/2', be: 224 },\n  { element: 'Pr', orbital: '4p1/2', be: 237 },\n  { element: 'Nd', orbital: '4p1/2', be: 244 },\n  { element: 'Pm', orbital: '4p1/2', be: 255 },\n  { element: 'Sm', orbital: '4p1/2', be: 267 },\n  { element: 'Eu', orbital: '4p1/2', be: 284 },\n  { element: 'Gd', orbital: '4p1/2', be: 289 },\n  { element: 'Tb', orbital: '4p1/2', be: 311 },\n  { element: 'Dy', orbital: '4p1/2', be: 332 },\n  { element: 'Ho', orbital: '4p1/2', be: 343 },\n  { element: 'Er', orbital: '4p1/2', be: 366 },\n  { element: 'Tm', orbital: '4p1/2', be: 386 },\n  { element: 'Yb', orbital: '4p1/2', be: 396 },\n  { element: 'Lu', orbital: '4p1/2', be: 410 },\n  { element: 'Hf', orbital: '4p1/2', be: 437 },\n  { element: 'Ta', orbital: '4p1/2', be: 465 },\n  { element: 'W', orbital: '4p1/2', be: 492 },\n  { element: 'Re', orbital: '4p1/2', be: 518 },\n  { element: 'Os', orbital: '4p1/2', be: 547 },\n  { element: 'Ir', orbital: '4p1/2', be: 577 },\n  { element: 'Pt', orbital: '4p1/2', be: 608 },\n  { element: 'Au', orbital: '4p1/2', be: 644 },\n  { element: 'Hg', orbital: '4p1/2', be: 677 },\n  { element: 'Tl', orbital: '4p1/2', be: 722 },\n  { element: 'Pb', orbital: '4p1/2', be: 764 },\n  { element: 'Bi', orbital: '4p1/2', be: 806 },\n  { element: 'Po', orbital: '4p1/2', be: 851 },\n  { element: 'At', orbital: '4p1/2', be: 886 },\n  { element: 'Rn', orbital: '4p1/2', be: 929 },\n  { element: 'Fr', orbital: '4p1/2', be: 980 },\n  { element: 'Ra', orbital: '4p1/2', be: 1058 },\n  { element: 'Ac', orbital: '4p1/2', be: 1080 },\n  { element: 'Th', orbital: '4p1/2', be: 1168 },\n  { element: 'Ga', orbital: '4p3/2', be: 1 },\n  { element: 'Ge', orbital: '4p3/2', be: 3 },\n  { element: 'As', orbital: '4p3/2', be: 3 },\n  { element: 'Se', orbital: '4p3/2', be: 6 },\n  { element: 'Br', orbital: '4p3/2', be: 5 },\n  { element: 'Kr', orbital: '4p3/2', be: 11 },\n  { element: 'Rb', orbital: '4p3/2', be: 14 },\n  { element: 'Sr', orbital: '4p3/2', be: 20 },\n  { element: 'Y', orbital: '4p3/2', be: 26 },\n  { element: 'Zr', orbital: '4p3/2', be: 29 },\n  { element: 'Nb', orbital: '4p3/2', be: 34 },\n  { element: 'Mo', orbital: '4p3/2', be: 35 },\n  { element: 'Tc', orbital: '4p3/2', be: 39 },\n  { element: 'Ru', orbital: '4p3/2', be: 43 },\n  { element: 'Rh', orbital: '4p3/2', be: 48 },\n  { element: 'Pd', orbital: '4p3/2', be: 56 },\n  { element: 'Ag', orbital: '4p3/2', be: 56 },\n  { element: 'Cd', orbital: '4p3/2', be: 67 },\n  { element: 'In', orbital: '4p3/2', be: 77 },\n  { element: 'Sn', orbital: '4p3/2', be: 89 },\n  { element: 'Sb', orbital: '4p3/2', be: 99 },\n  { element: 'Te', orbital: '4p3/2', be: 110 },\n  { element: 'I', orbital: '4p3/2', be: 123 },\n  { element: 'Xe', orbital: '4p3/2', be: 147 },\n  { element: 'Cs', orbital: '4p3/2', be: 162 },\n  { element: 'Ba', orbital: '4p3/2', be: 180 },\n  { element: 'La', orbital: '4p3/2', be: 192 },\n  { element: 'Ce', orbital: '4p3/2', be: 208 },\n  { element: 'Pr', orbital: '4p3/2', be: 218 },\n  { element: 'Nd', orbital: '4p3/2', be: 225 },\n  { element: 'Pm', orbital: '4p3/2', be: 237 },\n  { element: 'Sm', orbital: '4p3/2', be: 249 },\n  { element: 'Eu', orbital: '4p3/2', be: 257 },\n  { element: 'Gd', orbital: '4p3/2', be: 271 },\n  { element: 'Tb', orbital: '4p3/2', be: 286 },\n  { element: 'Dy', orbital: '4p3/2', be: 293 },\n  { element: 'Ho', orbital: '4p3/2', be: 306 },\n  { element: 'Er', orbital: '4p3/2', be: 320 },\n  { element: 'Tm', orbital: '4p3/2', be: 337 },\n  { element: 'Yb', orbital: '4p3/2', be: 343 },\n  { element: 'Lu', orbital: '4p3/2', be: 359 },\n  { element: 'Hf', orbital: '4p3/2', be: 380 },\n  { element: 'Ta', orbital: '4p3/2', be: 405 },\n  { element: 'W', orbital: '4p3/2', be: 426 },\n  { element: 'Re', orbital: '4p3/2', be: 445 },\n  { element: 'Os', orbital: '4p3/2', be: 469 },\n  { element: 'Ir', orbital: '4p3/2', be: 495 },\n  { element: 'Pt', orbital: '4p3/2', be: 519 },\n  { element: 'Au', orbital: '4p3/2', be: 546 },\n  { element: 'Hg', orbital: '4p3/2', be: 571 },\n  { element: 'Tl', orbital: '4p3/2', be: 609 },\n  { element: 'Pb', orbital: '4p3/2', be: 645 },\n  { element: 'Bi', orbital: '4p3/2', be: 679 },\n  { element: 'Po', orbital: '4p3/2', be: 705 },\n  { element: 'At', orbital: '4p3/2', be: 740 },\n  { element: 'Rn', orbital: '4p3/2', be: 768 },\n  { element: 'Fr', orbital: '4p3/2', be: 810 },\n  { element: 'Ra', orbital: '4p3/2', be: 879 },\n  { element: 'Ac', orbital: '4p3/2', be: 890 },\n  { element: 'Th', orbital: '4p3/2', be: 968 },\n  { element: 'Ga', orbital: '4p', be: 1 },\n  { element: 'Ge', orbital: '4p', be: 3 },\n  { element: 'As', orbital: '4p', be: 3 },\n  { element: 'Se', orbital: '4p', be: 6 },\n  { element: 'Br', orbital: '4p', be: 5 },\n  { element: 'Kr', orbital: '4p', be: 11 },\n  { element: 'Rb', orbital: '4p', be: 14 },\n  { element: 'Sr', orbital: '4p', be: 20 },\n  { element: 'Y', orbital: '4p', be: 26 },\n  { element: 'Zr', orbital: '4p', be: 29 },\n  { element: 'Nb', orbital: '4p', be: 34 },\n  { element: 'Mo', orbital: '4p', be: 35 },\n  { element: 'Tc', orbital: '4p', be: 39 },\n  { element: 'Ru', orbital: '4p', be: 43 },\n  { element: 'Rh', orbital: '4p', be: 48 },\n  { element: 'Pd', orbital: '4p', be: 56 },\n  { element: 'Ag', orbital: '4p', be: 56 },\n  { element: 'Cd', orbital: '4p', be: 67 },\n  { element: 'In', orbital: '4p', be: 77 },\n  { element: 'Sn', orbital: '4p', be: 89 },\n  { element: 'Sb', orbital: '4p', be: 99 },\n  { element: 'Te', orbital: '4p', be: 110 },\n  { element: 'I', orbital: '4p', be: 123 },\n  { element: 'Xe', orbital: '4p', be: 147 },\n  { element: 'Cs', orbital: '4p', be: 162 },\n  { element: 'Ba', orbital: '4p', be: 180 },\n  { element: 'La', orbital: '4p', be: 192 },\n  { element: 'Ce', orbital: '4p', be: 208 },\n  { element: 'Pr', orbital: '4p', be: 218 },\n  { element: 'Nd', orbital: '4p', be: 225 },\n  { element: 'Pm', orbital: '4p', be: 237 },\n  { element: 'Sm', orbital: '4p', be: 249 },\n  { element: 'Eu', orbital: '4p', be: 257 },\n  { element: 'Gd', orbital: '4p', be: 271 },\n  { element: 'Tb', orbital: '4p', be: 286 },\n  { element: 'Dy', orbital: '4p', be: 293 },\n  { element: 'Ho', orbital: '4p', be: 306 },\n  { element: 'Er', orbital: '4p', be: 320 },\n  { element: 'Tm', orbital: '4p', be: 337 },\n  { element: 'Yb', orbital: '4p', be: 343 },\n  { element: 'Lu', orbital: '4p', be: 359 },\n  { element: 'Hf', orbital: '4p', be: 380 },\n  { element: 'Ta', orbital: '4p', be: 405 },\n  { element: 'W', orbital: '4p', be: 426 },\n  { element: 'Re', orbital: '4p', be: 445 },\n  { element: 'Os', orbital: '4p', be: 469 },\n  { element: 'Ir', orbital: '4p', be: 495 },\n  { element: 'Pt', orbital: '4p', be: 519 },\n  { element: 'Au', orbital: '4p', be: 546 },\n  { element: 'Hg', orbital: '4p', be: 571 },\n  { element: 'Tl', orbital: '4p', be: 609 },\n  { element: 'Pb', orbital: '4p', be: 645 },\n  { element: 'Bi', orbital: '4p', be: 679 },\n  { element: 'Po', orbital: '4p', be: 705 },\n  { element: 'At', orbital: '4p', be: 740 },\n  { element: 'Rn', orbital: '4p', be: 768 },\n  { element: 'Fr', orbital: '4p', be: 810 },\n  { element: 'Ra', orbital: '4p', be: 879 },\n  { element: 'Ac', orbital: '4p', be: 890 },\n  { element: 'Th', orbital: '4p', be: 968 },\n  { element: 'Y', orbital: '4d3/2', be: 3 },\n  { element: 'Zr', orbital: '4d3/2', be: 3 },\n  { element: 'Nb', orbital: '4d3/2', be: 4 },\n  { element: 'Mo', orbital: '4d3/2', be: 2 },\n  { element: 'Tc', orbital: '4d3/2', be: 2 },\n  { element: 'Ru', orbital: '4d3/2', be: 2 },\n  { element: 'Rh', orbital: '4d3/2', be: 3 },\n  { element: 'Pd', orbital: '4d3/2', be: 1 },\n  { element: 'Ag', orbital: '4d3/2', be: 3 },\n  { element: 'Cd', orbital: '4d3/2', be: 9 },\n  { element: 'In', orbital: '4d3/2', be: 16 },\n  { element: 'Sn', orbital: '4d3/2', be: 24 },\n  { element: 'Sb', orbital: '4d3/2', be: 32 },\n  { element: 'Te', orbital: '4d3/2', be: 40 },\n  { element: 'I', orbital: '4d3/2', be: 50 },\n  { element: 'Xe', orbital: '4d3/2', be: 63 },\n  { element: 'Cs', orbital: '4d3/2', be: 79 },\n  { element: 'Ba', orbital: '4d3/2', be: 93 },\n  { element: 'La', orbital: '4d3/2', be: 99 },\n  { element: 'Ce', orbital: '4d3/2', be: 111 },\n  { element: 'Pr', orbital: '4d3/2', be: 114 },\n  { element: 'Nd', orbital: '4d3/2', be: 118 },\n  { element: 'Pm', orbital: '4d3/2', be: 121 },\n  { element: 'Sm', orbital: '4d3/2', be: 130 },\n  { element: 'Eu', orbital: '4d3/2', be: 134 },\n  { element: 'Gd', orbital: '4d3/2', be: 141 },\n  { element: 'Tb', orbital: '4d3/2', be: 148 },\n  { element: 'Dy', orbital: '4d3/2', be: 154 },\n  { element: 'Ho', orbital: '4d3/2', be: 161 },\n  { element: 'Er', orbital: '4d3/2', be: 177 },\n  { element: 'Tm', orbital: '4d3/2', be: 180 },\n  { element: 'Yb', orbital: '4d3/2', be: 197 },\n  { element: 'Lu', orbital: '4d3/2', be: 205 },\n  { element: 'Hf', orbital: '4d3/2', be: 224 },\n  { element: 'Ta', orbital: '4d3/2', be: 242 },\n  { element: 'W', orbital: '4d3/2', be: 259 },\n  { element: 'Re', orbital: '4d3/2', be: 274 },\n  { element: 'Os', orbital: '4d3/2', be: 290 },\n  { element: 'Ir', orbital: '4d3/2', be: 312 },\n  { element: 'Pt', orbital: '4d3/2', be: 331 },\n  { element: 'Au', orbital: '4d3/2', be: 352 },\n  { element: 'Hg', orbital: '4d3/2', be: 379 },\n  { element: 'Tl', orbital: '4d3/2', be: 407 },\n  { element: 'Pb', orbital: '4d3/2', be: 435 },\n  { element: 'Bi', orbital: '4d3/2', be: 464 },\n  { element: 'Po', orbital: '4d3/2', be: 500 },\n  { element: 'At', orbital: '4d3/2', be: 533 },\n  { element: 'Rn', orbital: '4d3/2', be: 567 },\n  { element: 'Fr', orbital: '4d3/2', be: 603 },\n  { element: 'Ra', orbital: '4d3/2', be: 636 },\n  { element: 'Ac', orbital: '4d3/2', be: 675 },\n  { element: 'Th', orbital: '4d3/2', be: 714 },\n  { element: 'U', orbital: '4d3/2', be: 781 },\n  { element: 'Y', orbital: '4d5/2', be: 3 },\n  { element: 'Zr', orbital: '4d5/2', be: 3 },\n  { element: 'Nb', orbital: '4d5/2', be: 4 },\n  { element: 'Mo', orbital: '4d5/2', be: 2 },\n  { element: 'Tc', orbital: '4d5/2', be: 2 },\n  { element: 'Ru', orbital: '4d5/2', be: 2 },\n  { element: 'Rh', orbital: '4d5/2', be: 3 },\n  { element: 'Pd', orbital: '4d5/2', be: 1 },\n  { element: 'Ag', orbital: '4d5/2', be: 3 },\n  { element: 'Cd', orbital: '4d5/2', be: 9 },\n  { element: 'In', orbital: '4d5/2', be: 16 },\n  { element: 'Sn', orbital: '4d5/2', be: 24 },\n  { element: 'Sb', orbital: '4d5/2', be: 32 },\n  { element: 'Te', orbital: '4d5/2', be: 40 },\n  { element: 'I', orbital: '4d5/2', be: 50 },\n  { element: 'Xe', orbital: '4d5/2', be: 63 },\n  { element: 'Cs', orbital: '4d5/2', be: 77 },\n  { element: 'Ba', orbital: '4d5/2', be: 90 },\n  { element: 'La', orbital: '4d5/2', be: 99 },\n  { element: 'Ce', orbital: '4d5/2', be: 111 },\n  { element: 'Pr', orbital: '4d5/2', be: 114 },\n  { element: 'Nd', orbital: '4d5/2', be: 118 },\n  { element: 'Pm', orbital: '4d5/2', be: 121 },\n  { element: 'Sm', orbital: '4d5/2', be: 130 },\n  { element: 'Eu', orbital: '4d5/2', be: 134 },\n  { element: 'Gd', orbital: '4d5/2', be: 141 },\n  { element: 'Tb', orbital: '4d5/2', be: 148 },\n  { element: 'Dy', orbital: '4d5/2', be: 154 },\n  { element: 'Ho', orbital: '4d5/2', be: 161 },\n  { element: 'Er', orbital: '4d5/2', be: 168 },\n  { element: 'Tm', orbital: '4d5/2', be: 180 },\n  { element: 'Yb', orbital: '4d5/2', be: 184 },\n  { element: 'Lu', orbital: '4d5/2', be: 195 },\n  { element: 'Hf', orbital: '4d5/2', be: 214 },\n  { element: 'Ta', orbital: '4d5/2', be: 230 },\n  { element: 'W', orbital: '4d5/2', be: 246 },\n  { element: 'Re', orbital: '4d5/2', be: 260 },\n  { element: 'Os', orbital: '4d5/2', be: 273 },\n  { element: 'Ir', orbital: '4d5/2', be: 295 },\n  { element: 'Pt', orbital: '4d5/2', be: 314 },\n  { element: 'Au', orbital: '4d5/2', be: 334 },\n  { element: 'Hg', orbital: '4d5/2', be: 360 },\n  { element: 'Tl', orbital: '4d5/2', be: 386 },\n  { element: 'Pb', orbital: '4d5/2', be: 413 },\n  { element: 'Bi', orbital: '4d5/2', be: 440 },\n  { element: 'Po', orbital: '4d5/2', be: 473 },\n  { element: 'At', orbital: '4d5/2', be: 507 },\n  { element: 'Rn', orbital: '4d5/2', be: 541 },\n  { element: 'Fr', orbital: '4d5/2', be: 577 },\n  { element: 'Ra', orbital: '4d5/2', be: 603 },\n  { element: 'Ac', orbital: '4d5/2', be: 639 },\n  { element: 'Th', orbital: '4d5/2', be: 677 },\n  { element: 'U', orbital: '4d5/2', be: 739 },\n  { element: 'Y', orbital: '4d', be: 3 },\n  { element: 'Zr', orbital: '4d', be: 3 },\n  { element: 'Nb', orbital: '4d', be: 4 },\n  { element: 'Mo', orbital: '4d', be: 2 },\n  { element: 'Tc', orbital: '4d', be: 2 },\n  { element: 'Ru', orbital: '4d', be: 2 },\n  { element: 'Rh', orbital: '4d', be: 3 },\n  { element: 'Pd', orbital: '4d', be: 1 },\n  { element: 'Ag', orbital: '4d', be: 3 },\n  { element: 'Cd', orbital: '4d', be: 9 },\n  { element: 'In', orbital: '4d', be: 16 },\n  { element: 'Sn', orbital: '4d', be: 24 },\n  { element: 'Sb', orbital: '4d', be: 32 },\n  { element: 'Te', orbital: '4d', be: 40 },\n  { element: 'I', orbital: '4d', be: 50 },\n  { element: 'Xe', orbital: '4d', be: 63 },\n  { element: 'Cs', orbital: '4d', be: 77 },\n  { element: 'Ba', orbital: '4d', be: 90 },\n  { element: 'La', orbital: '4d', be: 99 },\n  { element: 'Ce', orbital: '4d', be: 111 },\n  { element: 'Pr', orbital: '4d', be: 114 },\n  { element: 'Nd', orbital: '4d', be: 118 },\n  { element: 'Pm', orbital: '4d', be: 121 },\n  { element: 'Sm', orbital: '4d', be: 130 },\n  { element: 'Eu', orbital: '4d', be: 134 },\n  { element: 'Gd', orbital: '4d', be: 141 },\n  { element: 'Tb', orbital: '4d', be: 148 },\n  { element: 'Dy', orbital: '4d', be: 154 },\n  { element: 'Ho', orbital: '4d', be: 161 },\n  { element: 'Er', orbital: '4d', be: 168 },\n  { element: 'Tm', orbital: '4d', be: 180 },\n  { element: 'Yb', orbital: '4d', be: 184 },\n  { element: 'Lu', orbital: '4d', be: 195 },\n  { element: 'Hf', orbital: '4d', be: 214 },\n  { element: 'Ta', orbital: '4d', be: 230 },\n  { element: 'W', orbital: '4d', be: 246 },\n  { element: 'Re', orbital: '4d', be: 260 },\n  { element: 'Os', orbital: '4d', be: 273 },\n  { element: 'Ir', orbital: '4d', be: 295 },\n  { element: 'Pt', orbital: '4d', be: 314 },\n  { element: 'Au', orbital: '4d', be: 334 },\n  { element: 'Hg', orbital: '4d', be: 360 },\n  { element: 'Tl', orbital: '4d', be: 386 },\n  { element: 'Pb', orbital: '4d', be: 413 },\n  { element: 'Bi', orbital: '4d', be: 440 },\n  { element: 'Po', orbital: '4d', be: 473 },\n  { element: 'At', orbital: '4d', be: 507 },\n  { element: 'Rn', orbital: '4d', be: 541 },\n  { element: 'Fr', orbital: '4d', be: 577 },\n  { element: 'Ra', orbital: '4d', be: 603 },\n  { element: 'Ac', orbital: '4d', be: 639 },\n  { element: 'Th', orbital: '4d', be: 677 },\n  { element: 'U', orbital: '4d', be: 739 },\n  { element: 'Ce', orbital: '4f5/2', be: 1 },\n  { element: 'Pr', orbital: '4f5/2', be: 2 },\n  { element: 'Nd', orbital: '4f5/2', be: 2 },\n  { element: 'Pm', orbital: '4f5/2', be: 4 },\n  { element: 'Sm', orbital: '4f5/2', be: 7 },\n  { element: 'Tb', orbital: '4f5/2', be: 3 },\n  { element: 'Dy', orbital: '4f5/2', be: 4 },\n  { element: 'Ho', orbital: '4f5/2', be: 4 },\n  { element: 'Er', orbital: '4f5/2', be: 4 },\n  { element: 'Tm', orbital: '4f5/2', be: 5 },\n  { element: 'Yb', orbital: '4f5/2', be: 6 },\n  { element: 'Lu', orbital: '4f5/2', be: 7 },\n  { element: 'Hf', orbital: '4f5/2', be: 19 },\n  { element: 'Ta', orbital: '4f5/2', be: 27 },\n  { element: 'W', orbital: '4f5/2', be: 37 },\n  { element: 'Re', orbital: '4f5/2', be: 47 },\n  { element: 'Os', orbital: '4f5/2', be: 52 },\n  { element: 'Ir', orbital: '4f5/2', be: 63 },\n  { element: 'Pt', orbital: '4f5/2', be: 74 },\n  { element: 'Au', orbital: '4f5/2', be: 87 },\n  { element: 'Hg', orbital: '4f5/2', be: 103 },\n  { element: 'Tl', orbital: '4f5/2', be: 122 },\n  { element: 'Pb', orbital: '4f5/2', be: 143 },\n  { element: 'Bi', orbital: '4f5/2', be: 163 },\n  { element: 'Po', orbital: '4f5/2', be: 184 },\n  { element: 'At', orbital: '4f5/2', be: 210 },\n  { element: 'Rn', orbital: '4f5/2', be: 238 },\n  { element: 'Fr', orbital: '4f5/2', be: 268 },\n  { element: 'Ra', orbital: '4f5/2', be: 299 },\n  { element: 'Ac', orbital: '4f5/2', be: 319 },\n  { element: 'Th', orbital: '4f5/2', be: 344 },\n  { element: 'U', orbital: '4f5/2', be: 391 },\n  { element: 'Ce', orbital: '4f7/2', be: 1 },\n  { element: 'Pr', orbital: '4f7/2', be: 2 },\n  { element: 'Nd', orbital: '4f7/2', be: 2 },\n  { element: 'Pm', orbital: '4f7/2', be: 4 },\n  { element: 'Sm', orbital: '4f7/2', be: 7 },\n  { element: 'Tb', orbital: '4f7/2', be: 3 },\n  { element: 'Dy', orbital: '4f7/2', be: 4 },\n  { element: 'Ho', orbital: '4f7/2', be: 4 },\n  { element: 'Er', orbital: '4f7/2', be: 4 },\n  { element: 'Tm', orbital: '4f7/2', be: 5 },\n  { element: 'Yb', orbital: '4f7/2', be: 6 },\n  { element: 'Lu', orbital: '4f7/2', be: 7 },\n  { element: 'Hf', orbital: '4f7/2', be: 18 },\n  { element: 'Ta', orbital: '4f7/2', be: 25 },\n  { element: 'W', orbital: '4f7/2', be: 34 },\n  { element: 'Re', orbital: '4f7/2', be: 45 },\n  { element: 'Os', orbital: '4f7/2', be: 50 },\n  { element: 'Ir', orbital: '4f7/2', be: 60 },\n  { element: 'Pt', orbital: '4f7/2', be: 70 },\n  { element: 'Au', orbital: '4f7/2', be: 83 },\n  { element: 'Hg', orbital: '4f7/2', be: 99 },\n  { element: 'Tl', orbital: '4f7/2', be: 118 },\n  { element: 'Pb', orbital: '4f7/2', be: 138 },\n  { element: 'Bi', orbital: '4f7/2', be: 158 },\n  { element: 'Po', orbital: '4f7/2', be: 184 },\n  { element: 'At', orbital: '4f7/2', be: 210 },\n  { element: 'Rn', orbital: '4f7/2', be: 238 },\n  { element: 'Fr', orbital: '4f7/2', be: 268 },\n  { element: 'Ra', orbital: '4f7/2', be: 299 },\n  { element: 'Ac', orbital: '4f7/2', be: 319 },\n  { element: 'Th', orbital: '4f7/2', be: 335 },\n  { element: 'U', orbital: '4f7/2', be: 380 },\n  { element: 'Ce', orbital: '4f', be: 1 },\n  { element: 'Pr', orbital: '4f', be: 2 },\n  { element: 'Nd', orbital: '4f', be: 2 },\n  { element: 'Pm', orbital: '4f', be: 4 },\n  { element: 'Sm', orbital: '4f', be: 7 },\n  { element: 'Tb', orbital: '4f', be: 3 },\n  { element: 'Dy', orbital: '4f', be: 4 },\n  { element: 'Ho', orbital: '4f', be: 4 },\n  { element: 'Er', orbital: '4f', be: 4 },\n  { element: 'Tm', orbital: '4f', be: 5 },\n  { element: 'Yb', orbital: '4f', be: 6 },\n  { element: 'Lu', orbital: '4f', be: 7 },\n  { element: 'Hf', orbital: '4f', be: 18 },\n  { element: 'Ta', orbital: '4f', be: 25 },\n  { element: 'W', orbital: '4f', be: 34 },\n  { element: 'Re', orbital: '4f', be: 45 },\n  { element: 'Os', orbital: '4f', be: 50 },\n  { element: 'Ir', orbital: '4f', be: 60 },\n  { element: 'Pt', orbital: '4f', be: 70 },\n  { element: 'Au', orbital: '4f', be: 83 },\n  { element: 'Hg', orbital: '4f', be: 99 },\n  { element: 'Tl', orbital: '4f', be: 118 },\n  { element: 'Pb', orbital: '4f', be: 138 },\n  { element: 'Bi', orbital: '4f', be: 158 },\n  { element: 'Po', orbital: '4f', be: 184 },\n  { element: 'At', orbital: '4f', be: 210 },\n  { element: 'Rn', orbital: '4f', be: 238 },\n  { element: 'Fr', orbital: '4f', be: 268 },\n  { element: 'Ra', orbital: '4f', be: 299 },\n  { element: 'Ac', orbital: '4f', be: 319 },\n  { element: 'Th', orbital: '4f', be: 335 },\n  { element: 'U', orbital: '4f', be: 380 },\n  { element: 'Sn', orbital: '5s', be: 1 },\n  { element: 'Sb', orbital: '5s', be: 7 },\n  { element: 'Te', orbital: '5s', be: 12 },\n  { element: 'I', orbital: '5s', be: 14 },\n  { element: 'Xe', orbital: '5s', be: 18 },\n  { element: 'Cs', orbital: '5s', be: 23 },\n  { element: 'Ba', orbital: '5s', be: 40 },\n  { element: 'La', orbital: '5s', be: 33 },\n  { element: 'Ce', orbital: '5s', be: 38 },\n  { element: 'Pr', orbital: '5s', be: 38 },\n  { element: 'Nd', orbital: '5s', be: 38 },\n  { element: 'Pm', orbital: '5s', be: 38 },\n  { element: 'Sm', orbital: '5s', be: 39 },\n  { element: 'Eu', orbital: '5s', be: 32 },\n  { element: 'Gd', orbital: '5s', be: 36 },\n  { element: 'Tb', orbital: '5s', be: 40 },\n  { element: 'Dy', orbital: '5s', be: 63 },\n  { element: 'Ho', orbital: '5s', be: 51 },\n  { element: 'Er', orbital: '5s', be: 60 },\n  { element: 'Tm', orbital: '5s', be: 53 },\n  { element: 'Yb', orbital: '5s', be: 53 },\n  { element: 'Lu', orbital: '5s', be: 57 },\n  { element: 'Hf', orbital: '5s', be: 65 },\n  { element: 'Ta', orbital: '5s', be: 71 },\n  { element: 'W', orbital: '5s', be: 77 },\n  { element: 'Re', orbital: '5s', be: 83 },\n  { element: 'Os', orbital: '5s', be: 84 },\n  { element: 'Ir', orbital: '5s', be: 96 },\n  { element: 'Pt', orbital: '5s', be: 102 },\n  { element: 'Au', orbital: '5s', be: 108 },\n  { element: 'Hg', orbital: '5s', be: 120 },\n  { element: 'Tl', orbital: '5s', be: 137 },\n  { element: 'Pb', orbital: '5s', be: 148 },\n  { element: 'Bi', orbital: '5s', be: 160 },\n  { element: 'Po', orbital: '5s', be: 177 },\n  { element: 'At', orbital: '5s', be: 195 },\n  { element: 'Rn', orbital: '5s', be: 214 },\n  { element: 'Fr', orbital: '5s', be: 234 },\n  { element: 'Ra', orbital: '5s', be: 254 },\n  { element: 'Ac', orbital: '5s', be: 272 },\n  { element: 'Th', orbital: '5s', be: 290 },\n  { element: 'In', orbital: '5p1/2', be: 1 },\n  { element: 'Sn', orbital: '5p1/2', be: 1 },\n  { element: 'Sb', orbital: '5p1/2', be: 2 },\n  { element: 'Te', orbital: '5p1/2', be: 2 },\n  { element: 'I', orbital: '5p1/2', be: 3 },\n  { element: 'Xe', orbital: '5p1/2', be: 7 },\n  { element: 'Cs', orbital: '5p1/2', be: 13 },\n  { element: 'Ba', orbital: '5p1/2', be: 17 },\n  { element: 'La', orbital: '5p1/2', be: 15 },\n  { element: 'Ce', orbital: '5p1/2', be: 20 },\n  { element: 'Pr', orbital: '5p1/2', be: 23 },\n  { element: 'Nd', orbital: '5p1/2', be: 22 },\n  { element: 'Pm', orbital: '5p1/2', be: 22 },\n  { element: 'Sm', orbital: '5p1/2', be: 22 },\n  { element: 'Eu', orbital: '5p1/2', be: 22 },\n  { element: 'Gd', orbital: '5p1/2', be: 21 },\n  { element: 'Tb', orbital: '5p1/2', be: 26 },\n  { element: 'Dy', orbital: '5p1/2', be: 26 },\n  { element: 'Ho', orbital: '5p1/2', be: 20 },\n  { element: 'Er', orbital: '5p1/2', be: 29 },\n  { element: 'Tm', orbital: '5p1/2', be: 32 },\n  { element: 'Yb', orbital: '5p1/2', be: 23 },\n  { element: 'Lu', orbital: '5p1/2', be: 28 },\n  { element: 'Hf', orbital: '5p1/2', be: 38 },\n  { element: 'Ta', orbital: '5p1/2', be: 45 },\n  { element: 'W', orbital: '5p1/2', be: 47 },\n  { element: 'Re', orbital: '5p1/2', be: 46 },\n  { element: 'Os', orbital: '5p1/2', be: 58 },\n  { element: 'Ir', orbital: '5p1/2', be: 63 },\n  { element: 'Pt', orbital: '5p1/2', be: 66 },\n  { element: 'Au', orbital: '5p1/2', be: 72 },\n  { element: 'Hg', orbital: '5p1/2', be: 81 },\n  { element: 'Tl', orbital: '5p1/2', be: 100 },\n  { element: 'Pb', orbital: '5p1/2', be: 105 },\n  { element: 'Bi', orbital: '5p1/2', be: 117 },\n  { element: 'Po', orbital: '5p1/2', be: 132 },\n  { element: 'At', orbital: '5p1/2', be: 148 },\n  { element: 'Rn', orbital: '5p1/2', be: 164 },\n  { element: 'Fr', orbital: '5p1/2', be: 182 },\n  { element: 'Ra', orbital: '5p1/2', be: 200 },\n  { element: 'Ac', orbital: '5p1/2', be: 215 },\n  { element: 'Th', orbital: '5p1/2', be: 229 },\n  { element: 'In', orbital: '5p3/2', be: 1 },\n  { element: 'Sn', orbital: '5p3/2', be: 1 },\n  { element: 'Sb', orbital: '5p3/2', be: 2 },\n  { element: 'Te', orbital: '5p3/2', be: 2 },\n  { element: 'I', orbital: '5p3/2', be: 3 },\n  { element: 'Xe', orbital: '5p3/2', be: 7 },\n  { element: 'Cs', orbital: '5p3/2', be: 12 },\n  { element: 'Ba', orbital: '5p3/2', be: 15 },\n  { element: 'La', orbital: '5p3/2', be: 15 },\n  { element: 'Ce', orbital: '5p3/2', be: 20 },\n  { element: 'Pr', orbital: '5p3/2', be: 23 },\n  { element: 'Nd', orbital: '5p3/2', be: 22 },\n  { element: 'Pm', orbital: '5p3/2', be: 22 },\n  { element: 'Sm', orbital: '5p3/2', be: 22 },\n  { element: 'Eu', orbital: '5p3/2', be: 22 },\n  { element: 'Gd', orbital: '5p3/2', be: 21 },\n  { element: 'Tb', orbital: '5p3/2', be: 26 },\n  { element: 'Dy', orbital: '5p3/2', be: 26 },\n  { element: 'Ho', orbital: '5p3/2', be: 20 },\n  { element: 'Er', orbital: '5p3/2', be: 29 },\n  { element: 'Tm', orbital: '5p3/2', be: 32 },\n  { element: 'Yb', orbital: '5p3/2', be: 23 },\n  { element: 'Lu', orbital: '5p3/2', be: 28 },\n  { element: 'Hf', orbital: '5p3/2', be: 31 },\n  { element: 'Ta', orbital: '5p3/2', be: 37 },\n  { element: 'W', orbital: '5p3/2', be: 37 },\n  { element: 'Re', orbital: '5p3/2', be: 35 },\n  { element: 'Os', orbital: '5p3/2', be: 46 },\n  { element: 'Ir', orbital: '5p3/2', be: 51 },\n  { element: 'Pt', orbital: '5p3/2', be: 51 },\n  { element: 'Au', orbital: '5p3/2', be: 54 },\n  { element: 'Hg', orbital: '5p3/2', be: 58 },\n  { element: 'Tl', orbital: '5p3/2', be: 76 },\n  { element: 'Pb', orbital: '5p3/2', be: 86 },\n  { element: 'Bi', orbital: '5p3/2', be: 93 },\n  { element: 'Po', orbital: '5p3/2', be: 104 },\n  { element: 'At', orbital: '5p3/2', be: 115 },\n  { element: 'Rn', orbital: '5p3/2', be: 127 },\n  { element: 'Fr', orbital: '5p3/2', be: 140 },\n  { element: 'Ra', orbital: '5p3/2', be: 153 },\n  { element: 'Ac', orbital: '5p3/2', be: 167 },\n  { element: 'Th', orbital: '5p3/2', be: 182 },\n  { element: 'In', orbital: '5p', be: 1 },\n  { element: 'Sn', orbital: '5p', be: 1 },\n  { element: 'Sb', orbital: '5p', be: 2 },\n  { element: 'Te', orbital: '5p', be: 2 },\n  { element: 'I', orbital: '5p', be: 3 },\n  { element: 'Xe', orbital: '5p', be: 7 },\n  { element: 'Cs', orbital: '5p', be: 12 },\n  { element: 'Ba', orbital: '5p', be: 15 },\n  { element: 'La', orbital: '5p', be: 15 },\n  { element: 'Ce', orbital: '5p', be: 20 },\n  { element: 'Pr', orbital: '5p', be: 23 },\n  { element: 'Nd', orbital: '5p', be: 22 },\n  { element: 'Pm', orbital: '5p', be: 22 },\n  { element: 'Sm', orbital: '5p', be: 22 },\n  { element: 'Eu', orbital: '5p', be: 22 },\n  { element: 'Gd', orbital: '5p', be: 21 },\n  { element: 'Tb', orbital: '5p', be: 26 },\n  { element: 'Dy', orbital: '5p', be: 26 },\n  { element: 'Ho', orbital: '5p', be: 20 },\n  { element: 'Er', orbital: '5p', be: 29 },\n  { element: 'Tm', orbital: '5p', be: 32 },\n  { element: 'Yb', orbital: '5p', be: 23 },\n  { element: 'Lu', orbital: '5p', be: 28 },\n  { element: 'Hf', orbital: '5p', be: 31 },\n  { element: 'Ta', orbital: '5p', be: 37 },\n  { element: 'W', orbital: '5p', be: 37 },\n  { element: 'Re', orbital: '5p', be: 35 },\n  { element: 'Os', orbital: '5p', be: 46 },\n  { element: 'Ir', orbital: '5p', be: 51 },\n  { element: 'Pt', orbital: '5p', be: 51 },\n  { element: 'Au', orbital: '5p', be: 54 },\n  { element: 'Hg', orbital: '5p', be: 58 },\n  { element: 'Tl', orbital: '5p', be: 76 },\n  { element: 'Pb', orbital: '5p', be: 86 },\n  { element: 'Bi', orbital: '5p', be: 93 },\n  { element: 'Po', orbital: '5p', be: 104 },\n  { element: 'At', orbital: '5p', be: 115 },\n  { element: 'Rn', orbital: '5p', be: 127 },\n  { element: 'Fr', orbital: '5p', be: 140 },\n  { element: 'Ra', orbital: '5p', be: 153 },\n  { element: 'Ac', orbital: '5p', be: 167 },\n  { element: 'Th', orbital: '5p', be: 182 },\n  { element: 'Lu', orbital: '5d3/2', be: 5 },\n  { element: 'Hf', orbital: '5d3/2', be: 7 },\n  { element: 'Ta', orbital: '5d3/2', be: 6 },\n  { element: 'W', orbital: '5d3/2', be: 6 },\n  { element: 'Re', orbital: '5d3/2', be: 4 },\n  { element: 'Ir', orbital: '5d3/2', be: 4 },\n  { element: 'Pt', orbital: '5d3/2', be: 2 },\n  { element: 'Au', orbital: '5d3/2', be: 3 },\n  { element: 'Hg', orbital: '5d3/2', be: 7 },\n  { element: 'Tl', orbital: '5d3/2', be: 16 },\n  { element: 'Pb', orbital: '5d3/2', be: 22 },\n  { element: 'Bi', orbital: '5d3/2', be: 27 },\n  { element: 'Po', orbital: '5d3/2', be: 31 },\n  { element: 'At', orbital: '5d3/2', be: 40 },\n  { element: 'Rn', orbital: '5d3/2', be: 48 },\n  { element: 'Fr', orbital: '5d3/2', be: 58 },\n  { element: 'Ra', orbital: '5d3/2', be: 68 },\n  { element: 'Ac', orbital: '5d3/2', be: 80 },\n  { element: 'Th', orbital: '5d3/2', be: 95 },\n  { element: 'U', orbital: '5d3/2', be: 104 },\n  { element: 'Lu', orbital: '5d5/2', be: 5 },\n  { element: 'Hf', orbital: '5d5/2', be: 7 },\n  { element: 'Ta', orbital: '5d5/2', be: 6 },\n  { element: 'W', orbital: '5d5/2', be: 6 },\n  { element: 'Re', orbital: '5d5/2', be: 4 },\n  { element: 'Ir', orbital: '5d5/2', be: 4 },\n  { element: 'Pt', orbital: '5d5/2', be: 2 },\n  { element: 'Au', orbital: '5d5/2', be: 3 },\n  { element: 'Hg', orbital: '5d5/2', be: 7 },\n  { element: 'Tl', orbital: '5d5/2', be: 13 },\n  { element: 'Pb', orbital: '5d5/2', be: 20 },\n  { element: 'Bi', orbital: '5d5/2', be: 25 },\n  { element: 'Po', orbital: '5d5/2', be: 31 },\n  { element: 'At', orbital: '5d5/2', be: 40 },\n  { element: 'Rn', orbital: '5d5/2', be: 48 },\n  { element: 'Fr', orbital: '5d5/2', be: 58 },\n  { element: 'Ra', orbital: '5d5/2', be: 68 },\n  { element: 'Ac', orbital: '5d5/2', be: 80 },\n  { element: 'Th', orbital: '5d5/2', be: 88 },\n  { element: 'U', orbital: '5d5/2', be: 96 },\n  { element: 'Lu', orbital: '5d', be: 5 },\n  { element: 'Hf', orbital: '5d', be: 7 },\n  { element: 'Ta', orbital: '5d', be: 6 },\n  { element: 'W', orbital: '5d', be: 6 },\n  { element: 'Re', orbital: '5d', be: 4 },\n  { element: 'Ir', orbital: '5d', be: 4 },\n  { element: 'Pt', orbital: '5d', be: 2 },\n  { element: 'Au', orbital: '5d', be: 3 },\n  { element: 'Hg', orbital: '5d', be: 7 },\n  { element: 'Tl', orbital: '5d', be: 13 },\n  { element: 'Pb', orbital: '5d', be: 20 },\n  { element: 'Bi', orbital: '5d', be: 25 },\n  { element: 'Po', orbital: '5d', be: 31 },\n  { element: 'At', orbital: '5d', be: 40 },\n  { element: 'Rn', orbital: '5d', be: 48 },\n  { element: 'Fr', orbital: '5d', be: 58 },\n  { element: 'Ra', orbital: '5d', be: 68 },\n  { element: 'Ac', orbital: '5d', be: 80 },\n  { element: 'Th', orbital: '5d', be: 88 },\n  { element: 'U', orbital: '5d', be: 96 },\n  { element: 'Pb', orbital: '6s', be: 3 },\n  { element: 'Bi', orbital: '6s', be: 8 },\n  { element: 'Po', orbital: '6s', be: 12 },\n  { element: 'At', orbital: '6s', be: 18 },\n  { element: 'Rn', orbital: '6s', be: 26 },\n  { element: 'Fr', orbital: '6s', be: 34 },\n  { element: 'Ra', orbital: '6s', be: 44 },\n  { element: 'Th', orbital: '6s', be: 60 },\n  { element: 'Pb', orbital: '6p1/2', be: 1 },\n  { element: 'Bi', orbital: '6p1/2', be: 3 },\n  { element: 'Po', orbital: '6p1/2', be: 5 },\n  { element: 'At', orbital: '6p1/2', be: 8 },\n  { element: 'Rn', orbital: '6p1/2', be: 11 },\n  { element: 'Fr', orbital: '6p1/2', be: 15 },\n  { element: 'Ra', orbital: '6p1/2', be: 19 },\n  { element: 'Th', orbital: '6p1/2', be: 49 },\n  { element: 'U', orbital: '6p1/2', be: 28.9 },\n  { element: 'Pb', orbital: '6p3/2', be: 1 },\n  { element: 'Bi', orbital: '6p3/2', be: 3 },\n  { element: 'Po', orbital: '6p3/2', be: 5 },\n  { element: 'At', orbital: '6p3/2', be: 8 },\n  { element: 'Rn', orbital: '6p3/2', be: 11 },\n  { element: 'Fr', orbital: '6p3/2', be: 15 },\n  { element: 'Ra', orbital: '6p3/2', be: 19 },\n  { element: 'Th', orbital: '6p3/2', be: 43 },\n  { element: 'U', orbital: '6p3/2', be: 19 },\n  { element: 'Pb', orbital: '6p', be: 1 },\n  { element: 'Bi', orbital: '6p', be: 3 },\n  { element: 'Po', orbital: '6p', be: 5 },\n  { element: 'At', orbital: '6p', be: 8 },\n  { element: 'Rn', orbital: '6p', be: 11 },\n  { element: 'Fr', orbital: '6p', be: 15 },\n  { element: 'Ra', orbital: '6p', be: 19 },\n  { element: 'Th', orbital: '6p', be: 43 },\n  { element: 'U', orbital: '6p', be: 19 },\n  { element: 'H', orbital: '1s', be: 14 },\n  { element: 'He', orbital: '1s', be: 25 },\n  { element: 'Li', orbital: '1s', be: 55 },\n  { element: 'Be', orbital: '1s', be: 111 },\n  { element: 'B', orbital: '1s', be: 188 },\n  { element: 'C', orbital: '1s', be: 284 },\n  { element: 'N', orbital: '1s', be: 399 },\n  { element: 'O', orbital: '1s', be: 532 },\n  { element: 'F', orbital: '1s', be: 686 },\n  { element: 'Ne', orbital: '1s', be: 867 },\n  { element: 'Na', orbital: '1s', be: 1072 },\n  { element: 'O', orbital: '2s', be: 24 },\n  { element: 'F', orbital: '2s', be: 31 },\n  { element: 'Ne', orbital: '2s', be: 45 },\n  { element: 'Na', orbital: '2s', be: 63 },\n  { element: 'Mg', orbital: '2s', be: 89 },\n  { element: 'Al', orbital: '2s', be: 118 },\n  { element: 'Si', orbital: '2s', be: 149 },\n  { element: 'P', orbital: '2s', be: 189 },\n  { element: 'S', orbital: '2s', be: 229 },\n  { element: 'Cl', orbital: '2s', be: 270 },\n  { element: 'Ar', orbital: '2s', be: 320 },\n  { element: 'K', orbital: '2s', be: 377 },\n  { element: 'Ca', orbital: '2s', be: 438 },\n  { element: 'Sc', orbital: '2s', be: 500 },\n  { element: 'Ti', orbital: '2s', be: 564 },\n  { element: 'V', orbital: '2s', be: 628 },\n  { element: 'Cr', orbital: '2s', be: 695 },\n  { element: 'Mn', orbital: '2s', be: 769 },\n  { element: 'Fe', orbital: '2s', be: 846 },\n  { element: 'Co', orbital: '2s', be: 926 },\n  { element: 'Ni', orbital: '2s', be: 1008 },\n  { element: 'Cu', orbital: '2s', be: 1096 },\n  { element: 'Zn', orbital: '2s', be: 1194 },\n  { element: 'B', orbital: '2p1/2', be: 5 },\n  { element: 'C', orbital: '2p1/2', be: 7 },\n  { element: 'N', orbital: '2p1/2', be: 9 },\n  { element: 'O', orbital: '2p1/2', be: 7 },\n  { element: 'F', orbital: '2p1/2', be: 9 },\n  { element: 'Ne', orbital: '2p1/2', be: 18 },\n  { element: 'Na', orbital: '2p1/2', be: 31 },\n  { element: 'Mg', orbital: '2p1/2', be: 52 },\n  { element: 'Al', orbital: '2p1/2', be: 74 },\n  { element: 'Si', orbital: '2p1/2', be: 100 },\n  { element: 'P', orbital: '2p1/2', be: 136 },\n  { element: 'S', orbital: '2p1/2', be: 165 },\n  { element: 'Cl', orbital: '2p1/2', be: 202 },\n  { element: 'Ar', orbital: '2p1/2', be: 247 },\n  { element: 'K', orbital: '2p1/2', be: 297 },\n  { element: 'Ca', orbital: '2p1/2', be: 350 },\n  { element: 'Sc', orbital: '2p1/2', be: 407 },\n  { element: 'Ti', orbital: '2p1/2', be: 461 },\n  { element: 'V', orbital: '2p1/2', be: 520 },\n  { element: 'Cr', orbital: '2p1/2', be: 584 },\n  { element: 'Mn', orbital: '2p1/2', be: 652 },\n  { element: 'Fe', orbital: '2p1/2', be: 723 },\n  { element: 'Co', orbital: '2p1/2', be: 794 },\n  { element: 'Ni', orbital: '2p1/2', be: 872 },\n  { element: 'Cu', orbital: '2p1/2', be: 951 },\n  { element: 'Zn', orbital: '2p1/2', be: 1044 },\n  { element: 'Ga', orbital: '2p1/2', be: 1143 },\n  { element: 'B', orbital: '2p3/2', be: 5 },\n  { element: 'C', orbital: '2p3/2', be: 7 },\n  { element: 'N', orbital: '2p3/2', be: 9 },\n  { element: 'O', orbital: '2p3/2', be: 7 },\n  { element: 'F', orbital: '2p3/2', be: 9 },\n  { element: 'Ne', orbital: '2p3/2', be: 18 },\n  { element: 'Na', orbital: '2p3/2', be: 31 },\n  { element: 'Mg', orbital: '2p3/2', be: 52 },\n  { element: 'Al', orbital: '2p3/2', be: 73 },\n  { element: 'Si', orbital: '2p3/2', be: 99 },\n  { element: 'P', orbital: '2p3/2', be: 135 },\n  { element: 'S', orbital: '2p3/2', be: 164 },\n  { element: 'Cl', orbital: '2p3/2', be: 200 },\n  { element: 'Ar', orbital: '2p3/2', be: 245 },\n  { element: 'K', orbital: '2p3/2', be: 294 },\n  { element: 'Ca', orbital: '2p3/2', be: 347 },\n  { element: 'Sc', orbital: '2p3/2', be: 402 },\n  { element: 'Ti', orbital: '2p3/2', be: 455 },\n  { element: 'V', orbital: '2p3/2', be: 513 },\n  { element: 'Cr', orbital: '2p3/2', be: 575 },\n  { element: 'Mn', orbital: '2p3/2', be: 641 },\n  { element: 'Fe', orbital: '2p3/2', be: 710 },\n  { element: 'Co', orbital: '2p3/2', be: 779 },\n  { element: 'Ni', orbital: '2p3/2', be: 855 },\n  { element: 'Cu', orbital: '2p3/2', be: 931 },\n  { element: 'Zn', orbital: '2p3/2', be: 1021 },\n  { element: 'Ga', orbital: '2p3/2', be: 1116 },\n  { element: 'Ge', orbital: '2p3/2', be: 1217 },\n  { element: 'B', orbital: '2p', be: 5 },\n  { element: 'C', orbital: '2p', be: 7 },\n  { element: 'N', orbital: '2p', be: 9 },\n  { element: 'O', orbital: '2p', be: 7 },\n  { element: 'F', orbital: '2p', be: 9 },\n  { element: 'Ne', orbital: '2p', be: 18 },\n  { element: 'Na', orbital: '2p', be: 31 },\n  { element: 'Mg', orbital: '2p', be: 52 },\n  { element: 'Al', orbital: '2p', be: 73 },\n  { element: 'Si', orbital: '2p', be: 99 },\n  { element: 'P', orbital: '2p', be: 135 },\n  { element: 'S', orbital: '2p', be: 164 },\n  { element: 'Cl', orbital: '2p', be: 200 },\n  { element: 'Ar', orbital: '2p', be: 245 },\n  { element: 'K', orbital: '2p', be: 294 },\n  { element: 'Ca', orbital: '2p', be: 347 },\n  { element: 'Sc', orbital: '2p', be: 402 },\n  { element: 'Ti', orbital: '2p', be: 455 },\n  { element: 'V', orbital: '2p', be: 513 },\n  { element: 'Cr', orbital: '2p', be: 575 },\n  { element: 'Mn', orbital: '2p', be: 641 },\n  { element: 'Fe', orbital: '2p', be: 710 },\n  { element: 'Co', orbital: '2p', be: 779 },\n  { element: 'Ni', orbital: '2p', be: 855 },\n  { element: 'Cu', orbital: '2p', be: 931 },\n  { element: 'Zn', orbital: '2p', be: 1021 },\n  { element: 'Ga', orbital: '2p', be: 1116 },\n  { element: 'Ge', orbital: '2p', be: 1217 },\n  { element: 'Na', orbital: '3s', be: 1 },\n  { element: 'Mg', orbital: '3s', be: 2 },\n  { element: 'Al', orbital: '3s', be: 1 },\n  { element: 'Si', orbital: '3s', be: 8 },\n  { element: 'P', orbital: '3s', be: 16 },\n  { element: 'S', orbital: '3s', be: 16 },\n  { element: 'Cl', orbital: '3s', be: 18 },\n  { element: 'Ar', orbital: '3s', be: 25 },\n  { element: 'K', orbital: '3s', be: 34 },\n  { element: 'Ca', orbital: '3s', be: 44 },\n  { element: 'Sc', orbital: '3s', be: 54 },\n  { element: 'Ti', orbital: '3s', be: 59 },\n  { element: 'V', orbital: '3s', be: 66 },\n  { element: 'Cr', orbital: '3s', be: 74 },\n  { element: 'Mn', orbital: '3s', be: 84 },\n  { element: 'Fe', orbital: '3s', be: 95 },\n  { element: 'Co', orbital: '3s', be: 101 },\n  { element: 'Ni', orbital: '3s', be: 112 },\n  { element: 'Cu', orbital: '3s', be: 120 },\n  { element: 'Zn', orbital: '3s', be: 137 },\n  { element: 'Ga', orbital: '3s', be: 158 },\n  { element: 'Ge', orbital: '3s', be: 181 },\n  { element: 'As', orbital: '3s', be: 204 },\n  { element: 'Se', orbital: '3s', be: 232 },\n  { element: 'Br', orbital: '3s', be: 257 },\n  { element: 'Kr', orbital: '3s', be: 289 },\n  { element: 'Rb', orbital: '3s', be: 322 },\n  { element: 'Sr', orbital: '3s', be: 358 },\n  { element: 'Y', orbital: '3s', be: 395 },\n  { element: 'Zr', orbital: '3s', be: 431 },\n  { element: 'Nb', orbital: '3s', be: 469 },\n  { element: 'Mo', orbital: '3s', be: 505 },\n  { element: 'Tc', orbital: '3s', be: 544 },\n  { element: 'Ru', orbital: '3s', be: 585 },\n  { element: 'Rh', orbital: '3s', be: 627 },\n  { element: 'Pd', orbital: '3s', be: 670 },\n  { element: 'Ag', orbital: '3s', be: 717 },\n  { element: 'Cd', orbital: '3s', be: 770 },\n  { element: 'In', orbital: '3s', be: 826 },\n  { element: 'Sn', orbital: '3s', be: 884 },\n  { element: 'Sb', orbital: '3s', be: 944 },\n  { element: 'Te', orbital: '3s', be: 1006 },\n  { element: 'I', orbital: '3s', be: 1072 },\n  { element: 'Xe', orbital: '3s', be: 1145 },\n  { element: 'Cs', orbital: '3s', be: 1217 },\n  { element: 'Si', orbital: '3p1/2', be: 3 },\n  { element: 'P', orbital: '3p1/2', be: 10 },\n  { element: 'S', orbital: '3p1/2', be: 8 },\n  { element: 'Cl', orbital: '3p1/2', be: 7 },\n  { element: 'Ar', orbital: '3p1/2', be: 12 },\n  { element: 'K', orbital: '3p1/2', be: 18 },\n  { element: 'Ca', orbital: '3p1/2', be: 26 },\n  { element: 'Sc', orbital: '3p1/2', be: 32 },\n  { element: 'Ti', orbital: '3p1/2', be: 34 },\n  { element: 'V', orbital: '3p1/2', be: 38 },\n  { element: 'Cr', orbital: '3p1/2', be: 43 },\n  { element: 'Mn', orbital: '3p1/2', be: 49 },\n  { element: 'Fe', orbital: '3p1/2', be: 56 },\n  { element: 'Co', orbital: '3p1/2', be: 60 },\n  { element: 'Ni', orbital: '3p1/2', be: 68 },\n  { element: 'Cu', orbital: '3p1/2', be: 74 },\n  { element: 'Zn', orbital: '3p1/2', be: 87 },\n  { element: 'Ga', orbital: '3p1/2', be: 107 },\n  { element: 'Ge', orbital: '3p1/2', be: 129 },\n  { element: 'As', orbital: '3p1/2', be: 147 },\n  { element: 'Se', orbital: '3p1/2', be: 168 },\n  { element: 'Br', orbital: '3p1/2', be: 189 },\n  { element: 'Kr', orbital: '3p1/2', be: 223 },\n  { element: 'Rb', orbital: '3p1/2', be: 248 },\n  { element: 'Sr', orbital: '3p1/2', be: 280 },\n  { element: 'Y', orbital: '3p1/2', be: 313 },\n  { element: 'Zr', orbital: '3p1/2', be: 345 },\n  { element: 'Nb', orbital: '3p1/2', be: 379 },\n  { element: 'Mo', orbital: '3p1/2', be: 410 },\n  { element: 'Tc', orbital: '3p1/2', be: 445 },\n  { element: 'Ru', orbital: '3p1/2', be: 483 },\n  { element: 'Rh', orbital: '3p1/2', be: 521 },\n  { element: 'Pd', orbital: '3p1/2', be: 559 },\n  { element: 'Ag', orbital: '3p1/2', be: 602 },\n  { element: 'Cd', orbital: '3p1/2', be: 651 },\n  { element: 'In', orbital: '3p1/2', be: 702 },\n  { element: 'Sn', orbital: '3p1/2', be: 757 },\n  { element: 'Sb', orbital: '3p1/2', be: 812 },\n  { element: 'Te', orbital: '3p1/2', be: 870 },\n  { element: 'I', orbital: '3p1/2', be: 931 },\n  { element: 'Xe', orbital: '3p1/2', be: 999 },\n  { element: 'Cs', orbital: '3p1/2', be: 1065 },\n  { element: 'Ba', orbital: '3p1/2', be: 1137 },\n  { element: 'La', orbital: '3p1/2', be: 1205 },\n  { element: 'Si', orbital: '3p3/2', be: 3 },\n  { element: 'P', orbital: '3p3/2', be: 10 },\n  { element: 'S', orbital: '3p3/2', be: 8 },\n  { element: 'Cl', orbital: '3p3/2', be: 7 },\n  { element: 'Ar', orbital: '3p3/2', be: 12 },\n  { element: 'K', orbital: '3p3/2', be: 18 },\n  { element: 'Ca', orbital: '3p3/2', be: 26 },\n  { element: 'Sc', orbital: '3p3/2', be: 32 },\n  { element: 'Ti', orbital: '3p3/2', be: 34 },\n  { element: 'V', orbital: '3p3/2', be: 38 },\n  { element: 'Cr', orbital: '3p3/2', be: 43 },\n  { element: 'Mn', orbital: '3p3/2', be: 49 },\n  { element: 'Fe', orbital: '3p3/2', be: 56 },\n  { element: 'Co', orbital: '3p3/2', be: 60 },\n  { element: 'Ni', orbital: '3p3/2', be: 68 },\n  { element: 'Cu', orbital: '3p3/2', be: 74 },\n  { element: 'Zn', orbital: '3p3/2', be: 87 },\n  { element: 'Ga', orbital: '3p3/2', be: 103 },\n  { element: 'Ge', orbital: '3p3/2', be: 122 },\n  { element: 'As', orbital: '3p3/2', be: 141 },\n  { element: 'Se', orbital: '3p3/2', be: 162 },\n  { element: 'Br', orbital: '3p3/2', be: 182 },\n  { element: 'Kr', orbital: '3p3/2', be: 214 },\n  { element: 'Rb', orbital: '3p3/2', be: 239 },\n  { element: 'Sr', orbital: '3p3/2', be: 269 },\n  { element: 'Y', orbital: '3p3/2', be: 301 },\n  { element: 'Zr', orbital: '3p3/2', be: 331 },\n  { element: 'Nb', orbital: '3p3/2', be: 363 },\n  { element: 'Mo', orbital: '3p3/2', be: 393 },\n  { element: 'Tc', orbital: '3p3/2', be: 425 },\n  { element: 'Ru', orbital: '3p3/2', be: 461 },\n  { element: 'Rh', orbital: '3p3/2', be: 496 },\n  { element: 'Pd', orbital: '3p3/2', be: 531 },\n  { element: 'Ag', orbital: '3p3/2', be: 571 },\n  { element: 'Cd', orbital: '3p3/2', be: 617 },\n  { element: 'In', orbital: '3p3/2', be: 664 },\n  { element: 'Sn', orbital: '3p3/2', be: 715 },\n  { element: 'Sb', orbital: '3p3/2', be: 766 },\n  { element: 'Te', orbital: '3p3/2', be: 819 },\n  { element: 'I', orbital: '3p3/2', be: 875 },\n  { element: 'Xe', orbital: '3p3/2', be: 937 },\n  { element: 'Cs', orbital: '3p3/2', be: 998 },\n  { element: 'Ba', orbital: '3p3/2', be: 1063 },\n  { element: 'La', orbital: '3p3/2', be: 1124 },\n  { element: 'Ce', orbital: '3p3/2', be: 1186 },\n  { element: 'Pr', orbital: '3p3/2', be: 1243 },\n  { element: 'Si', orbital: '3p', be: 3 },\n  { element: 'P', orbital: '3p', be: 10 },\n  { element: 'S', orbital: '3p', be: 8 },\n  { element: 'Cl', orbital: '3p', be: 7 },\n  { element: 'Ar', orbital: '3p', be: 12 },\n  { element: 'K', orbital: '3p', be: 18 },\n  { element: 'Ca', orbital: '3p', be: 26 },\n  { element: 'Sc', orbital: '3p', be: 32 },\n  { element: 'Ti', orbital: '3p', be: 34 },\n  { element: 'V', orbital: '3p', be: 38 },\n  { element: 'Cr', orbital: '3p', be: 43 },\n  { element: 'Mn', orbital: '3p', be: 49 },\n  { element: 'Fe', orbital: '3p', be: 56 },\n  { element: 'Co', orbital: '3p', be: 60 },\n  { element: 'Ni', orbital: '3p', be: 68 },\n  { element: 'Cu', orbital: '3p', be: 74 },\n  { element: 'Zn', orbital: '3p', be: 87 },\n  { element: 'Ga', orbital: '3p', be: 103 },\n  { element: 'Ge', orbital: '3p', be: 122 },\n  { element: 'As', orbital: '3p', be: 141 },\n  { element: 'Se', orbital: '3p', be: 162 },\n  { element: 'Br', orbital: '3p', be: 182 },\n  { element: 'Kr', orbital: '3p', be: 214 },\n  { element: 'Rb', orbital: '3p', be: 239 },\n  { element: 'Sr', orbital: '3p', be: 269 },\n  { element: 'Y', orbital: '3p', be: 301 },\n  { element: 'Zr', orbital: '3p', be: 331 },\n  { element: 'Nb', orbital: '3p', be: 363 },\n  { element: 'Mo', orbital: '3p', be: 393 },\n  { element: 'Tc', orbital: '3p', be: 425 },\n  { element: 'Ru', orbital: '3p', be: 461 },\n  { element: 'Rh', orbital: '3p', be: 496 },\n  { element: 'Pd', orbital: '3p', be: 531 },\n  { element: 'Ag', orbital: '3p', be: 571 },\n  { element: 'Cd', orbital: '3p', be: 617 },\n  { element: 'In', orbital: '3p', be: 664 },\n  { element: 'Sn', orbital: '3p', be: 715 },\n  { element: 'Sb', orbital: '3p', be: 766 },\n  { element: 'Te', orbital: '3p', be: 819 },\n  { element: 'I', orbital: '3p', be: 875 },\n  { element: 'Xe', orbital: '3p', be: 937 },\n  { element: 'Cs', orbital: '3p', be: 998 },\n  { element: 'Ba', orbital: '3p', be: 1063 },\n  { element: 'La', orbital: '3p', be: 1124 },\n  { element: 'Ce', orbital: '3p', be: 1186 },\n  { element: 'Pr', orbital: '3p', be: 1243 },\n  { element: 'Sc', orbital: '3d3/2', be: 7 },\n  { element: 'Ti', orbital: '3d3/2', be: 3 },\n  { element: 'V', orbital: '3d3/2', be: 2 },\n  { element: 'Cr', orbital: '3d3/2', be: 2 },\n  { element: 'Mn', orbital: '3d3/2', be: 4 },\n  { element: 'Fe', orbital: '3d3/2', be: 6 },\n  { element: 'Co', orbital: '3d3/2', be: 3 },\n  { element: 'Ni', orbital: '3d3/2', be: 4 },\n  { element: 'Cu', orbital: '3d3/2', be: 2 },\n  { element: 'Zn', orbital: '3d3/2', be: 9 },\n  { element: 'Ga', orbital: '3d3/2', be: 18 },\n  { element: 'Ge', orbital: '3d3/2', be: 29 },\n  { element: 'As', orbital: '3d3/2', be: 41 },\n  { element: 'Se', orbital: '3d3/2', be: 57 },\n  { element: 'Br', orbital: '3d3/2', be: 70 },\n  { element: 'Kr', orbital: '3d3/2', be: 89 },\n  { element: 'Rb', orbital: '3d3/2', be: 112 },\n  { element: 'Sr', orbital: '3d3/2', be: 135 },\n  { element: 'Y', orbital: '3d3/2', be: 160 },\n  { element: 'Zr', orbital: '3d3/2', be: 183 },\n  { element: 'Nb', orbital: '3d3/2', be: 208 },\n  { element: 'Mo', orbital: '3d3/2', be: 230 },\n  { element: 'Tc', orbital: '3d3/2', be: 257 },\n  { element: 'Ru', orbital: '3d3/2', be: 284 },\n  { element: 'Rh', orbital: '3d3/2', be: 312 },\n  { element: 'Pd', orbital: '3d3/2', be: 340 },\n  { element: 'Ag', orbital: '3d3/2', be: 373 },\n  { element: 'Cd', orbital: '3d3/2', be: 411 },\n  { element: 'In', orbital: '3d3/2', be: 451 },\n  { element: 'Sn', orbital: '3d3/2', be: 494 },\n  { element: 'Sb', orbital: '3d3/2', be: 537 },\n  { element: 'Te', orbital: '3d3/2', be: 582 },\n  { element: 'I', orbital: '3d3/2', be: 631 },\n  { element: 'Xe', orbital: '3d3/2', be: 685 },\n  { element: 'Cs', orbital: '3d3/2', be: 740 },\n  { element: 'Ba', orbital: '3d3/2', be: 796 },\n  { element: 'La', orbital: '3d3/2', be: 849 },\n  { element: 'Ce', orbital: '3d3/2', be: 902 },\n  { element: 'Pr', orbital: '3d3/2', be: 951 },\n  { element: 'Nd', orbital: '3d3/2', be: 1000 },\n  { element: 'Pm', orbital: '3d3/2', be: 1052 },\n  { element: 'Sm', orbital: '3d3/2', be: 1107 },\n  { element: 'Eu', orbital: '3d3/2', be: 1161 },\n  { element: 'Gd', orbital: '3d3/2', be: 1218 },\n  { element: 'Sc', orbital: '3d5/2', be: 7 },\n  { element: 'Ti', orbital: '3d5/2', be: 3 },\n  { element: 'V', orbital: '3d5/2', be: 2 },\n  { element: 'Cr', orbital: '3d5/2', be: 2 },\n  { element: 'Mn', orbital: '3d5/2', be: 4 },\n  { element: 'Fe', orbital: '3d5/2', be: 6 },\n  { element: 'Co', orbital: '3d5/2', be: 3 },\n  { element: 'Ni', orbital: '3d5/2', be: 4 },\n  { element: 'Cu', orbital: '3d5/2', be: 2 },\n  { element: 'Zn', orbital: '3d5/2', be: 9 },\n  { element: 'Ga', orbital: '3d5/2', be: 18 },\n  { element: 'Ge', orbital: '3d5/2', be: 29 },\n  { element: 'As', orbital: '3d5/2', be: 41 },\n  { element: 'Se', orbital: '3d5/2', be: 57 },\n  { element: 'Br', orbital: '3d5/2', be: 69 },\n  { element: 'Kr', orbital: '3d5/2', be: 89 },\n  { element: 'Rb', orbital: '3d5/2', be: 111 },\n  { element: 'Sr', orbital: '3d5/2', be: 133 },\n  { element: 'Y', orbital: '3d5/2', be: 158 },\n  { element: 'Zr', orbital: '3d5/2', be: 180 },\n  { element: 'Nb', orbital: '3d5/2', be: 205 },\n  { element: 'Mo', orbital: '3d5/2', be: 227 },\n  { element: 'Tc', orbital: '3d5/2', be: 253 },\n  { element: 'Ru', orbital: '3d5/2', be: 279 },\n  { element: 'Rh', orbital: '3d5/2', be: 307 },\n  { element: 'Pd', orbital: '3d5/2', be: 335 },\n  { element: 'Ag', orbital: '3d5/2', be: 367 },\n  { element: 'Cd', orbital: '3d5/2', be: 404 },\n  { element: 'In', orbital: '3d5/2', be: 443 },\n  { element: 'Sn', orbital: '3d5/2', be: 485 },\n  { element: 'Sb', orbital: '3d5/2', be: 528 },\n  { element: 'Te', orbital: '3d5/2', be: 572 },\n  { element: 'I', orbital: '3d5/2', be: 620 },\n  { element: 'Xe', orbital: '3d5/2', be: 672 },\n  { element: 'Cs', orbital: '3d5/2', be: 726 },\n  { element: 'Ba', orbital: '3d5/2', be: 781 },\n  { element: 'La', orbital: '3d5/2', be: 832 },\n  { element: 'Ce', orbital: '3d5/2', be: 884 },\n  { element: 'Pr', orbital: '3d5/2', be: 931 },\n  { element: 'Nd', orbital: '3d5/2', be: 978 },\n  { element: 'Pm', orbital: '3d5/2', be: 1027 },\n  { element: 'Sm', orbital: '3d5/2', be: 1081 },\n  { element: 'Eu', orbital: '3d5/2', be: 1131 },\n  { element: 'Gd', orbital: '3d5/2', be: 1186 },\n  { element: 'Tb', orbital: '3d5/2', be: 1242 },\n  { element: 'Sc', orbital: '3d', be: 7 },\n  { element: 'Ti', orbital: '3d', be: 3 },\n  { element: 'V', orbital: '3d', be: 2 },\n  { element: 'Cr', orbital: '3d', be: 2 },\n  { element: 'Mn', orbital: '3d', be: 4 },\n  { element: 'Fe', orbital: '3d', be: 6 },\n  { element: 'Co', orbital: '3d', be: 3 },\n  { element: 'Ni', orbital: '3d', be: 4 },\n  { element: 'Cu', orbital: '3d', be: 2 },\n  { element: 'Zn', orbital: '3d', be: 9 },\n  { element: 'Ga', orbital: '3d', be: 18 },\n  { element: 'Ge', orbital: '3d', be: 29 },\n  { element: 'As', orbital: '3d', be: 41 },\n  { element: 'Se', orbital: '3d', be: 57 },\n  { element: 'Br', orbital: '3d', be: 69 },\n  { element: 'Kr', orbital: '3d', be: 89 },\n  { element: 'Rb', orbital: '3d', be: 111 },\n  { element: 'Sr', orbital: '3d', be: 133 },\n  { element: 'Y', orbital: '3d', be: 158 },\n  { element: 'Zr', orbital: '3d', be: 180 },\n  { element: 'Nb', orbital: '3d', be: 205 },\n  { element: 'Mo', orbital: '3d', be: 227 },\n  { element: 'Tc', orbital: '3d', be: 253 },\n  { element: 'Ru', orbital: '3d', be: 279 },\n  { element: 'Rh', orbital: '3d', be: 307 },\n  { element: 'Pd', orbital: '3d', be: 335 },\n  { element: 'Ag', orbital: '3d', be: 367 },\n  { element: 'Cd', orbital: '3d', be: 404 },\n  { element: 'In', orbital: '3d', be: 443 },\n  { element: 'Sn', orbital: '3d', be: 485 },\n  { element: 'Sb', orbital: '3d', be: 528 },\n  { element: 'Te', orbital: '3d', be: 572 },\n  { element: 'I', orbital: '3d', be: 620 },\n  { element: 'Xe', orbital: '3d', be: 672 },\n  { element: 'Cs', orbital: '3d', be: 726 },\n  { element: 'Ba', orbital: '3d', be: 781 },\n  { element: 'La', orbital: '3d', be: 832 },\n  { element: 'Ce', orbital: '3d', be: 884 },\n  { element: 'Pr', orbital: '3d', be: 931 },\n  { element: 'Nd', orbital: '3d', be: 978 },\n  { element: 'Pm', orbital: '3d', be: 1027 },\n  { element: 'Sm', orbital: '3d', be: 1081 },\n  { element: 'Eu', orbital: '3d', be: 1131 },\n  { element: 'Gd', orbital: '3d', be: 1186 },\n  { element: 'Tb', orbital: '3d', be: 1242 },\n  { element: 'Br', orbital: '4s', be: 27 },\n  { element: 'Kr', orbital: '4s', be: 24 },\n  { element: 'Rb', orbital: '4s', be: 30 },\n  { element: 'Sr', orbital: '4s', be: 38 },\n  { element: 'Y', orbital: '4s', be: 46 },\n  { element: 'Zr', orbital: '4s', be: 52 },\n  { element: 'Nb', orbital: '4s', be: 58 },\n  { element: 'Mo', orbital: '4s', be: 62 },\n  { element: 'Tc', orbital: '4s', be: 68 },\n  { element: 'Ru', orbital: '4s', be: 75 },\n  { element: 'Rh', orbital: '4s', be: 81 },\n  { element: 'Pd', orbital: '4s', be: 86 },\n  { element: 'Ag', orbital: '4s', be: 95 },\n  { element: 'Cd', orbital: '4s', be: 108 },\n  { element: 'In', orbital: '4s', be: 122 },\n  { element: 'Sn', orbital: '4s', be: 137 },\n  { element: 'Sb', orbital: '4s', be: 152 },\n  { element: 'Te', orbital: '4s', be: 168 },\n  { element: 'I', orbital: '4s', be: 186 },\n  { element: 'Xe', orbital: '4s', be: 208 },\n  { element: 'Cs', orbital: '4s', be: 231 },\n  { element: 'Ba', orbital: '4s', be: 253 },\n  { element: 'La', orbital: '4s', be: 271 },\n  { element: 'Ce', orbital: '4s', be: 290 },\n  { element: 'Pr', orbital: '4s', be: 305 },\n  { element: 'Nd', orbital: '4s', be: 316 },\n  { element: 'Pm', orbital: '4s', be: 331 },\n  { element: 'Sm', orbital: '4s', be: 347 },\n  { element: 'Eu', orbital: '4s', be: 360 },\n  { element: 'Gd', orbital: '4s', be: 376 },\n  { element: 'Tb', orbital: '4s', be: 398 },\n  { element: 'Dy', orbital: '4s', be: 416 },\n  { element: 'Ho', orbital: '4s', be: 436 },\n  { element: 'Er', orbital: '4s', be: 449 },\n  { element: 'Tm', orbital: '4s', be: 472 },\n  { element: 'Yb', orbital: '4s', be: 487 },\n  { element: 'Lu', orbital: '4s', be: 506 },\n  { element: 'Hf', orbital: '4s', be: 538 },\n  { element: 'Ta', orbital: '4s', be: 566 },\n  { element: 'W', orbital: '4s', be: 595 },\n  { element: 'Re', orbital: '4s', be: 625 },\n  { element: 'Os', orbital: '4s', be: 655 },\n  { element: 'Ir', orbital: '4s', be: 690 },\n  { element: 'Pt', orbital: '4s', be: 724 },\n  { element: 'Au', orbital: '4s', be: 759 },\n  { element: 'Hg', orbital: '4s', be: 800 },\n  { element: 'Tl', orbital: '4s', be: 846 },\n  { element: 'Pb', orbital: '4s', be: 894 },\n  { element: 'Bi', orbital: '4s', be: 939 },\n  { element: 'Po', orbital: '4s', be: 995 },\n  { element: 'At', orbital: '4s', be: 1042 },\n  { element: 'Rn', orbital: '4s', be: 1097 },\n  { element: 'Fr', orbital: '4s', be: 1153 },\n  { element: 'Ra', orbital: '4s', be: 1208 },\n  { element: 'Ga', orbital: '4p1/2', be: 1 },\n  { element: 'Ge', orbital: '4p1/2', be: 3 },\n  { element: 'As', orbital: '4p1/2', be: 3 },\n  { element: 'Se', orbital: '4p1/2', be: 6 },\n  { element: 'Br', orbital: '4p1/2', be: 5 },\n  { element: 'Kr', orbital: '4p1/2', be: 11 },\n  { element: 'Rb', orbital: '4p1/2', be: 15 },\n  { element: 'Sr', orbital: '4p1/2', be: 20 },\n  { element: 'Y', orbital: '4p1/2', be: 26 },\n  { element: 'Zr', orbital: '4p1/2', be: 29 },\n  { element: 'Nb', orbital: '4p1/2', be: 34 },\n  { element: 'Mo', orbital: '4p1/2', be: 35 },\n  { element: 'Tc', orbital: '4p1/2', be: 39 },\n  { element: 'Ru', orbital: '4p1/2', be: 43 },\n  { element: 'Rh', orbital: '4p1/2', be: 48 },\n  { element: 'Pd', orbital: '4p1/2', be: 51 },\n  { element: 'Ag', orbital: '4p1/2', be: 62 },\n  { element: 'Cd', orbital: '4p1/2', be: 67 },\n  { element: 'In', orbital: '4p1/2', be: 77 },\n  { element: 'Sn', orbital: '4p1/2', be: 89 },\n  { element: 'Sb', orbital: '4p1/2', be: 99 },\n  { element: 'Te', orbital: '4p1/2', be: 110 },\n  { element: 'I', orbital: '4p1/2', be: 123 },\n  { element: 'Xe', orbital: '4p1/2', be: 147 },\n  { element: 'Cs', orbital: '4p1/2', be: 172 },\n  { element: 'Ba', orbital: '4p1/2', be: 192 },\n  { element: 'La', orbital: '4p1/2', be: 206 },\n  { element: 'Ce', orbital: '4p1/2', be: 224 },\n  { element: 'Pr', orbital: '4p1/2', be: 237 },\n  { element: 'Nd', orbital: '4p1/2', be: 244 },\n  { element: 'Pm', orbital: '4p1/2', be: 255 },\n  { element: 'Sm', orbital: '4p1/2', be: 267 },\n  { element: 'Eu', orbital: '4p1/2', be: 284 },\n  { element: 'Gd', orbital: '4p1/2', be: 289 },\n  { element: 'Tb', orbital: '4p1/2', be: 311 },\n  { element: 'Dy', orbital: '4p1/2', be: 332 },\n  { element: 'Ho', orbital: '4p1/2', be: 343 },\n  { element: 'Er', orbital: '4p1/2', be: 366 },\n  { element: 'Tm', orbital: '4p1/2', be: 386 },\n  { element: 'Yb', orbital: '4p1/2', be: 396 },\n  { element: 'Lu', orbital: '4p1/2', be: 410 },\n  { element: 'Hf', orbital: '4p1/2', be: 437 },\n  { element: 'Ta', orbital: '4p1/2', be: 465 },\n  { element: 'W', orbital: '4p1/2', be: 492 },\n  { element: 'Re', orbital: '4p1/2', be: 518 },\n  { element: 'Os', orbital: '4p1/2', be: 547 },\n  { element: 'Ir', orbital: '4p1/2', be: 577 },\n  { element: 'Pt', orbital: '4p1/2', be: 608 },\n  { element: 'Au', orbital: '4p1/2', be: 644 },\n  { element: 'Hg', orbital: '4p1/2', be: 677 },\n  { element: 'Tl', orbital: '4p1/2', be: 722 },\n  { element: 'Pb', orbital: '4p1/2', be: 764 },\n  { element: 'Bi', orbital: '4p1/2', be: 806 },\n  { element: 'Po', orbital: '4p1/2', be: 851 },\n  { element: 'At', orbital: '4p1/2', be: 886 },\n  { element: 'Rn', orbital: '4p1/2', be: 929 },\n  { element: 'Fr', orbital: '4p1/2', be: 980 },\n  { element: 'Ra', orbital: '4p1/2', be: 1058 },\n  { element: 'Ac', orbital: '4p1/2', be: 1080 },\n  { element: 'Th', orbital: '4p1/2', be: 1168 },\n  { element: 'Ga', orbital: '4p3/2', be: 1 },\n  { element: 'Ge', orbital: '4p3/2', be: 3 },\n  { element: 'As', orbital: '4p3/2', be: 3 },\n  { element: 'Se', orbital: '4p3/2', be: 6 },\n  { element: 'Br', orbital: '4p3/2', be: 5 },\n  { element: 'Kr', orbital: '4p3/2', be: 11 },\n  { element: 'Rb', orbital: '4p3/2', be: 14 },\n  { element: 'Sr', orbital: '4p3/2', be: 20 },\n  { element: 'Y', orbital: '4p3/2', be: 26 },\n  { element: 'Zr', orbital: '4p3/2', be: 29 },\n  { element: 'Nb', orbital: '4p3/2', be: 34 },\n  { element: 'Mo', orbital: '4p3/2', be: 35 },\n  { element: 'Tc', orbital: '4p3/2', be: 39 },\n  { element: 'Ru', orbital: '4p3/2', be: 43 },\n  { element: 'Rh', orbital: '4p3/2', be: 48 },\n  { element: 'Pd', orbital: '4p3/2', be: 56 },\n  { element: 'Ag', orbital: '4p3/2', be: 56 },\n  { element: 'Cd', orbital: '4p3/2', be: 67 },\n  { element: 'In', orbital: '4p3/2', be: 77 },\n  { element: 'Sn', orbital: '4p3/2', be: 89 },\n  { element: 'Sb', orbital: '4p3/2', be: 99 },\n  { element: 'Te', orbital: '4p3/2', be: 110 },\n  { element: 'I', orbital: '4p3/2', be: 123 },\n  { element: 'Xe', orbital: '4p3/2', be: 147 },\n  { element: 'Cs', orbital: '4p3/2', be: 162 },\n  { element: 'Ba', orbital: '4p3/2', be: 180 },\n  { element: 'La', orbital: '4p3/2', be: 192 },\n  { element: 'Ce', orbital: '4p3/2', be: 208 },\n  { element: 'Pr', orbital: '4p3/2', be: 218 },\n  { element: 'Nd', orbital: '4p3/2', be: 225 },\n  { element: 'Pm', orbital: '4p3/2', be: 237 },\n  { element: 'Sm', orbital: '4p3/2', be: 249 },\n  { element: 'Eu', orbital: '4p3/2', be: 257 },\n  { element: 'Gd', orbital: '4p3/2', be: 271 },\n  { element: 'Tb', orbital: '4p3/2', be: 286 },\n  { element: 'Dy', orbital: '4p3/2', be: 293 },\n  { element: 'Ho', orbital: '4p3/2', be: 306 },\n  { element: 'Er', orbital: '4p3/2', be: 320 },\n  { element: 'Tm', orbital: '4p3/2', be: 337 },\n  { element: 'Yb', orbital: '4p3/2', be: 343 },\n  { element: 'Lu', orbital: '4p3/2', be: 359 },\n  { element: 'Hf', orbital: '4p3/2', be: 380 },\n  { element: 'Ta', orbital: '4p3/2', be: 405 },\n  { element: 'W', orbital: '4p3/2', be: 426 },\n  { element: 'Re', orbital: '4p3/2', be: 445 },\n  { element: 'Os', orbital: '4p3/2', be: 469 },\n  { element: 'Ir', orbital: '4p3/2', be: 495 },\n  { element: 'Pt', orbital: '4p3/2', be: 519 },\n  { element: 'Au', orbital: '4p3/2', be: 546 },\n  { element: 'Hg', orbital: '4p3/2', be: 571 },\n  { element: 'Tl', orbital: '4p3/2', be: 609 },\n  { element: 'Pb', orbital: '4p3/2', be: 645 },\n  { element: 'Bi', orbital: '4p3/2', be: 679 },\n  { element: 'Po', orbital: '4p3/2', be: 705 },\n  { element: 'At', orbital: '4p3/2', be: 740 },\n  { element: 'Rn', orbital: '4p3/2', be: 768 },\n  { element: 'Fr', orbital: '4p3/2', be: 810 },\n  { element: 'Ra', orbital: '4p3/2', be: 879 },\n  { element: 'Ac', orbital: '4p3/2', be: 890 },\n  { element: 'Th', orbital: '4p3/2', be: 968 },\n  { element: 'Ga', orbital: '4p', be: 1 },\n  { element: 'Ge', orbital: '4p', be: 3 },\n  { element: 'As', orbital: '4p', be: 3 },\n  { element: 'Se', orbital: '4p', be: 6 },\n  { element: 'Br', orbital: '4p', be: 5 },\n  { element: 'Kr', orbital: '4p', be: 11 },\n  { element: 'Rb', orbital: '4p', be: 14 },\n  { element: 'Sr', orbital: '4p', be: 20 },\n  { element: 'Y', orbital: '4p', be: 26 },\n  { element: 'Zr', orbital: '4p', be: 29 },\n  { element: 'Nb', orbital: '4p', be: 34 },\n  { element: 'Mo', orbital: '4p', be: 35 },\n  { element: 'Tc', orbital: '4p', be: 39 },\n  { element: 'Ru', orbital: '4p', be: 43 },\n  { element: 'Rh', orbital: '4p', be: 48 },\n  { element: 'Pd', orbital: '4p', be: 56 },\n  { element: 'Ag', orbital: '4p', be: 56 },\n  { element: 'Cd', orbital: '4p', be: 67 },\n  { element: 'In', orbital: '4p', be: 77 },\n  { element: 'Sn', orbital: '4p', be: 89 },\n  { element: 'Sb', orbital: '4p', be: 99 },\n  { element: 'Te', orbital: '4p', be: 110 },\n  { element: 'I', orbital: '4p', be: 123 },\n  { element: 'Xe', orbital: '4p', be: 147 },\n  { element: 'Cs', orbital: '4p', be: 162 },\n  { element: 'Ba', orbital: '4p', be: 180 },\n  { element: 'La', orbital: '4p', be: 192 },\n  { element: 'Ce', orbital: '4p', be: 208 },\n  { element: 'Pr', orbital: '4p', be: 218 },\n  { element: 'Nd', orbital: '4p', be: 225 },\n  { element: 'Pm', orbital: '4p', be: 237 },\n  { element: 'Sm', orbital: '4p', be: 249 },\n  { element: 'Eu', orbital: '4p', be: 257 },\n  { element: 'Gd', orbital: '4p', be: 271 },\n  { element: 'Tb', orbital: '4p', be: 286 },\n  { element: 'Dy', orbital: '4p', be: 293 },\n  { element: 'Ho', orbital: '4p', be: 306 },\n  { element: 'Er', orbital: '4p', be: 320 },\n  { element: 'Tm', orbital: '4p', be: 337 },\n  { element: 'Yb', orbital: '4p', be: 343 },\n  { element: 'Lu', orbital: '4p', be: 359 },\n  { element: 'Hf', orbital: '4p', be: 380 },\n  { element: 'Ta', orbital: '4p', be: 405 },\n  { element: 'W', orbital: '4p', be: 426 },\n  { element: 'Re', orbital: '4p', be: 445 },\n  { element: 'Os', orbital: '4p', be: 469 },\n  { element: 'Ir', orbital: '4p', be: 495 },\n  { element: 'Pt', orbital: '4p', be: 519 },\n  { element: 'Au', orbital: '4p', be: 546 },\n  { element: 'Hg', orbital: '4p', be: 571 },\n  { element: 'Tl', orbital: '4p', be: 609 },\n  { element: 'Pb', orbital: '4p', be: 645 },\n  { element: 'Bi', orbital: '4p', be: 679 },\n  { element: 'Po', orbital: '4p', be: 705 },\n  { element: 'At', orbital: '4p', be: 740 },\n  { element: 'Rn', orbital: '4p', be: 768 },\n  { element: 'Fr', orbital: '4p', be: 810 },\n  { element: 'Ra', orbital: '4p', be: 879 },\n  { element: 'Ac', orbital: '4p', be: 890 },\n  { element: 'Th', orbital: '4p', be: 968 },\n  { element: 'Y', orbital: '4d3/2', be: 3 },\n  { element: 'Zr', orbital: '4d3/2', be: 3 },\n  { element: 'Nb', orbital: '4d3/2', be: 4 },\n  { element: 'Mo', orbital: '4d3/2', be: 2 },\n  { element: 'Tc', orbital: '4d3/2', be: 2 },\n  { element: 'Ru', orbital: '4d3/2', be: 2 },\n  { element: 'Rh', orbital: '4d3/2', be: 3 },\n  { element: 'Pd', orbital: '4d3/2', be: 1 },\n  { element: 'Ag', orbital: '4d3/2', be: 3 },\n  { element: 'Cd', orbital: '4d3/2', be: 9 },\n  { element: 'In', orbital: '4d3/2', be: 16 },\n  { element: 'Sn', orbital: '4d3/2', be: 24 },\n  { element: 'Sb', orbital: '4d3/2', be: 32 },\n  { element: 'Te', orbital: '4d3/2', be: 40 },\n  { element: 'I', orbital: '4d3/2', be: 50 },\n  { element: 'Xe', orbital: '4d3/2', be: 63 },\n  { element: 'Cs', orbital: '4d3/2', be: 79 },\n  { element: 'Ba', orbital: '4d3/2', be: 93 },\n  { element: 'La', orbital: '4d3/2', be: 99 },\n  { element: 'Ce', orbital: '4d3/2', be: 111 },\n  { element: 'Pr', orbital: '4d3/2', be: 114 },\n  { element: 'Nd', orbital: '4d3/2', be: 118 },\n  { element: 'Pm', orbital: '4d3/2', be: 121 },\n  { element: 'Sm', orbital: '4d3/2', be: 130 },\n  { element: 'Eu', orbital: '4d3/2', be: 134 },\n  { element: 'Gd', orbital: '4d3/2', be: 141 },\n  { element: 'Tb', orbital: '4d3/2', be: 148 },\n  { element: 'Dy', orbital: '4d3/2', be: 154 },\n  { element: 'Ho', orbital: '4d3/2', be: 161 },\n  { element: 'Er', orbital: '4d3/2', be: 177 },\n  { element: 'Tm', orbital: '4d3/2', be: 180 },\n  { element: 'Yb', orbital: '4d3/2', be: 197 },\n  { element: 'Lu', orbital: '4d3/2', be: 205 },\n  { element: 'Hf', orbital: '4d3/2', be: 224 },\n  { element: 'Ta', orbital: '4d3/2', be: 242 },\n  { element: 'W', orbital: '4d3/2', be: 259 },\n  { element: 'Re', orbital: '4d3/2', be: 274 },\n  { element: 'Os', orbital: '4d3/2', be: 290 },\n  { element: 'Ir', orbital: '4d3/2', be: 312 },\n  { element: 'Pt', orbital: '4d3/2', be: 331 },\n  { element: 'Au', orbital: '4d3/2', be: 352 },\n  { element: 'Hg', orbital: '4d3/2', be: 379 },\n  { element: 'Tl', orbital: '4d3/2', be: 407 },\n  { element: 'Pb', orbital: '4d3/2', be: 435 },\n  { element: 'Bi', orbital: '4d3/2', be: 464 },\n  { element: 'Po', orbital: '4d3/2', be: 500 },\n  { element: 'At', orbital: '4d3/2', be: 533 },\n  { element: 'Rn', orbital: '4d3/2', be: 567 },\n  { element: 'Fr', orbital: '4d3/2', be: 603 },\n  { element: 'Ra', orbital: '4d3/2', be: 636 },\n  { element: 'Ac', orbital: '4d3/2', be: 675 },\n  { element: 'Th', orbital: '4d3/2', be: 714 },\n  { element: 'U', orbital: '4d3/2', be: 781 },\n  { element: 'Y', orbital: '4d5/2', be: 3 },\n  { element: 'Zr', orbital: '4d5/2', be: 3 },\n  { element: 'Nb', orbital: '4d5/2', be: 4 },\n  { element: 'Mo', orbital: '4d5/2', be: 2 },\n  { element: 'Tc', orbital: '4d5/2', be: 2 },\n  { element: 'Ru', orbital: '4d5/2', be: 2 },\n  { element: 'Rh', orbital: '4d5/2', be: 3 },\n  { element: 'Pd', orbital: '4d5/2', be: 1 },\n  { element: 'Ag', orbital: '4d5/2', be: 3 },\n  { element: 'Cd', orbital: '4d5/2', be: 9 },\n  { element: 'In', orbital: '4d5/2', be: 16 },\n  { element: 'Sn', orbital: '4d5/2', be: 24 },\n  { element: 'Sb', orbital: '4d5/2', be: 32 },\n  { element: 'Te', orbital: '4d5/2', be: 40 },\n  { element: 'I', orbital: '4d5/2', be: 50 },\n  { element: 'Xe', orbital: '4d5/2', be: 63 },\n  { element: 'Cs', orbital: '4d5/2', be: 77 },\n  { element: 'Ba', orbital: '4d5/2', be: 90 },\n  { element: 'La', orbital: '4d5/2', be: 99 },\n  { element: 'Ce', orbital: '4d5/2', be: 111 },\n  { element: 'Pr', orbital: '4d5/2', be: 114 },\n  { element: 'Nd', orbital: '4d5/2', be: 118 },\n  { element: 'Pm', orbital: '4d5/2', be: 121 },\n  { element: 'Sm', orbital: '4d5/2', be: 130 },\n  { element: 'Eu', orbital: '4d5/2', be: 134 },\n  { element: 'Gd', orbital: '4d5/2', be: 141 },\n  { element: 'Tb', orbital: '4d5/2', be: 148 },\n  { element: 'Dy', orbital: '4d5/2', be: 154 },\n  { element: 'Ho', orbital: '4d5/2', be: 161 },\n  { element: 'Er', orbital: '4d5/2', be: 168 },\n  { element: 'Tm', orbital: '4d5/2', be: 180 },\n  { element: 'Yb', orbital: '4d5/2', be: 184 },\n  { element: 'Lu', orbital: '4d5/2', be: 195 },\n  { element: 'Hf', orbital: '4d5/2', be: 214 },\n  { element: 'Ta', orbital: '4d5/2', be: 230 },\n  { element: 'W', orbital: '4d5/2', be: 246 },\n  { element: 'Re', orbital: '4d5/2', be: 260 },\n  { element: 'Os', orbital: '4d5/2', be: 273 },\n  { element: 'Ir', orbital: '4d5/2', be: 295 },\n  { element: 'Pt', orbital: '4d5/2', be: 314 },\n  { element: 'Au', orbital: '4d5/2', be: 334 },\n  { element: 'Hg', orbital: '4d5/2', be: 360 },\n  { element: 'Tl', orbital: '4d5/2', be: 386 },\n  { element: 'Pb', orbital: '4d5/2', be: 413 },\n  { element: 'Bi', orbital: '4d5/2', be: 440 },\n  { element: 'Po', orbital: '4d5/2', be: 473 },\n  { element: 'At', orbital: '4d5/2', be: 507 },\n  { element: 'Rn', orbital: '4d5/2', be: 541 },\n  { element: 'Fr', orbital: '4d5/2', be: 577 },\n  { element: 'Ra', orbital: '4d5/2', be: 603 },\n  { element: 'Ac', orbital: '4d5/2', be: 639 },\n  { element: 'Th', orbital: '4d5/2', be: 677 },\n  { element: 'U', orbital: '4d5/2', be: 739 },\n  { element: 'Y', orbital: '4d', be: 3 },\n  { element: 'Zr', orbital: '4d', be: 3 },\n  { element: 'Nb', orbital: '4d', be: 4 },\n  { element: 'Mo', orbital: '4d', be: 2 },\n  { element: 'Tc', orbital: '4d', be: 2 },\n  { element: 'Ru', orbital: '4d', be: 2 },\n  { element: 'Rh', orbital: '4d', be: 3 },\n  { element: 'Pd', orbital: '4d', be: 1 },\n  { element: 'Ag', orbital: '4d', be: 3 },\n  { element: 'Cd', orbital: '4d', be: 9 },\n  { element: 'In', orbital: '4d', be: 16 },\n  { element: 'Sn', orbital: '4d', be: 24 },\n  { element: 'Sb', orbital: '4d', be: 32 },\n  { element: 'Te', orbital: '4d', be: 40 },\n  { element: 'I', orbital: '4d', be: 50 },\n  { element: 'Xe', orbital: '4d', be: 63 },\n  { element: 'Cs', orbital: '4d', be: 77 },\n  { element: 'Ba', orbital: '4d', be: 90 },\n  { element: 'La', orbital: '4d', be: 99 },\n  { element: 'Ce', orbital: '4d', be: 111 },\n  { element: 'Pr', orbital: '4d', be: 114 },\n  { element: 'Nd', orbital: '4d', be: 118 },\n  { element: 'Pm', orbital: '4d', be: 121 },\n  { element: 'Sm', orbital: '4d', be: 130 },\n  { element: 'Eu', orbital: '4d', be: 134 },\n  { element: 'Gd', orbital: '4d', be: 141 },\n  { element: 'Tb', orbital: '4d', be: 148 },\n  { element: 'Dy', orbital: '4d', be: 154 },\n  { element: 'Ho', orbital: '4d', be: 161 },\n  { element: 'Er', orbital: '4d', be: 168 },\n  { element: 'Tm', orbital: '4d', be: 180 },\n  { element: 'Yb', orbital: '4d', be: 184 },\n  { element: 'Lu', orbital: '4d', be: 195 },\n  { element: 'Hf', orbital: '4d', be: 214 },\n  { element: 'Ta', orbital: '4d', be: 230 },\n  { element: 'W', orbital: '4d', be: 246 },\n  { element: 'Re', orbital: '4d', be: 260 },\n  { element: 'Os', orbital: '4d', be: 273 },\n  { element: 'Ir', orbital: '4d', be: 295 },\n  { element: 'Pt', orbital: '4d', be: 314 },\n  { element: 'Au', orbital: '4d', be: 334 },\n  { element: 'Hg', orbital: '4d', be: 360 },\n  { element: 'Tl', orbital: '4d', be: 386 },\n  { element: 'Pb', orbital: '4d', be: 413 },\n  { element: 'Bi', orbital: '4d', be: 440 },\n  { element: 'Po', orbital: '4d', be: 473 },\n  { element: 'At', orbital: '4d', be: 507 },\n  { element: 'Rn', orbital: '4d', be: 541 },\n  { element: 'Fr', orbital: '4d', be: 577 },\n  { element: 'Ra', orbital: '4d', be: 603 },\n  { element: 'Ac', orbital: '4d', be: 639 },\n  { element: 'Th', orbital: '4d', be: 677 },\n  { element: 'U', orbital: '4d', be: 739 },\n  { element: 'Ce', orbital: '4f5/2', be: 1 },\n  { element: 'Pr', orbital: '4f5/2', be: 2 },\n  { element: 'Nd', orbital: '4f5/2', be: 2 },\n  { element: 'Pm', orbital: '4f5/2', be: 4 },\n  { element: 'Sm', orbital: '4f5/2', be: 7 },\n  { element: 'Tb', orbital: '4f5/2', be: 3 },\n  { element: 'Dy', orbital: '4f5/2', be: 4 },\n  { element: 'Ho', orbital: '4f5/2', be: 4 },\n  { element: 'Er', orbital: '4f5/2', be: 4 },\n  { element: 'Tm', orbital: '4f5/2', be: 5 },\n  { element: 'Yb', orbital: '4f5/2', be: 6 },\n  { element: 'Lu', orbital: '4f5/2', be: 7 },\n  { element: 'Hf', orbital: '4f5/2', be: 19 },\n  { element: 'Ta', orbital: '4f5/2', be: 27 },\n  { element: 'W', orbital: '4f5/2', be: 37 },\n  { element: 'Re', orbital: '4f5/2', be: 47 },\n  { element: 'Os', orbital: '4f5/2', be: 52 },\n  { element: 'Ir', orbital: '4f5/2', be: 63 },\n  { element: 'Pt', orbital: '4f5/2', be: 74 },\n  { element: 'Au', orbital: '4f5/2', be: 87 },\n  { element: 'Hg', orbital: '4f5/2', be: 103 },\n  { element: 'Tl', orbital: '4f5/2', be: 122 },\n  { element: 'Pb', orbital: '4f5/2', be: 143 },\n  { element: 'Bi', orbital: '4f5/2', be: 163 },\n  { element: 'Po', orbital: '4f5/2', be: 184 },\n  { element: 'At', orbital: '4f5/2', be: 210 },\n  { element: 'Rn', orbital: '4f5/2', be: 238 },\n  { element: 'Fr', orbital: '4f5/2', be: 268 },\n  { element: 'Ra', orbital: '4f5/2', be: 299 },\n  { element: 'Ac', orbital: '4f5/2', be: 319 },\n  { element: 'Th', orbital: '4f5/2', be: 344 },\n  { element: 'U', orbital: '4f5/2', be: 391 },\n  { element: 'Ce', orbital: '4f7/2', be: 1 },\n  { element: 'Pr', orbital: '4f7/2', be: 2 },\n  { element: 'Nd', orbital: '4f7/2', be: 2 },\n  { element: 'Pm', orbital: '4f7/2', be: 4 },\n  { element: 'Sm', orbital: '4f7/2', be: 7 },\n  { element: 'Tb', orbital: '4f7/2', be: 3 },\n  { element: 'Dy', orbital: '4f7/2', be: 4 },\n  { element: 'Ho', orbital: '4f7/2', be: 4 },\n  { element: 'Er', orbital: '4f7/2', be: 4 },\n  { element: 'Tm', orbital: '4f7/2', be: 5 },\n  { element: 'Yb', orbital: '4f7/2', be: 6 },\n  { element: 'Lu', orbital: '4f7/2', be: 7 },\n  { element: 'Hf', orbital: '4f7/2', be: 18 },\n  { element: 'Ta', orbital: '4f7/2', be: 25 },\n  { element: 'W', orbital: '4f7/2', be: 34 },\n  { element: 'Re', orbital: '4f7/2', be: 45 },\n  { element: 'Os', orbital: '4f7/2', be: 50 },\n  { element: 'Ir', orbital: '4f7/2', be: 60 },\n  { element: 'Pt', orbital: '4f7/2', be: 70 },\n  { element: 'Au', orbital: '4f7/2', be: 83 },\n  { element: 'Hg', orbital: '4f7/2', be: 99 },\n  { element: 'Tl', orbital: '4f7/2', be: 118 },\n  { element: 'Pb', orbital: '4f7/2', be: 138 },\n  { element: 'Bi', orbital: '4f7/2', be: 158 },\n  { element: 'Po', orbital: '4f7/2', be: 184 },\n  { element: 'At', orbital: '4f7/2', be: 210 },\n  { element: 'Rn', orbital: '4f7/2', be: 238 },\n  { element: 'Fr', orbital: '4f7/2', be: 268 },\n  { element: 'Ra', orbital: '4f7/2', be: 299 },\n  { element: 'Ac', orbital: '4f7/2', be: 319 },\n  { element: 'Th', orbital: '4f7/2', be: 335 },\n  { element: 'U', orbital: '4f7/2', be: 380 },\n  { element: 'Ce', orbital: '4f', be: 1 },\n  { element: 'Pr', orbital: '4f', be: 2 },\n  { element: 'Nd', orbital: '4f', be: 2 },\n  { element: 'Pm', orbital: '4f', be: 4 },\n  { element: 'Sm', orbital: '4f', be: 7 },\n  { element: 'Tb', orbital: '4f', be: 3 },\n  { element: 'Dy', orbital: '4f', be: 4 },\n  { element: 'Ho', orbital: '4f', be: 4 },\n  { element: 'Er', orbital: '4f', be: 4 },\n  { element: 'Tm', orbital: '4f', be: 5 },\n  { element: 'Yb', orbital: '4f', be: 6 },\n  { element: 'Lu', orbital: '4f', be: 7 },\n  { element: 'Hf', orbital: '4f', be: 18 },\n  { element: 'Ta', orbital: '4f', be: 25 },\n  { element: 'W', orbital: '4f', be: 34 },\n  { element: 'Re', orbital: '4f', be: 45 },\n  { element: 'Os', orbital: '4f', be: 50 },\n  { element: 'Ir', orbital: '4f', be: 60 },\n  { element: 'Pt', orbital: '4f', be: 70 },\n  { element: 'Au', orbital: '4f', be: 83 },\n  { element: 'Hg', orbital: '4f', be: 99 },\n  { element: 'Tl', orbital: '4f', be: 118 },\n  { element: 'Pb', orbital: '4f', be: 138 },\n  { element: 'Bi', orbital: '4f', be: 158 },\n  { element: 'Po', orbital: '4f', be: 184 },\n  { element: 'At', orbital: '4f', be: 210 },\n  { element: 'Rn', orbital: '4f', be: 238 },\n  { element: 'Fr', orbital: '4f', be: 268 },\n  { element: 'Ra', orbital: '4f', be: 299 },\n  { element: 'Ac', orbital: '4f', be: 319 },\n  { element: 'Th', orbital: '4f', be: 335 },\n  { element: 'U', orbital: '4f', be: 380 },\n  { element: 'Sn', orbital: '5s', be: 1 },\n  { element: 'Sb', orbital: '5s', be: 7 },\n  { element: 'Te', orbital: '5s', be: 12 },\n  { element: 'I', orbital: '5s', be: 14 },\n  { element: 'Xe', orbital: '5s', be: 18 },\n  { element: 'Cs', orbital: '5s', be: 23 },\n  { element: 'Ba', orbital: '5s', be: 40 },\n  { element: 'La', orbital: '5s', be: 33 },\n  { element: 'Ce', orbital: '5s', be: 38 },\n  { element: 'Pr', orbital: '5s', be: 38 },\n  { element: 'Nd', orbital: '5s', be: 38 },\n  { element: 'Pm', orbital: '5s', be: 38 },\n  { element: 'Sm', orbital: '5s', be: 39 },\n  { element: 'Eu', orbital: '5s', be: 32 },\n  { element: 'Gd', orbital: '5s', be: 36 },\n  { element: 'Tb', orbital: '5s', be: 40 },\n  { element: 'Dy', orbital: '5s', be: 63 },\n  { element: 'Ho', orbital: '5s', be: 51 },\n  { element: 'Er', orbital: '5s', be: 60 },\n  { element: 'Tm', orbital: '5s', be: 53 },\n  { element: 'Yb', orbital: '5s', be: 53 },\n  { element: 'Lu', orbital: '5s', be: 57 },\n  { element: 'Hf', orbital: '5s', be: 65 },\n  { element: 'Ta', orbital: '5s', be: 71 },\n  { element: 'W', orbital: '5s', be: 77 },\n  { element: 'Re', orbital: '5s', be: 83 },\n  { element: 'Os', orbital: '5s', be: 84 },\n  { element: 'Ir', orbital: '5s', be: 96 },\n  { element: 'Pt', orbital: '5s', be: 102 },\n  { element: 'Au', orbital: '5s', be: 108 },\n  { element: 'Hg', orbital: '5s', be: 120 },\n  { element: 'Tl', orbital: '5s', be: 137 },\n  { element: 'Pb', orbital: '5s', be: 148 },\n  { element: 'Bi', orbital: '5s', be: 160 },\n  { element: 'Po', orbital: '5s', be: 177 },\n  { element: 'At', orbital: '5s', be: 195 },\n  { element: 'Rn', orbital: '5s', be: 214 },\n  { element: 'Fr', orbital: '5s', be: 234 },\n  { element: 'Ra', orbital: '5s', be: 254 },\n  { element: 'Ac', orbital: '5s', be: 272 },\n  { element: 'Th', orbital: '5s', be: 290 },\n  { element: 'In', orbital: '5p1/2', be: 1 },\n  { element: 'Sn', orbital: '5p1/2', be: 1 },\n  { element: 'Sb', orbital: '5p1/2', be: 2 },\n  { element: 'Te', orbital: '5p1/2', be: 2 },\n  { element: 'I', orbital: '5p1/2', be: 3 },\n  { element: 'Xe', orbital: '5p1/2', be: 7 },\n  { element: 'Cs', orbital: '5p1/2', be: 13 },\n  { element: 'Ba', orbital: '5p1/2', be: 17 },\n  { element: 'La', orbital: '5p1/2', be: 15 },\n  { element: 'Ce', orbital: '5p1/2', be: 20 },\n  { element: 'Pr', orbital: '5p1/2', be: 23 },\n  { element: 'Nd', orbital: '5p1/2', be: 22 },\n  { element: 'Pm', orbital: '5p1/2', be: 22 },\n  { element: 'Sm', orbital: '5p1/2', be: 22 },\n  { element: 'Eu', orbital: '5p1/2', be: 22 },\n  { element: 'Gd', orbital: '5p1/2', be: 21 },\n  { element: 'Tb', orbital: '5p1/2', be: 26 },\n  { element: 'Dy', orbital: '5p1/2', be: 26 },\n  { element: 'Ho', orbital: '5p1/2', be: 20 },\n  { element: 'Er', orbital: '5p1/2', be: 29 },\n  { element: 'Tm', orbital: '5p1/2', be: 32 },\n  { element: 'Yb', orbital: '5p1/2', be: 23 },\n  { element: 'Lu', orbital: '5p1/2', be: 28 },\n  { element: 'Hf', orbital: '5p1/2', be: 38 },\n  { element: 'Ta', orbital: '5p1/2', be: 45 },\n  { element: 'W', orbital: '5p1/2', be: 47 },\n  { element: 'Re', orbital: '5p1/2', be: 46 },\n  { element: 'Os', orbital: '5p1/2', be: 58 },\n  { element: 'Ir', orbital: '5p1/2', be: 63 },\n  { element: 'Pt', orbital: '5p1/2', be: 66 },\n  { element: 'Au', orbital: '5p1/2', be: 72 },\n  { element: 'Hg', orbital: '5p1/2', be: 81 },\n  { element: 'Tl', orbital: '5p1/2', be: 100 },\n  { element: 'Pb', orbital: '5p1/2', be: 105 },\n  { element: 'Bi', orbital: '5p1/2', be: 117 },\n  { element: 'Po', orbital: '5p1/2', be: 132 },\n  { element: 'At', orbital: '5p1/2', be: 148 },\n  { element: 'Rn', orbital: '5p1/2', be: 164 },\n  { element: 'Fr', orbital: '5p1/2', be: 182 },\n  { element: 'Ra', orbital: '5p1/2', be: 200 },\n  { element: 'Ac', orbital: '5p1/2', be: 215 },\n  { element: 'Th', orbital: '5p1/2', be: 229 },\n  { element: 'In', orbital: '5p3/2', be: 1 },\n  { element: 'Sn', orbital: '5p3/2', be: 1 },\n  { element: 'Sb', orbital: '5p3/2', be: 2 },\n  { element: 'Te', orbital: '5p3/2', be: 2 },\n  { element: 'I', orbital: '5p3/2', be: 3 },\n  { element: 'Xe', orbital: '5p3/2', be: 7 },\n  { element: 'Cs', orbital: '5p3/2', be: 12 },\n  { element: 'Ba', orbital: '5p3/2', be: 15 },\n  { element: 'La', orbital: '5p3/2', be: 15 },\n  { element: 'Ce', orbital: '5p3/2', be: 20 },\n  { element: 'Pr', orbital: '5p3/2', be: 23 },\n  { element: 'Nd', orbital: '5p3/2', be: 22 },\n  { element: 'Pm', orbital: '5p3/2', be: 22 },\n  { element: 'Sm', orbital: '5p3/2', be: 22 },\n  { element: 'Eu', orbital: '5p3/2', be: 22 },\n  { element: 'Gd', orbital: '5p3/2', be: 21 },\n  { element: 'Tb', orbital: '5p3/2', be: 26 },\n  { element: 'Dy', orbital: '5p3/2', be: 26 },\n  { element: 'Ho', orbital: '5p3/2', be: 20 },\n  { element: 'Er', orbital: '5p3/2', be: 29 },\n  { element: 'Tm', orbital: '5p3/2', be: 32 },\n  { element: 'Yb', orbital: '5p3/2', be: 23 },\n  { element: 'Lu', orbital: '5p3/2', be: 28 },\n  { element: 'Hf', orbital: '5p3/2', be: 31 },\n  { element: 'Ta', orbital: '5p3/2', be: 37 },\n  { element: 'W', orbital: '5p3/2', be: 37 },\n  { element: 'Re', orbital: '5p3/2', be: 35 },\n  { element: 'Os', orbital: '5p3/2', be: 46 },\n  { element: 'Ir', orbital: '5p3/2', be: 51 },\n  { element: 'Pt', orbital: '5p3/2', be: 51 },\n  { element: 'Au', orbital: '5p3/2', be: 54 },\n  { element: 'Hg', orbital: '5p3/2', be: 58 },\n  { element: 'Tl', orbital: '5p3/2', be: 76 },\n  { element: 'Pb', orbital: '5p3/2', be: 86 },\n  { element: 'Bi', orbital: '5p3/2', be: 93 },\n  { element: 'Po', orbital: '5p3/2', be: 104 },\n  { element: 'At', orbital: '5p3/2', be: 115 },\n  { element: 'Rn', orbital: '5p3/2', be: 127 },\n  { element: 'Fr', orbital: '5p3/2', be: 140 },\n  { element: 'Ra', orbital: '5p3/2', be: 153 },\n  { element: 'Ac', orbital: '5p3/2', be: 167 },\n  { element: 'Th', orbital: '5p3/2', be: 182 },\n  { element: 'In', orbital: '5p', be: 1 },\n  { element: 'Sn', orbital: '5p', be: 1 },\n  { element: 'Sb', orbital: '5p', be: 2 },\n  { element: 'Te', orbital: '5p', be: 2 },\n  { element: 'I', orbital: '5p', be: 3 },\n  { element: 'Xe', orbital: '5p', be: 7 },\n  { element: 'Cs', orbital: '5p', be: 12 },\n  { element: 'Ba', orbital: '5p', be: 15 },\n  { element: 'La', orbital: '5p', be: 15 },\n  { element: 'Ce', orbital: '5p', be: 20 },\n  { element: 'Pr', orbital: '5p', be: 23 },\n  { element: 'Nd', orbital: '5p', be: 22 },\n  { element: 'Pm', orbital: '5p', be: 22 },\n  { element: 'Sm', orbital: '5p', be: 22 },\n  { element: 'Eu', orbital: '5p', be: 22 },\n  { element: 'Gd', orbital: '5p', be: 21 },\n  { element: 'Tb', orbital: '5p', be: 26 },\n  { element: 'Dy', orbital: '5p', be: 26 },\n  { element: 'Ho', orbital: '5p', be: 20 },\n  { element: 'Er', orbital: '5p', be: 29 },\n  { element: 'Tm', orbital: '5p', be: 32 },\n  { element: 'Yb', orbital: '5p', be: 23 },\n  { element: 'Lu', orbital: '5p', be: 28 },\n  { element: 'Hf', orbital: '5p', be: 31 },\n  { element: 'Ta', orbital: '5p', be: 37 },\n  { element: 'W', orbital: '5p', be: 37 },\n  { element: 'Re', orbital: '5p', be: 35 },\n  { element: 'Os', orbital: '5p', be: 46 },\n  { element: 'Ir', orbital: '5p', be: 51 },\n  { element: 'Pt', orbital: '5p', be: 51 },\n  { element: 'Au', orbital: '5p', be: 54 },\n  { element: 'Hg', orbital: '5p', be: 58 },\n  { element: 'Tl', orbital: '5p', be: 76 },\n  { element: 'Pb', orbital: '5p', be: 86 },\n  { element: 'Bi', orbital: '5p', be: 93 },\n  { element: 'Po', orbital: '5p', be: 104 },\n  { element: 'At', orbital: '5p', be: 115 },\n  { element: 'Rn', orbital: '5p', be: 127 },\n  { element: 'Fr', orbital: '5p', be: 140 },\n  { element: 'Ra', orbital: '5p', be: 153 },\n  { element: 'Ac', orbital: '5p', be: 167 },\n  { element: 'Th', orbital: '5p', be: 182 },\n  { element: 'Lu', orbital: '5d3/2', be: 5 },\n  { element: 'Hf', orbital: '5d3/2', be: 7 },\n  { element: 'Ta', orbital: '5d3/2', be: 6 },\n  { element: 'W', orbital: '5d3/2', be: 6 },\n  { element: 'Re', orbital: '5d3/2', be: 4 },\n  { element: 'Ir', orbital: '5d3/2', be: 4 },\n  { element: 'Pt', orbital: '5d3/2', be: 2 },\n  { element: 'Au', orbital: '5d3/2', be: 3 },\n  { element: 'Hg', orbital: '5d3/2', be: 7 },\n  { element: 'Tl', orbital: '5d3/2', be: 16 },\n  { element: 'Pb', orbital: '5d3/2', be: 22 },\n  { element: 'Bi', orbital: '5d3/2', be: 27 },\n  { element: 'Po', orbital: '5d3/2', be: 31 },\n  { element: 'At', orbital: '5d3/2', be: 40 },\n  { element: 'Rn', orbital: '5d3/2', be: 48 },\n  { element: 'Fr', orbital: '5d3/2', be: 58 },\n  { element: 'Ra', orbital: '5d3/2', be: 68 },\n  { element: 'Ac', orbital: '5d3/2', be: 80 },\n  { element: 'Th', orbital: '5d3/2', be: 95 },\n  { element: 'U', orbital: '5d3/2', be: 104 },\n  { element: 'Lu', orbital: '5d5/2', be: 5 },\n  { element: 'Hf', orbital: '5d5/2', be: 7 },\n  { element: 'Ta', orbital: '5d5/2', be: 6 },\n  { element: 'W', orbital: '5d5/2', be: 6 },\n  { element: 'Re', orbital: '5d5/2', be: 4 },\n  { element: 'Ir', orbital: '5d5/2', be: 4 },\n  { element: 'Pt', orbital: '5d5/2', be: 2 },\n  { element: 'Au', orbital: '5d5/2', be: 3 },\n  { element: 'Hg', orbital: '5d5/2', be: 7 },\n  { element: 'Tl', orbital: '5d5/2', be: 13 },\n  { element: 'Pb', orbital: '5d5/2', be: 20 },\n  { element: 'Bi', orbital: '5d5/2', be: 25 },\n  { element: 'Po', orbital: '5d5/2', be: 31 },\n  { element: 'At', orbital: '5d5/2', be: 40 },\n  { element: 'Rn', orbital: '5d5/2', be: 48 },\n  { element: 'Fr', orbital: '5d5/2', be: 58 },\n  { element: 'Ra', orbital: '5d5/2', be: 68 },\n  { element: 'Ac', orbital: '5d5/2', be: 80 },\n  { element: 'Th', orbital: '5d5/2', be: 88 },\n  { element: 'U', orbital: '5d5/2', be: 96 },\n  { element: 'Lu', orbital: '5d', be: 5 },\n  { element: 'Hf', orbital: '5d', be: 7 },\n  { element: 'Ta', orbital: '5d', be: 6 },\n  { element: 'W', orbital: '5d', be: 6 },\n  { element: 'Re', orbital: '5d', be: 4 },\n  { element: 'Ir', orbital: '5d', be: 4 },\n  { element: 'Pt', orbital: '5d', be: 2 },\n  { element: 'Au', orbital: '5d', be: 3 },\n  { element: 'Hg', orbital: '5d', be: 7 },\n  { element: 'Tl', orbital: '5d', be: 13 },\n  { element: 'Pb', orbital: '5d', be: 20 },\n  { element: 'Bi', orbital: '5d', be: 25 },\n  { element: 'Po', orbital: '5d', be: 31 },\n  { element: 'At', orbital: '5d', be: 40 },\n  { element: 'Rn', orbital: '5d', be: 48 },\n  { element: 'Fr', orbital: '5d', be: 58 },\n  { element: 'Ra', orbital: '5d', be: 68 },\n  { element: 'Ac', orbital: '5d', be: 80 },\n  { element: 'Th', orbital: '5d', be: 88 },\n  { element: 'U', orbital: '5d', be: 96 },\n  { element: 'Pb', orbital: '6s', be: 3 },\n  { element: 'Bi', orbital: '6s', be: 8 },\n  { element: 'Po', orbital: '6s', be: 12 },\n  { element: 'At', orbital: '6s', be: 18 },\n  { element: 'Rn', orbital: '6s', be: 26 },\n  { element: 'Fr', orbital: '6s', be: 34 },\n  { element: 'Ra', orbital: '6s', be: 44 },\n  { element: 'Th', orbital: '6s', be: 60 },\n  { element: 'Pb', orbital: '6p1/2', be: 1 },\n  { element: 'Bi', orbital: '6p1/2', be: 3 },\n  { element: 'Po', orbital: '6p1/2', be: 5 },\n  { element: 'At', orbital: '6p1/2', be: 8 },\n  { element: 'Rn', orbital: '6p1/2', be: 11 },\n  { element: 'Fr', orbital: '6p1/2', be: 15 },\n  { element: 'Ra', orbital: '6p1/2', be: 19 },\n  { element: 'Th', orbital: '6p1/2', be: 49 },\n  { element: 'U', orbital: '6p1/2', be: 28.9 },\n  { element: 'Pb', orbital: '6p3/2', be: 1 },\n  { element: 'Bi', orbital: '6p3/2', be: 3 },\n  { element: 'Po', orbital: '6p3/2', be: 5 },\n  { element: 'At', orbital: '6p3/2', be: 8 },\n  { element: 'Rn', orbital: '6p3/2', be: 11 },\n  { element: 'Fr', orbital: '6p3/2', be: 15 },\n  { element: 'Ra', orbital: '6p3/2', be: 19 },\n  { element: 'Th', orbital: '6p3/2', be: 43 },\n  { element: 'U', orbital: '6p3/2', be: 19 },\n  { element: 'Pb', orbital: '6p', be: 1 },\n  { element: 'Bi', orbital: '6p', be: 3 },\n  { element: 'Po', orbital: '6p', be: 5 },\n  { element: 'At', orbital: '6p', be: 8 },\n  { element: 'Rn', orbital: '6p', be: 11 },\n  { element: 'Fr', orbital: '6p', be: 15 },\n  { element: 'Ra', orbital: '6p', be: 19 },\n  { element: 'Th', orbital: '6p', be: 43 },\n  { element: 'U', orbital: '6p', be: 19 },\n];\n","import { JSGraph as OriginalJSGraph } from 'common-spectrum';\n\nimport { getAnnotations } from './jsgraph/getAnnotations';\n\nexport {\n  Analysis,\n  AnalysesManager,\n  fromJcamp,\n  toJcamp,\n  toJcamps,\n} from 'common-spectrum';\n\nexport { fromVamas } from './from/fromVamas';\n\nexport { peakPicking } from './peakPicking';\n\nexport { references } from './references';\n\nexport const JSGraph = { ...OriginalJSGraph, getAnnotations };\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","a","d","e","f","length","g","h","i","j","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","xAdd","array1","array2","isConstant","constant","Error","Number","array3","Array","xMultiply","Float64Array","xDivide","_typeof","obj","Symbol","iterator","constructor","sequentialFill","arguments","undefined","options","_options","_options$from","from","_options$to","to","_options$size","size","step","Math","floor","push","_i","xIsMonotone","array","sum","sumValue","mean","min","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","minValue","max","maxValue","xSubtract","xyCheck","data","x","y","xyEnsureGrowingX","prevX","Infinity","ansX","ansY","index","xyFilterXPositive","newX","newY","GAUSSIAN_EXP_FACTOR","LN2","ROOT_PI_OVER_LN2","sqrt","PI","ROOT_THREE","ROOT_2LN2","ROOT_2LN2_MINUS_ONE","erfinv","ln1MinusXSqrd","log","lnEtcBy2Plus2","firstSqrt","secondSqrt","Gaussian","fwhm","sd","widthToFWHM","height","getData","factor","getFactor","ceil","pow","center","fct","area","getArea","width","fwhmToWidth","setFWHM","setHeight","exp","Lorentzian","squareFWHM","tan","PseudoVoigt","mu","setMu","axis","Gaussian2D","globalFWHM","xLength","xFactor","yLength","yFactor","xCenter","yCenter","volume","getVolume","axisLabel","axisName","toLowerCase","xFWHM","yFWHM","getShapeGenerator","kind","shapeOptions","replace","SavitzkyGolay","ys","xs","windowSize","derivative","polynomial","RangeError","console","warn","half","np","ans","weights","fullWeights","hs","constantH","wg1","wg2","d1","d2","l","getHs","wg","count","GramPoly","m","k","s","Grampoly","GenFact","gf","Weight","t","n","gsd","noiseLevel","sgOptions","shape","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","yIn","equalSpaced","isEqualSpaced","getNoiseLevel","yData","dY","ddY","SG","xData","dX","maxDdy","maxY","abs","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","widthProcessor","signals","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","MAX_VALUE","soft","left","right","yLeft","yRight","determineRealTop","base","sort","tmp","maxDx","minDx","MAX_SAFE_INTEGER","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","inspectData","rows","columns","maxI","maxJ","result","line","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","installMathOperations","AbstractMatrix","Matrix","add","value","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","fround","log1p","log2","round","sign","sin","sinh","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","checkNonEmpty","isEmpty","sumByRow","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","NaN","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","IxB","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","LUcolj","kmax","LU","isSingular","col","solve","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","ldlSymbolic","Ap","Ai","Lp","Parent","Lnz","Flag","kk","p2","ldlNumeric","Ax","Li","Lx","D","Pattern","yi","lKi","len","top","ldlLsolve","ldlDsolve","ldlLTsolve","ldlPerm","B","P","ldlPermt","prepare","M","Pinv","Mt","ar","ac","LNZ","coloffset","adr","bp1","cuthillMckee_1","cuthillMckee","compareNum","list","adj","visited","toVisit","eol","ptr","nbhd","u","getClosestNumber","goal","closest","reduce","prev","curr","getCloseIndex","updateSystem","nbPoints","newVector","w","next","getDeltaMatrix","lambda","lowerTriangularNonZeros","permutationEncodedArray","airPLS","maxIterations","factorCriterion","controlPoints","baseLineZones","forEach","arr","range","indexFrom","indexTo","baseline","iteration","sumNegDifferences","stopCriterion","cho","Cholesky","difference","map","calculateError","maxNegativeDiff","diff","corrected","error","airPLSBaseline","numberPoints","regressionOptions","airpls","correctedSpectrum","maybeToPrecision","digits","checkArraySize","BaseRegression","new","target","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","PolynomialRegression","degree","powers","coefficients","checkArrayLength","regress","precision","_toFormula","isLaTeX","sup","closeSup","times","fn","str","charAt","load","json","pr","F","FT","A","baselineCorrectionRegression","Regression","tolerance","fitting","oldFitting","delta","regression","iterativePolynomialBaseline","baselineCorrection","xCheck","xPadding","algorithm","fromEnd","toEnd","xRolling","padding","subArray","buffer","xRollingAverage","xRollingMedian","rollingAverageBaseline","defaults","actualOptions","assign","rollingBall","spectrum","maxima","minima","windowM","windowS","windowLeft","windowRight","rollingBallBaseline","rollingMedianBaseline","_options$algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","sumFactor","_i2","concat","normalize","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","zone","filter","currentZone","invert","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","previous","current","unitsPerPoint","currentTotal","equallySpacedSlot","halfStep","lastStep","start","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","integral","x0","x1","slope","intercept","equallySpacedSmooth","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","getSlope","y0","y1","equallySpaced","arrayXY","reverse","variant","xResult","yResult","zoneResult","processZone","getZones","currentFrom","filterX","points","currentZoneIndex","position","defaultOptions","arrayCase","cond","matrixCase","padArray","src","values","minMax","arithmeticMean","geometricMean","logMean","lnsum","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","theMean","theVariance","standardError","robustMeanAndStdev","stdev","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weightedStandardDeviation","weightedVariance","z","inPlace","standardize","standardDev","Stat","normed","global","factory","this","isString","isFiniteImpl","isNumber","uniq","strings","seen","item","hasOwnProperty","compareArray","properties","keys","key","mulSafe","decimals","arg","getFractional","divSafe","den","invDen","val","QtyError","err","create","message","stack","throwIncompatibleUnits","UNITS","BASE_UNITS","UNITY","UNITY_ARRAY","validateUnitDefinition","unitDef","definition","scalar","numerator","denominator","unit","PREFIX_VALUES","PREFIX_MAP","UNIT_VALUES","UNIT_MAP","OUTPUT_MAP","getUnits","units","unitKeys","substr","getKinds","getAliases","unitName","SIGNATURE_VECTOR","unitSignature","signature","unitSignatureVector","isBase","toBase","SIGN","INTEGER","SIGNED_INTEGER","FRACTION","FLOAT","EXPONENT","SCI_NUMBER","SIGNED_NUMBER","QTY_STRING","QTY_STRING_REGEX","RegExp","POWER_OP","SAFE_POWER","TOP_REGEX","BOTTOM_REGEX","trim","exec","scalarMatch","parseFloat","bottom","nx","UNIT_TEST_REGEX","test","parseUnits","PREFIX_REGEX","UNIT_REGEX","BOUNDARY_REGEX","UNIT_MATCH","UNIT_MATCH_REGEX","parsedUnitsCache","cached","unitMatch","normalizedUnits","globalParse","isQty","Qty","initValue","initUnits","assertValidConstructorArgs","baseScalar","_conversionCache","isDefinitionObject","updateBaseScalar","isTemperature","KINDS","knownSignature","isDegrees","match","subtractTemperatures","lhs","rhs","lhsUnits","rhsConverted","dstDegrees","getDegreeUnits","subtractTempDegrees","deg","tempDegrees","addTempDegrees","toDegrees","dst","srcDegK","toDegK","dstUnits","dstScalar","qty","toTemp","toTempK","isCompatible","isInverse","baseUnitCache","toBaseUnits","toFloat","isUnitless","toPrec","precQuantity","precRoundedResult","swiftConverter","srcUnits","srcQty","dstQty","eq","convert","converter","op1","op2","numdenscale","cleanTerms","num1","den1","num2","den2","notUnity","combined","combineTerms","terms","direction","prefix","prefixValue","combinedPrefixValue","prop","compareTo","lt","lte","gt","gte","same","every","_isBase","NestedMap","childMap","defaultFormatter","formatter","_units","numIsUnity","denIsUnity","numUnits","stringifyUnits","denUnits","targetUnitsOrMaxDecimalsOrPrec","maxDecimals","targetUnits","out","outScalar","format","targetQty","stringifiedUnitsCache","stringified","isUnity","simplify","getOutputNames","unitNames","token","tokenNext","unitCounts","acc","unitCounter","unitCount","version","ensureString","blob","encoding","ArrayBuffer","isView","decoder","TextDecoder","decode","GC_MS_FIELDS","complexChromatogram","spectra","chromatogram","series","ms","dimension","existingGCMSFields","label","convertMSFieldToLabel","pageValue","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","parseXY","parseXYZ","lines","split","logs","numberOfVariables","variable","parseXYA","removeSymbolRegExp","isXYAdata","convertTo3DZ","minZ","maxZ","ySize","xSize","lastX","lastY","medians","getMedian","minX","maxX","minY","noise","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","gyromagneticRatio","postProcessingNMR","entriesFlat","entry","observeFrequency","shiftOffsetVal","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","startsWith","$NUC2","f2index","$NUC1","yType","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","lowerCaseSymbol","vardim","varname","yUnits","prepareSpectrum","ntuplesSeparatorRegExp","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","infos","datatable","parentEntry","info","meta","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","page","sampleDescription","pop","flatten","creatorNtuples","owner","origin","varName","varType","varDim","minFct","maxFct","header","point","fromJSON","fromVariables","forceNtuples","jcampOptions","xLabel","yLabel","JSGraph","getAnnotations","components","fillColor","strokeColor","creationFct","annotations","component","annotation","strokeWidth","getAnnotation","showAssignment","labels","energy","kineticEnergy","bindingEnergy","text","assignment","anchor","color","pointer","parsed","blocks","parseHeader","nbBlocks","parseBlock","nbComments","comments","nbExperimentVariables","experimentVariables","nbEntriesInclusionExclusion","blockParametersincludes","nbFutureUpgradeExperimentEntries","futureUpgradeExperimentEntries","firstBlock","block","month","hours","minutes","seconds","blockComment","technique","nbCorrespondingVariables","correspondingVariables","nbAdditionalNumericalParameters","additionalNumericalParameters","nbOrdinateValues","correspondingVariable","minimumOrdinateValue","maximumOrdinateValue","appendCalibration","calibrations","calibration","fields","appendComponent","componentRegex","source","groups","parseShape","parseArea","parseFWHM","parsePosition","rsf","parseRSF","mass","parseMass","parseIndex","const","parseConst","uncorrectedRSF","parseUncorrectedRSF","parts","asymmetry","extension","unknown","unknown1","unknown2","appendRegion","regions","region","background","backgroundKind","backgroundOptions","parseCASA","casa","mapComponents","parsedBlockComment","sourceEnergy","energyUnits","shapeParameters","XPS_REGEX","AUGER_REGEX","parseRegion","string","orbital","element","shell","angularMomentum","auger","transition","xpsMatches","augerMatches","getNormalizedMeta","normalized","energyType","characteristicEnergy","beamWidthX","beamWidthY","analysisSource","speciesLabel","increment","analyserMode","fromVamas","analysis","Analysis","yVariable","yValues","xStart","xIncrement","xValues","cheminfo","pushSpectrum","peakPicking","gsdOptions","peaks","references","be","OriginalJSGraph"],"mappings":"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"}